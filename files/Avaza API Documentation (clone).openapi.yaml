openapi: 3.0.1
info:
  title: Avaza API Documentation (clone)
  description: 'Welcome to the autogenerated documentation & test tool for Avaza''s API. <br/><br/><strong>API Security & Authentication</strong><br/>Authentication options include OAuth2 Implicit and Authorization Code flows, and Personal Access Token. All connections should be encrypted over SSL/TLS <br/><br/>You can set up and manage your api authentication credentials from within your Avaza account. (requires Administrator permissions on your Avaza account).<br/><br/> OAuth2 Authorization endpoint: https://any.avaza.com/oauth2/authorize  <br/>OAuth2 Token endpoint: https://any.avaza.com/oauth2/token<br/>Base URL for subsequent API Requests: https://api.avaza.com/ <br/><br/>Blogpost about authenticating with Avaza''s API:  https://www.avaza.com/avaza-api-oauth2-authentication/ <br/>Blogpost on using Avaza''s webhooks: https://www.avaza.com/avaza-api-webhook-notifications/<br/>The OAuth flow currently issues Access Tokens that last 1 day, and Refresh tokens that last 180 days<br/>The Api respects the security Roles assigned to the authenticating Avaza user and filters the data return appropriately. <br/><br><strong>Support</strong><br/>For API Support, and to request access please contact Avaza Support Team via our support chat. <br/><br/><strong>User Contributed Libraries:</strong><br/>Graciously contributed by 3rd party users like you. <br/>Note these are not tested or endorsesd by Avaza. We encourage you to review before use, and use at own risk.<br/> <ul><li> - <a target=''blank'' href=''https://packagist.org/packages/debiprasad/oauth2-avaza''>PHP OAuth Client Package for Azava API (by Debiprasad Sahoo)</a></li></ul>'
  version: '1.0'
servers:
  - url: https://apiminstancepeabody.azure-api.net/avaza-clone
paths:
  /api/Company:
    post:
      summary: Create a Company
      description: Create a Company
      operationId: 61af660b53306c98d14d8a8c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompany'
            example:
              CompanyName: string
              CurrencyCode: string
              BillingAddressLine: string
              BillingAddressCity: string
              BillingAddressState: string
              BillingAddressPostCode: string
              BillingCountryCode: string
              BillingAddress: string
              Phone: string
              Fax: string
              website: string
              TaxNumber: string
              Comments: string
          text/json:
            schema:
              $ref: '#/components/schemas/NewCompany'
            example:
              CompanyName: string
              CurrencyCode: string
              BillingAddressLine: string
              BillingAddressCity: string
              BillingAddressState: string
              BillingAddressPostCode: string
              BillingCountryCode: string
              BillingAddress: string
              Phone: string
              Fax: string
              website: string
              TaxNumber: string
              Comments: string
          application/xml:
            schema:
              $ref: '#/components/schemas/NewCompany'
            example: "<NewCompany>{\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"BillingAddressLine\": \"string\",\r\n  \"BillingAddressCity\": \"string\",\r\n  \"BillingAddressState\": \"string\",\r\n  \"BillingAddressPostCode\": \"string\",\r\n  \"BillingCountryCode\": \"string\",\r\n  \"BillingAddress\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"Fax\": \"string\",\r\n  \"website\": \"string\",\r\n  \"TaxNumber\": \"string\",\r\n  \"Comments\": \"string\"\r\n}</NewCompany>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewCompany'
            example: "<NewCompany>{\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"BillingAddressLine\": \"string\",\r\n  \"BillingAddressCity\": \"string\",\r\n  \"BillingAddressState\": \"string\",\r\n  \"BillingAddressPostCode\": \"string\",\r\n  \"BillingCountryCode\": \"string\",\r\n  \"BillingAddress\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"Fax\": \"string\",\r\n  \"website\": \"string\",\r\n  \"TaxNumber\": \"string\",\r\n  \"Comments\": \"string\"\r\n}</NewCompany>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                CompanyName:
                  type: string
                CurrencyCode:
                  type: string
                BillingAddressLine:
                  type: string
                BillingAddressCity:
                  type: string
                BillingAddressState:
                  type: string
                BillingAddressPostCode:
                  type: string
                BillingCountryCode:
                  type: string
                BillingAddress:
                  type: string
                Phone:
                  type: string
                Fax:
                  type: string
                website:
                  type: string
                TaxNumber:
                  type: string
                Comments:
                  type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
            text/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    get:
      summary: Gets list of Companies
      description: Gets list of Companies
      operationId: 61af6618b96c50b158eeabc1
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of results per page
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. 1 based page number to retrieve
          schema:
            type: integer
        - name: Sort
          in: query
          description: '(optional) Supply one of: "DateUpdated", "DateCreated", "CompanyName","DateUpdated desc","DateCreated desc", "CompanyName desc"'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyList'
              example:
                Companies:
                  - CompanyID: 0
                    CompanyName: string
                    BillingAddressLine: string
                    BillingAddressCity: string
                    BillingAddressState: string
                    BillingAddressPostCode: string
                    BillingCountryCode: string
                    BillingAddress: string
                    Phone: string
                    Fax: string
                    website: string
                    TaxNumber: string
                    Comments: string
                    CurrencyCode: string
                    DefaultTradingTermIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                    Contacts:
                      - ContactID: 0
                        CompanyIDFK: 0
                        CompanyName: string
                        Firstname: string
                        Lastname: string
                        Email: string
                        Phone: string
                        Mobile: string
                        PositionTitle: string
                        TimeZone: string
                        DateCreated: string
                        DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyList'
              example:
                Companies:
                  - CompanyID: 0
                    CompanyName: string
                    BillingAddressLine: string
                    BillingAddressCity: string
                    BillingAddressState: string
                    BillingAddressPostCode: string
                    BillingCountryCode: string
                    BillingAddress: string
                    Phone: string
                    Fax: string
                    website: string
                    TaxNumber: string
                    Comments: string
                    CurrencyCode: string
                    DefaultTradingTermIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                    Contacts:
                      - ContactID: 0
                        CompanyIDFK: 0
                        CompanyName: string
                        Firstname: string
                        Lastname: string
                        Email: string
                        Phone: string
                        Mobile: string
                        PositionTitle: string
                        TimeZone: string
                        DateCreated: string
                        DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyList'
              example: <CompanyList> <Companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Companies> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </CompanyList>
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyList'
              example: <CompanyList> <Companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Companies> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </CompanyList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    put:
      summary: Update a Company record.
      description: Requires CompanyID and a list of field names to update. The FieldsToUpdate field accepts a string array containing field names that should be updated.
      operationId: 61af661a111e7ee8b0c23453
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
            example:
              CompanyID: 0
              FieldsToUpdate:
                - string
              CompanyName: string
              BillingAddressLine: string
              BillingAddressCity: string
              BillingAddressState: string
              BillingAddressPostCode: string
              BillingCountryCode: string
              BillingAddress: string
              Phone: string
              Fax: string
              website: string
              TaxNumber: string
              Comments: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
            example:
              CompanyID: 0
              FieldsToUpdate:
                - string
              CompanyName: string
              BillingAddressLine: string
              BillingAddressCity: string
              BillingAddressState: string
              BillingAddressPostCode: string
              BillingCountryCode: string
              BillingAddress: string
              Phone: string
              Fax: string
              website: string
              TaxNumber: string
              Comments: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
            example: "<UpdateCompany>{\r\n  \"CompanyID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"CompanyName\": \"string\",\r\n  \"BillingAddressLine\": \"string\",\r\n  \"BillingAddressCity\": \"string\",\r\n  \"BillingAddressState\": \"string\",\r\n  \"BillingAddressPostCode\": \"string\",\r\n  \"BillingCountryCode\": \"string\",\r\n  \"BillingAddress\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"Fax\": \"string\",\r\n  \"website\": \"string\",\r\n  \"TaxNumber\": \"string\",\r\n  \"Comments\": \"string\"\r\n}</UpdateCompany>"
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateCompany'
            example: "<UpdateCompany>{\r\n  \"CompanyID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"CompanyName\": \"string\",\r\n  \"BillingAddressLine\": \"string\",\r\n  \"BillingAddressCity\": \"string\",\r\n  \"BillingAddressState\": \"string\",\r\n  \"BillingAddressPostCode\": \"string\",\r\n  \"BillingCountryCode\": \"string\",\r\n  \"BillingAddress\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"Fax\": \"string\",\r\n  \"website\": \"string\",\r\n  \"TaxNumber\": \"string\",\r\n  \"Comments\": \"string\"\r\n}</UpdateCompany>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                CompanyID:
                  type: integer
                FieldsToUpdate:
                  type: array
                CompanyName:
                  type: string
                BillingAddressLine:
                  type: string
                BillingAddressCity:
                  type: string
                BillingAddressState:
                  type: string
                BillingAddressPostCode:
                  type: string
                BillingCountryCode:
                  type: string
                BillingAddress:
                  type: string
                Phone:
                  type: string
                Fax:
                  type: string
                website:
                  type: string
                TaxNumber:
                  type: string
                Comments:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
            text/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
  /api/Section:
    delete:
      summary: Delete a Section
      description: Delete a Section
      operationId: 61af660af209a0772c741369
      parameters:
        - name: SectionID
          in: query
          description: Format - int64.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSectionDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiSectionDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiSectionDelete200TextXmlResponse'
              example: <ApiSectionDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiSectionDelete200TextXmlResponse'
              example: <ApiSectionDelete200TextXmlResponse />
    post:
      summary: Create a Section
      description: Create a Section
      operationId: 61af660bdb32dc6a09d23117
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSection'
            example:
              ProjectIDFK: 0
              Title: string
              StartDateUTC: string
              EndDateUTC: string
          text/json:
            schema:
              $ref: '#/components/schemas/NewSection'
            example:
              ProjectIDFK: 0
              Title: string
              StartDateUTC: string
              EndDateUTC: string
          application/xml:
            schema:
              $ref: '#/components/schemas/NewSection'
            example: "<NewSection>{\r\n  \"ProjectIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"StartDateUTC\": \"string\",\r\n  \"EndDateUTC\": \"string\"\r\n}</NewSection>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewSection'
            example: "<NewSection>{\r\n  \"ProjectIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"StartDateUTC\": \"string\",\r\n  \"EndDateUTC\": \"string\"\r\n}</NewSection>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ProjectIDFK:
                  type: integer
                Title:
                  type: string
                StartDateUTC:
                  type: string
                EndDateUTC:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionDetails'
              example:
                SectionID: 0
                ProjectIDFK: 0
                Title: string
                DisplayOrder: 0
                StartDateUTC: string
                StartDate: string
                EndDateUTC: string
                EndDate: string
            text/json:
              schema:
                $ref: '#/components/schemas/SectionDetails'
              example:
                SectionID: 0
                ProjectIDFK: 0
                Title: string
                DisplayOrder: 0
                StartDateUTC: string
                StartDate: string
                EndDateUTC: string
                EndDate: string
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionDetails'
              example: <SectionDetails> <SectionID>0</SectionID> <ProjectIDFK>0</ProjectIDFK> <Title>string</Title> <DisplayOrder>0</DisplayOrder> <StartDateUTC>string</StartDateUTC> <StartDate>string</StartDate> <EndDateUTC>string</EndDateUTC> <EndDate>string</EndDate> </SectionDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/SectionDetails'
              example: <SectionDetails> <SectionID>0</SectionID> <ProjectIDFK>0</ProjectIDFK> <Title>string</Title> <DisplayOrder>0</DisplayOrder> <StartDateUTC>string</StartDateUTC> <StartDate>string</StartDate> <EndDateUTC>string</EndDateUTC> <EndDate>string</EndDate> </SectionDetails>
    get:
      summary: Gets list of Sections
      description: Gets list of Sections
      operationId: 61af66140d5b35daa660200f
      parameters:
        - name: ProjectID
          in: query
          description: Format - int32. Get sections for Project with ProjectID
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SectionList'
              example:
                Sections:
                  - SectionID: 0
                    ProjectIDFK: 0
                    Title: string
                    DisplayOrder: 0
                    StartDateUTC: string
                    StartDate: string
                    EndDateUTC: string
                    EndDate: string
                TotalCount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/SectionList'
              example:
                Sections:
                  - SectionID: 0
                    ProjectIDFK: 0
                    Title: string
                    DisplayOrder: 0
                    StartDateUTC: string
                    StartDate: string
                    EndDateUTC: string
                    EndDate: string
                TotalCount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/SectionList'
              example: <SectionList> <Sections> <SectionID>0</SectionID> <ProjectIDFK>0</ProjectIDFK> <Title>string</Title> <DisplayOrder>0</DisplayOrder> <StartDateUTC>string</StartDateUTC> <StartDate>string</StartDate> <EndDateUTC>string</EndDateUTC> <EndDate>string</EndDate> </Sections> <TotalCount>0</TotalCount> </SectionList>
            text/xml:
              schema:
                $ref: '#/components/schemas/SectionList'
              example: <SectionList> <Sections> <SectionID>0</SectionID> <ProjectIDFK>0</ProjectIDFK> <Title>string</Title> <DisplayOrder>0</DisplayOrder> <StartDateUTC>string</StartDateUTC> <StartDate>string</StartDate> <EndDateUTC>string</EndDateUTC> <EndDate>string</EndDate> </Sections> <TotalCount>0</TotalCount> </SectionList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Account:
    get:
      summary: Account Details
      description: Account Details
      operationId: 61af660a8fa2f400f4df2310
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
              example:
                AccountID: 0
                CompanyName: string
                Subdomain: string
                AccountEmail: string
                hasStartEndTimesheets: true
                has24HourTimesheetFormat: true
                WeeklyTimesheetReminder: true
                LockApprovedTimesheets: true
                TimesheetDayOfWeek: 0
                TimesheetDisplayFormatCode: string
                AllowHidingCompletedTasksOnTimesheet: true
                CurrentServerTimeISO: string
                SC: string
                DefaultCurrencyCode: string
                ExpenseApprovalRequired: true
                LockApprovedExpenses: true
                BrandPrimaryColor: string
                BrandPrimaryColorLuminance: string
            text/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
              example:
                AccountID: 0
                CompanyName: string
                Subdomain: string
                AccountEmail: string
                hasStartEndTimesheets: true
                has24HourTimesheetFormat: true
                WeeklyTimesheetReminder: true
                LockApprovedTimesheets: true
                TimesheetDayOfWeek: 0
                TimesheetDisplayFormatCode: string
                AllowHidingCompletedTasksOnTimesheet: true
                CurrentServerTimeISO: string
                SC: string
                DefaultCurrencyCode: string
                ExpenseApprovalRequired: true
                LockApprovedExpenses: true
                BrandPrimaryColor: string
                BrandPrimaryColorLuminance: string
            application/xml:
              schema:
                $ref: '#/components/schemas/AccountDetails'
              example: <AccountDetails> <AccountID>0</AccountID> <CompanyName>string</CompanyName> <Subdomain>string</Subdomain> <AccountEmail>string</AccountEmail> <hasStartEndTimesheets>true</hasStartEndTimesheets> <has24HourTimesheetFormat>true</has24HourTimesheetFormat> <WeeklyTimesheetReminder>true</WeeklyTimesheetReminder> <LockApprovedTimesheets>true</LockApprovedTimesheets> <TimesheetDayOfWeek>0</TimesheetDayOfWeek> <TimesheetDisplayFormatCode>string</TimesheetDisplayFormatCode> <AllowHidingCompletedTasksOnTimesheet>true</AllowHidingCompletedTasksOnTimesheet> <CurrentServerTimeISO>string</CurrentServerTimeISO> <SC>string</SC> <DefaultCurrencyCode>string</DefaultCurrencyCode> <ExpenseApprovalRequired>true</ExpenseApprovalRequired> <LockApprovedExpenses>true</LockApprovedExpenses> <BrandPrimaryColor>string</BrandPrimaryColor> <BrandPrimaryColorLuminance>string</BrandPrimaryColorLuminance> </AccountDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/AccountDetails'
              example: <AccountDetails> <AccountID>0</AccountID> <CompanyName>string</CompanyName> <Subdomain>string</Subdomain> <AccountEmail>string</AccountEmail> <hasStartEndTimesheets>true</hasStartEndTimesheets> <has24HourTimesheetFormat>true</has24HourTimesheetFormat> <WeeklyTimesheetReminder>true</WeeklyTimesheetReminder> <LockApprovedTimesheets>true</LockApprovedTimesheets> <TimesheetDayOfWeek>0</TimesheetDayOfWeek> <TimesheetDisplayFormatCode>string</TimesheetDisplayFormatCode> <AllowHidingCompletedTasksOnTimesheet>true</AllowHidingCompletedTasksOnTimesheet> <CurrentServerTimeISO>string</CurrentServerTimeISO> <SC>string</SC> <DefaultCurrencyCode>string</DefaultCurrencyCode> <ExpenseApprovalRequired>true</ExpenseApprovalRequired> <LockApprovedExpenses>true</LockApprovedExpenses> <BrandPrimaryColor>string</BrandPrimaryColor> <BrandPrimaryColorLuminance>string</BrandPrimaryColorLuminance> </AccountDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ProjectTimesheetCategory:
    post:
      summary: Assign a TimeSheetCategory to a Project.
      description: Assign a TimeSheetCategory to a Project.
      operationId: 61af660bdde714c7c6e71038
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignProjectTimesheetCategory'
            example:
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              isBillable: true
              RateAmount: 0
              BudgetHours: 0
              CostAmount: 0
          text/json:
            schema:
              $ref: '#/components/schemas/AssignProjectTimesheetCategory'
            example:
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              isBillable: true
              RateAmount: 0
              BudgetHours: 0
              CostAmount: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/AssignProjectTimesheetCategory'
            example: "<AssignProjectTimesheetCategory>{\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"isBillable\": true,\r\n  \"RateAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"CostAmount\": 0.0\r\n}</AssignProjectTimesheetCategory>"
          text/xml:
            schema:
              $ref: '#/components/schemas/AssignProjectTimesheetCategory'
            example: "<AssignProjectTimesheetCategory>{\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"isBillable\": true,\r\n  \"RateAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"CostAmount\": 0.0\r\n}</AssignProjectTimesheetCategory>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ProjectIDFK:
                  type: integer
                TimesheetCategoryIDFK:
                  type: integer
                isBillable:
                  type: boolean
                RateAmount:
                  type: number
                BudgetHours:
                  type: number
                CostAmount:
                  type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'
              example:
                TimeSheetCategoryIDFK: 0
                AccountIDFK: 0
                ProjectIDFK: 0
                Name: string
                isBillable: true
                RateAmount: 0
                BudgetHours: 0
                CostAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'
              example:
                TimeSheetCategoryIDFK: 0
                AccountIDFK: 0
                ProjectIDFK: 0
                Name: string
                isBillable: true
                RateAmount: 0
                BudgetHours: 0
                CostAmount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'
              example: <ProjectTimesheetCategoryDetails> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <AccountIDFK>0</AccountIDFK> <ProjectIDFK>0</ProjectIDFK> <Name>string</Name> <isBillable>true</isBillable> <RateAmount>0</RateAmount> <BudgetHours>0</BudgetHours> <CostAmount>0</CostAmount> </ProjectTimesheetCategoryDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'
              example: <ProjectTimesheetCategoryDetails> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <AccountIDFK>0</AccountIDFK> <ProjectIDFK>0</ProjectIDFK> <Name>string</Name> <isBillable>true</isBillable> <RateAmount>0</RateAmount> <BudgetHours>0</BudgetHours> <CostAmount>0</CostAmount> </ProjectTimesheetCategoryDetails>
    get:
      summary: Gets list of Project Timesheet Categories
      description: 'The default sort order is by isBillable desc, Name asc'
      operationId: 61af6614918a20295d134587
      parameters:
        - name: ProjectID
          in: query
          description: Format - int32. Get categories filtered by ProjectID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryList'
              example:
                Categories:
                  - TimeSheetCategoryIDFK: 0
                    AccountIDFK: 0
                    ProjectIDFK: 0
                    Name: string
                    isBillable: true
                    RateAmount: 0
                    BudgetHours: 0
                    CostAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryList'
              example:
                Categories:
                  - TimeSheetCategoryIDFK: 0
                    AccountIDFK: 0
                    ProjectIDFK: 0
                    Name: string
                    isBillable: true
                    RateAmount: 0
                    BudgetHours: 0
                    CostAmount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryList'
              example: <ProjectTimesheetCategoryList> <Categories> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <AccountIDFK>0</AccountIDFK> <ProjectIDFK>0</ProjectIDFK> <Name>string</Name> <isBillable>true</isBillable> <RateAmount>0</RateAmount> <BudgetHours>0</BudgetHours> <CostAmount>0</CostAmount> </Categories> </ProjectTimesheetCategoryList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectTimesheetCategoryList'
              example: <ProjectTimesheetCategoryList> <Categories> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <AccountIDFK>0</AccountIDFK> <ProjectIDFK>0</ProjectIDFK> <Name>string</Name> <isBillable>true</isBillable> <RateAmount>0</RateAmount> <BudgetHours>0</BudgetHours> <CostAmount>0</CostAmount> </Categories> </ProjectTimesheetCategoryList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Invoice:
    post:
      summary: Create a new draft invoice
      description: Create a new draft invoice
      operationId: 61af660c11bcbe2856475a45
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewInvoice'
            example:
              TransactionPrefix: string
              InvoiceNumber: string
              CompanyIDFK: 0
              CompanyName: string
              Firstname: string
              Lastname: string
              Email: string
              CurrencyCode: string
              ExchangeRate: 0
              InvoiceTemplateIDFK: 0
              Subject: string
              CustomerPONumber: string
              DateIssued: string
              PaymentTerms: 0
              DueDate: string
              TransactionTaxConfigCode: string
              Notes: string
              LineItems:
                - InventoryItemIDFK: 0
                  InventoryItemName: string
                  Description: string
                  Quantity: 0
                  UnitPrice: 0
                  TaxIDFK: 0
                  TaxName: string
                  TaxPercent: 0
                  Discount: 0
                  ProjectIDFK: 0
          text/json:
            schema:
              $ref: '#/components/schemas/NewInvoice'
            example:
              TransactionPrefix: string
              InvoiceNumber: string
              CompanyIDFK: 0
              CompanyName: string
              Firstname: string
              Lastname: string
              Email: string
              CurrencyCode: string
              ExchangeRate: 0
              InvoiceTemplateIDFK: 0
              Subject: string
              CustomerPONumber: string
              DateIssued: string
              PaymentTerms: 0
              DueDate: string
              TransactionTaxConfigCode: string
              Notes: string
              LineItems:
                - InventoryItemIDFK: 0
                  InventoryItemName: string
                  Description: string
                  Quantity: 0
                  UnitPrice: 0
                  TaxIDFK: 0
                  TaxName: string
                  TaxPercent: 0
                  Discount: 0
                  ProjectIDFK: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/NewInvoice'
            example: "<NewInvoice>{\r\n  \"TransactionPrefix\": \"string\",\r\n  \"InvoiceNumber\": \"string\",\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"Email\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"InvoiceTemplateIDFK\": 0,\r\n  \"Subject\": \"string\",\r\n  \"CustomerPONumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"PaymentTerms\": 0,\r\n  \"DueDate\": \"string\",\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"LineItems\": [\r\n    {\r\n      \"InventoryItemIDFK\": 0,\r\n      \"InventoryItemName\": \"string\",\r\n      \"Description\": \"string\",\r\n      \"Quantity\": 0,\r\n      \"UnitPrice\": 0,\r\n      \"TaxIDFK\": 0,\r\n      \"TaxName\": \"string\",\r\n      \"TaxPercent\": 0,\r\n      \"Discount\": 0,\r\n      \"ProjectIDFK\": 0\r\n    }\r\n  ]\r\n}</NewInvoice>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewInvoice'
            example: "<NewInvoice>{\r\n  \"TransactionPrefix\": \"string\",\r\n  \"InvoiceNumber\": \"string\",\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"Email\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"InvoiceTemplateIDFK\": 0,\r\n  \"Subject\": \"string\",\r\n  \"CustomerPONumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"PaymentTerms\": 0,\r\n  \"DueDate\": \"string\",\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"LineItems\": [\r\n    {\r\n      \"InventoryItemIDFK\": 0,\r\n      \"InventoryItemName\": \"string\",\r\n      \"Description\": \"string\",\r\n      \"Quantity\": 0,\r\n      \"UnitPrice\": 0,\r\n      \"TaxIDFK\": 0,\r\n      \"TaxName\": \"string\",\r\n      \"TaxPercent\": 0,\r\n      \"Discount\": 0,\r\n      \"ProjectIDFK\": 0\r\n    }\r\n  ]\r\n}</NewInvoice>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                TransactionPrefix:
                  type: string
                InvoiceNumber:
                  type: string
                CompanyIDFK:
                  type: integer
                CompanyName:
                  type: string
                Firstname:
                  type: string
                Lastname:
                  type: string
                Email:
                  type: string
                CurrencyCode:
                  type: string
                ExchangeRate:
                  type: number
                InvoiceTemplateIDFK:
                  type: integer
                Subject:
                  type: string
                CustomerPONumber:
                  type: string
                DateIssued:
                  type: string
                PaymentTerms:
                  type: integer
                DueDate:
                  type: string
                TransactionTaxConfigCode:
                  type: string
                Notes:
                  type: string
                LineItems:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                InvoiceNumber: string
                CompanyIDFK: 0
                CompanyName: string
                Subject: string
                DateIssued: string
                DateSent: string
                DueDate: string
                TransactionStatusCode: string
                TaxAmount: 0
                TransactionTaxConfigCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                ExchangeRate: 0
                Notes: string
                CustomerPONumber: string
                DateCreated: string
                DateUpdated: string
                LineItems:
                  - TransactionLineItemID: 0
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    InventoryItemSKU: string
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxCode: string
                    TaxName: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    Amount: 0
                    Discount: 0
                Links:
                  ClientView: string
                  View: string
                  Edit: string
                Issuer:
                  BillingAddress: string
                  BillingAddressLine: string
                  BillingAddressCity: string
                  BillingAddressState: string
                  BillingAddressPostCode: string
                  BillingCountryCode: string
                  TaxNumber: string
                Recipient:
                  CompanyIDFK: 0
                  CompanyName: string
                  RecipientFormattedBillingAddress: string
                  RecipientBillingAddressLine: string
                  RecipientBillingAddressCity: string
                  RecipientBillingAddressState: string
                  RecipientBillingAddressPostCode: string
                  RecipientBillingAddressCountryCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/Invoice'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                InvoiceNumber: string
                CompanyIDFK: 0
                CompanyName: string
                Subject: string
                DateIssued: string
                DateSent: string
                DueDate: string
                TransactionStatusCode: string
                TaxAmount: 0
                TransactionTaxConfigCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                ExchangeRate: 0
                Notes: string
                CustomerPONumber: string
                DateCreated: string
                DateUpdated: string
                LineItems:
                  - TransactionLineItemID: 0
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    InventoryItemSKU: string
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxCode: string
                    TaxName: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    Amount: 0
                    Discount: 0
                Links:
                  ClientView: string
                  View: string
                  Edit: string
                Issuer:
                  BillingAddress: string
                  BillingAddressLine: string
                  BillingAddressCity: string
                  BillingAddressState: string
                  BillingAddressPostCode: string
                  BillingCountryCode: string
                  TaxNumber: string
                Recipient:
                  CompanyIDFK: 0
                  CompanyName: string
                  RecipientFormattedBillingAddress: string
                  RecipientBillingAddressLine: string
                  RecipientBillingAddressCity: string
                  RecipientBillingAddressState: string
                  RecipientBillingAddressPostCode: string
                  RecipientBillingAddressCountryCode: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice'
              example: <Invoice> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <InvoiceNumber>string</InvoiceNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <TransactionStatusCode>string</TransactionStatusCode> <TaxAmount>0</TaxAmount> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <CustomerPONumber>string</CustomerPONumber> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <TransactionLineItemID>0</TransactionLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Invoice>
            text/xml:
              schema:
                $ref: '#/components/schemas/Invoice'
              example: <Invoice> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <InvoiceNumber>string</InvoiceNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <TransactionStatusCode>string</TransactionStatusCode> <TaxAmount>0</TaxAmount> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <CustomerPONumber>string</CustomerPONumber> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <TransactionLineItemID>0</TransactionLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Invoice>
    get:
      summary: Gets list of Invoices
      description: 'TransactionStatusCode values are: "Draft", "Sent", "Late", "Paid", "Partial", "Void"'
      operationId: 61af66163938c852936fb4cc
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          schema:
            type: string
        - name: CompanyIDFK
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Invoices:
                  - TransactionID: 0
                    AccountIDFK: 0
                    TransactionPrefix: string
                    InvoiceNumber: string
                    CompanyIDFK: 0
                    CompanyName: string
                    Subject: string
                    DateIssued: string
                    DateSent: string
                    DueDate: string
                    TransactionStatusCode: string
                    TaxAmount: 0
                    TransactionTaxConfigCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    ExchangeRate: 0
                    Notes: string
                    CustomerPONumber: string
                    DateCreated: string
                    DateUpdated: string
                    LineItems:
                      - TransactionLineItemID: 0
                        InventoryItemIDFK: 0
                        InventoryItemName: string
                        InventoryItemSKU: string
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        TaxCode: string
                        TaxName: string
                        ProjectIDFK: 0
                        ProjectTitle: string
                        Amount: 0
                        Discount: 0
                    Links:
                      ClientView: string
                      View: string
                      Edit: string
                    Issuer:
                      BillingAddress: string
                      BillingAddressLine: string
                      BillingAddressCity: string
                      BillingAddressState: string
                      BillingAddressPostCode: string
                      BillingCountryCode: string
                      TaxNumber: string
                    Recipient:
                      CompanyIDFK: 0
                      CompanyName: string
                      RecipientFormattedBillingAddress: string
                      RecipientBillingAddressLine: string
                      RecipientBillingAddressCity: string
                      RecipientBillingAddressState: string
                      RecipientBillingAddressPostCode: string
                      RecipientBillingAddressCountryCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/InvoiceList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Invoices:
                  - TransactionID: 0
                    AccountIDFK: 0
                    TransactionPrefix: string
                    InvoiceNumber: string
                    CompanyIDFK: 0
                    CompanyName: string
                    Subject: string
                    DateIssued: string
                    DateSent: string
                    DueDate: string
                    TransactionStatusCode: string
                    TaxAmount: 0
                    TransactionTaxConfigCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    ExchangeRate: 0
                    Notes: string
                    CustomerPONumber: string
                    DateCreated: string
                    DateUpdated: string
                    LineItems:
                      - TransactionLineItemID: 0
                        InventoryItemIDFK: 0
                        InventoryItemName: string
                        InventoryItemSKU: string
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        TaxCode: string
                        TaxName: string
                        ProjectIDFK: 0
                        ProjectTitle: string
                        Amount: 0
                        Discount: 0
                    Links:
                      ClientView: string
                      View: string
                      Edit: string
                    Issuer:
                      BillingAddress: string
                      BillingAddressLine: string
                      BillingAddressCity: string
                      BillingAddressState: string
                      BillingAddressPostCode: string
                      BillingCountryCode: string
                      TaxNumber: string
                    Recipient:
                      CompanyIDFK: 0
                      CompanyName: string
                      RecipientFormattedBillingAddress: string
                      RecipientBillingAddressLine: string
                      RecipientBillingAddressCity: string
                      RecipientBillingAddressState: string
                      RecipientBillingAddressPostCode: string
                      RecipientBillingAddressCountryCode: string
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceList'
              example: <InvoiceList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Invoices> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <InvoiceNumber>string</InvoiceNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <TransactionStatusCode>string</TransactionStatusCode> <TaxAmount>0</TaxAmount> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <CustomerPONumber>string</CustomerPONumber> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <TransactionLineItemID>0</TransactionLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Invoices> </InvoiceList>
            text/xml:
              schema:
                $ref: '#/components/schemas/InvoiceList'
              example: <InvoiceList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Invoices> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <InvoiceNumber>string</InvoiceNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <TransactionStatusCode>string</TransactionStatusCode> <TaxAmount>0</TaxAmount> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <CustomerPONumber>string</CustomerPONumber> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <TransactionLineItemID>0</TransactionLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Invoices> </InvoiceList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ProjectMember:
    post:
      summary: Assign a user as a Member of a Project
      description: 'the Amount columns for Cost, Budget, Rates should be specified as a decimal. Financial amounts assume the currency of the Customer company. Budget units depend on the Budget method set on the Project.'
      operationId: 61af660b6e738f5ed82b6b2d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProjectMember'
            example:
              isProjectManager: true
              isTimesheetAllowed: true
              isTimesheetApprover: true
              isTimesheetApprovalRequired: true
              canCreateTasks: true
              canDeleteTasks: true
              canCommentOnTasks: true
              canUpdateTasks: true
              ProjectIDFK: 0
              UserIDFK: 0
              CostAmount: 0
              RateAmount: 0
              BudgetAmount: 0
          text/json:
            schema:
              $ref: '#/components/schemas/NewProjectMember'
            example:
              isProjectManager: true
              isTimesheetAllowed: true
              isTimesheetApprover: true
              isTimesheetApprovalRequired: true
              canCreateTasks: true
              canDeleteTasks: true
              canCommentOnTasks: true
              canUpdateTasks: true
              ProjectIDFK: 0
              UserIDFK: 0
              CostAmount: 0
              RateAmount: 0
              BudgetAmount: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/NewProjectMember'
            example: "<NewProjectMember>{\r\n  \"isProjectManager\": true,\r\n  \"isTimesheetAllowed\": true,\r\n  \"isTimesheetApprover\": true,\r\n  \"isTimesheetApprovalRequired\": true,\r\n  \"canCreateTasks\": true,\r\n  \"canDeleteTasks\": true,\r\n  \"canCommentOnTasks\": true,\r\n  \"canUpdateTasks\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"UserIDFK\": 0,\r\n  \"CostAmount\": 0.0,\r\n  \"RateAmount\": 0.0,\r\n  \"BudgetAmount\": 0.0\r\n}</NewProjectMember>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewProjectMember'
            example: "<NewProjectMember>{\r\n  \"isProjectManager\": true,\r\n  \"isTimesheetAllowed\": true,\r\n  \"isTimesheetApprover\": true,\r\n  \"isTimesheetApprovalRequired\": true,\r\n  \"canCreateTasks\": true,\r\n  \"canDeleteTasks\": true,\r\n  \"canCommentOnTasks\": true,\r\n  \"canUpdateTasks\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"UserIDFK\": 0,\r\n  \"CostAmount\": 0.0,\r\n  \"RateAmount\": 0.0,\r\n  \"BudgetAmount\": 0.0\r\n}</NewProjectMember>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                isProjectManager:
                  type: boolean
                isTimesheetAllowed:
                  type: boolean
                isTimesheetApprover:
                  type: boolean
                isTimesheetApprovalRequired:
                  type: boolean
                canCreateTasks:
                  type: boolean
                canDeleteTasks:
                  type: boolean
                canCommentOnTasks:
                  type: boolean
                canUpdateTasks:
                  type: boolean
                ProjectIDFK:
                  type: integer
                UserIDFK:
                  type: integer
                CostAmount:
                  type: number
                RateAmount:
                  type: number
                BudgetAmount:
                  type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberDetails'
              example:
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Fullname: string
                Email: string
                CostAmount: 0
                RateAmount: 0
                BudgetAmount: 0
                isMemberDisabled: true
                isProjectManager: true
                isTimesheetAllowed: true
                isTimesheetApprover: true
                isTimesheetApprovalRequired: true
                canCreateTasks: true
                canDeleteTasks: true
                canCommentOnTasks: true
                canUpdateTasks: true
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectMemberDetails'
              example:
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Fullname: string
                Email: string
                CostAmount: 0
                RateAmount: 0
                BudgetAmount: 0
                isMemberDisabled: true
                isProjectManager: true
                isTimesheetAllowed: true
                isTimesheetApprover: true
                isTimesheetApprovalRequired: true
                canCreateTasks: true
                canDeleteTasks: true
                canCommentOnTasks: true
                canUpdateTasks: true
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectMemberDetails'
              example: <ProjectMemberDetails> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </ProjectMemberDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectMemberDetails'
              example: <ProjectMemberDetails> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </ProjectMemberDetails>
  '/api/CreditNote/{id}':
    get:
      summary: Gets Credit Note by CreditNoteID
      description: Gets Credit Note by CreditNoteID
      operationId: 61af660c064b72e5183b9769
      parameters:
        - name: id
          in: path
          description: Format - int64. Credit Note ID Number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
              example:
                TransactionID: 0
                TransactionPrefix: string
                CreditNoteNumber: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                CreditNoteAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    CreditNoteTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
                CreditNoteLineItems:
                  - TransactionLineItemID: 0
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    Amount: 0
                    Discount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CreditNote'
              example:
                TransactionID: 0
                TransactionPrefix: string
                CreditNoteNumber: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                CreditNoteAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    CreditNoteTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
                CreditNoteLineItems:
                  - TransactionLineItemID: 0
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    Amount: 0
                    Discount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/CreditNote'
              example: <CreditNote> <TransactionID>0</TransactionID> <TransactionPrefix>string</TransactionPrefix> <CreditNoteNumber>string</CreditNoteNumber> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <CreditNoteAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <CreditNoteTransactionIDFK>0</CreditNoteTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </CreditNoteAllocations> <CreditNoteLineItems> <TransactionLineItemID>0</TransactionLineItemID> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <Amount>0</Amount> <Discount>0</Discount> </CreditNoteLineItems> </CreditNote>
            text/xml:
              schema:
                $ref: '#/components/schemas/CreditNote'
              example: <CreditNote> <TransactionID>0</TransactionID> <TransactionPrefix>string</TransactionPrefix> <CreditNoteNumber>string</CreditNoteNumber> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <CreditNoteAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <CreditNoteTransactionIDFK>0</CreditNoteTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </CreditNoteAllocations> <CreditNoteLineItems> <TransactionLineItemID>0</TransactionLineItemID> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <Amount>0</Amount> <Discount>0</Discount> </CreditNoteLineItems> </CreditNote>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Contact:
    post:
      summary: Create a Contact
      description: Create a Contact
      operationId: 61af660b6c96d6ef9a8c463c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewCompanyContact'
            example:
              CompanyIDFK: 0
              CompanyName: string
              CurrencyCode: string
              CompanyBillingAddress: string
              CompanyBillingAddressLine: string
              CompanyBillingAddressCity: string
              CompanyBillingAddressState: string
              CompanyBillingAddressPostCode: string
              CompanyBillingAddressCountryCode: string
              ContactEmail: string
              Firstname: string
              Lastname: string
              PositionTitle: string
              Mobile: string
              Phone: string
              UpdateExisting: true
          text/json:
            schema:
              $ref: '#/components/schemas/NewCompanyContact'
            example:
              CompanyIDFK: 0
              CompanyName: string
              CurrencyCode: string
              CompanyBillingAddress: string
              CompanyBillingAddressLine: string
              CompanyBillingAddressCity: string
              CompanyBillingAddressState: string
              CompanyBillingAddressPostCode: string
              CompanyBillingAddressCountryCode: string
              ContactEmail: string
              Firstname: string
              Lastname: string
              PositionTitle: string
              Mobile: string
              Phone: string
              UpdateExisting: true
          application/xml:
            schema:
              $ref: '#/components/schemas/NewCompanyContact'
            example: "<NewCompanyContact>{\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"CompanyBillingAddress\": \"string\",\r\n  \"CompanyBillingAddressLine\": \"string\",\r\n  \"CompanyBillingAddressCity\": \"string\",\r\n  \"CompanyBillingAddressState\": \"string\",\r\n  \"CompanyBillingAddressPostCode\": \"string\",\r\n  \"CompanyBillingAddressCountryCode\": \"string\",\r\n  \"ContactEmail\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"PositionTitle\": \"string\",\r\n  \"Mobile\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"UpdateExisting\": true\r\n}</NewCompanyContact>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewCompanyContact'
            example: "<NewCompanyContact>{\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"CompanyBillingAddress\": \"string\",\r\n  \"CompanyBillingAddressLine\": \"string\",\r\n  \"CompanyBillingAddressCity\": \"string\",\r\n  \"CompanyBillingAddressState\": \"string\",\r\n  \"CompanyBillingAddressPostCode\": \"string\",\r\n  \"CompanyBillingAddressCountryCode\": \"string\",\r\n  \"ContactEmail\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"PositionTitle\": \"string\",\r\n  \"Mobile\": \"string\",\r\n  \"Phone\": \"string\",\r\n  \"UpdateExisting\": true\r\n}</NewCompanyContact>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                CompanyIDFK:
                  type: integer
                CompanyName:
                  type: string
                CurrencyCode:
                  type: string
                CompanyBillingAddress:
                  type: string
                CompanyBillingAddressLine:
                  type: string
                CompanyBillingAddressCity:
                  type: string
                CompanyBillingAddressState:
                  type: string
                CompanyBillingAddressPostCode:
                  type: string
                CompanyBillingAddressCountryCode:
                  type: string
                ContactEmail:
                  type: string
                Firstname:
                  type: string
                Lastname:
                  type: string
                PositionTitle:
                  type: string
                Mobile:
                  type: string
                Phone:
                  type: string
                UpdateExisting:
                  type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example:
                ContactID: 0
                CompanyIDFK: 0
                CompanyName: string
                Firstname: string
                Lastname: string
                Email: string
                Phone: string
                Mobile: string
                PositionTitle: string
                TimeZone: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example:
                ContactID: 0
                CompanyIDFK: 0
                CompanyName: string
                Firstname: string
                Lastname: string
                Email: string
                Phone: string
                Mobile: string
                PositionTitle: string
                TimeZone: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example: <CompanyContact> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </CompanyContact>
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example: <CompanyContact> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </CompanyContact>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    get:
      summary: Gets list of Contacts
      description: Gets list of Contacts
      operationId: 61af661118bcc76c2f6de717
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          schema:
            type: string
        - name: CompanyIDFK
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactList'
              example:
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ContactList'
              example:
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ContactList'
              example: <ContactList> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ContactList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ContactList'
              example: <ContactList> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ContactList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /ScheduleSeries/AddBooking:
    post:
      summary: Create new Schedule Booking
      description: Create new Schedule Booking
      operationId: 61af660dc3cb8980ec591a5a
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBooking'
            example:
              UserIDFK: 0
              HoursPerDay: 0
              TotalDuration: 0
              DurationType: string
              ScheduleOnDaysOff: true
              ProjectIDFK: 0
              CategoryIDFK: 0
              TaskIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateBooking'
            example:
              UserIDFK: 0
              HoursPerDay: 0
              TotalDuration: 0
              DurationType: string
              ScheduleOnDaysOff: true
              ProjectIDFK: 0
              CategoryIDFK: 0
              TaskIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateBooking'
            example: "<CreateBooking>{\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"TotalDuration\": 0.0,\r\n  \"DurationType\": \"string\",\r\n  \"ScheduleOnDaysOff\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"CategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</CreateBooking>"
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateBooking'
            example: "<CreateBooking>{\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"TotalDuration\": 0.0,\r\n  \"DurationType\": \"string\",\r\n  \"ScheduleOnDaysOff\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"CategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</CreateBooking>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                UserIDFK:
                  type: integer
                HoursPerDay:
                  type: number
                TotalDuration:
                  type: number
                DurationType:
                  type: string
                ScheduleOnDaysOff:
                  type: boolean
                ProjectIDFK:
                  type: integer
                CategoryIDFK:
                  type: integer
                TaskIDFK:
                  type: integer
                Notes:
                  type: string
                StartDate:
                  type: string
                EndDate:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
  '/api/Company/{id}':
    get:
      summary: Gets Company by Company ID
      description: Gets Company by Company ID
      operationId: 61af66100d7c44865cbb1239
      parameters:
        - name: id
          in: path
          description: Format - int64. Company ID Number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/Company'
              example:
                CompanyID: 0
                CompanyName: string
                BillingAddressLine: string
                BillingAddressCity: string
                BillingAddressState: string
                BillingAddressPostCode: string
                BillingCountryCode: string
                BillingAddress: string
                Phone: string
                Fax: string
                website: string
                TaxNumber: string
                Comments: string
                CurrencyCode: string
                DefaultTradingTermIDFK: 0
                DateCreated: string
                DateUpdated: string
                Contacts:
                  - ContactID: 0
                    CompanyIDFK: 0
                    CompanyName: string
                    Firstname: string
                    Lastname: string
                    Email: string
                    Phone: string
                    Mobile: string
                    PositionTitle: string
                    TimeZone: string
                    DateCreated: string
                    DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
            text/xml:
              schema:
                $ref: '#/components/schemas/Company'
              example: <Company> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <BillingAddress>string</BillingAddress> <Phone>string</Phone> <Fax>string</Fax> <website>string</website> <TaxNumber>string</TaxNumber> <Comments>string</Comments> <CurrencyCode>string</CurrencyCode> <DefaultTradingTermIDFK>0</DefaultTradingTermIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <Contacts> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Contacts> </Company>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Payment:
    post:
      summary: Create new Payment and optionally assign payment allocations to Invoices
      description: Create new Payment and optionally assign payment allocations to Invoices
      operationId: 61af660d9c6ca887c9cec12c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPayment'
            example:
              Amount: 0
              PaymentNumber: string
              DateIssued: string
              TransactionPrefix: string
              CustomerIDFK: 0
              ExchangeRate: 0
              TransactionReference: string
              Notes: string
              PaymentProviderCode: string
              PaymentAllocations:
                - InvoiceTransactionIDFK: 0
                  AllocationAmount: 0
                  AllocationDate: string
          text/json:
            schema:
              $ref: '#/components/schemas/NewPayment'
            example:
              Amount: 0
              PaymentNumber: string
              DateIssued: string
              TransactionPrefix: string
              CustomerIDFK: 0
              ExchangeRate: 0
              TransactionReference: string
              Notes: string
              PaymentProviderCode: string
              PaymentAllocations:
                - InvoiceTransactionIDFK: 0
                  AllocationAmount: 0
                  AllocationDate: string
          application/xml:
            schema:
              $ref: '#/components/schemas/NewPayment'
            example: "<NewPayment>{\r\n  \"Amount\": 0.0,\r\n  \"PaymentNumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"TransactionPrefix\": \"string\",\r\n  \"CustomerIDFK\": 0,\r\n  \"ExchangeRate\": 0.0,\r\n  \"TransactionReference\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"PaymentProviderCode\": \"string\",\r\n  \"PaymentAllocations\": [\r\n    {\r\n      \"InvoiceTransactionIDFK\": 0,\r\n      \"AllocationAmount\": 0,\r\n      \"AllocationDate\": \"string\"\r\n    }\r\n  ]\r\n}</NewPayment>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewPayment'
            example: "<NewPayment>{\r\n  \"Amount\": 0.0,\r\n  \"PaymentNumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"TransactionPrefix\": \"string\",\r\n  \"CustomerIDFK\": 0,\r\n  \"ExchangeRate\": 0.0,\r\n  \"TransactionReference\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"PaymentProviderCode\": \"string\",\r\n  \"PaymentAllocations\": [\r\n    {\r\n      \"InvoiceTransactionIDFK\": 0,\r\n      \"AllocationAmount\": 0,\r\n      \"AllocationDate\": \"string\"\r\n    }\r\n  ]\r\n}</NewPayment>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                Amount:
                  type: number
                PaymentNumber:
                  type: string
                DateIssued:
                  type: string
                TransactionPrefix:
                  type: string
                CustomerIDFK:
                  type: integer
                ExchangeRate:
                  type: number
                TransactionReference:
                  type: string
                Notes:
                  type: string
                PaymentProviderCode:
                  type: string
                PaymentAllocations:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                PaymentNumber: string
                TransactionReference: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                PaymentProviderCode: string
                ExchangeRate: 0
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                PaymentAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    PaymentTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Payment'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                PaymentNumber: string
                TransactionReference: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                PaymentProviderCode: string
                ExchangeRate: 0
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                PaymentAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    PaymentTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
              example: <Payment> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payment>
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
              example: <Payment> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payment>
    get:
      summary: Gets list of Payments
      description: Gets list of Payments
      operationId: 61af661415d0c7152b88ed65
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Payments:
                  - TransactionID: 0
                    AccountIDFK: 0
                    TransactionPrefix: string
                    PaymentNumber: string
                    TransactionReference: string
                    CustomerIDFK: 0
                    DateIssued: string
                    TransactionStatusCode: string
                    PaymentProviderCode: string
                    ExchangeRate: 0
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    PaymentAllocations:
                      - TransactionAllocationID: 0
                        InvoiceTransactionIDFK: 0
                        PaymentTransactionIDFK: 0
                        AllocationDate: string
                        AllocationAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/PaymentList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Payments:
                  - TransactionID: 0
                    AccountIDFK: 0
                    TransactionPrefix: string
                    PaymentNumber: string
                    TransactionReference: string
                    CustomerIDFK: 0
                    DateIssued: string
                    TransactionStatusCode: string
                    PaymentProviderCode: string
                    ExchangeRate: 0
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    PaymentAllocations:
                      - TransactionAllocationID: 0
                        InvoiceTransactionIDFK: 0
                        PaymentTransactionIDFK: 0
                        AllocationDate: string
                        AllocationAmount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/PaymentList'
              example: <PaymentList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Payments> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payments> </PaymentList>
            text/xml:
              schema:
                $ref: '#/components/schemas/PaymentList'
              example: <PaymentList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Payments> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payments> </PaymentList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Webhook:
    delete:
      summary: Delete webhook subscription by URL
      description: Delete webhook subscription by URL
      operationId: 61af6610ce73c9e4bfe7a2e6
      parameters:
        - name: target_url
          in: query
          description: Target URL that should be used to delete subscriptions
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Subscription Deleted OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWebhookDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiWebhookDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiWebhookDelete200TextXmlResponse'
              example: <ApiWebhookDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiWebhookDelete200TextXmlResponse'
              example: <ApiWebhookDelete200TextXmlResponse />
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    get:
      summary: Get list of Webhook Subscriptions
      description: Get list of Webhook Subscriptions
      operationId: 61af660fde967dea36d987d3
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example:
                Webhooks:
                  - SubscriptionID: 0
                    EventCode: string
                    NotificationURL: string
                    UserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example:
                Webhooks:
                  - SubscriptionID: 0
                    EventCode: string
                    NotificationURL: string
                    UserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example: <WebhookList> <Webhooks> <SubscriptionID>0</SubscriptionID> <EventCode>string</EventCode> <NotificationURL>string</NotificationURL> <UserIDFK>0</UserIDFK> </Webhooks> </WebhookList>
            text/xml:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example: <WebhookList> <Webhooks> <SubscriptionID>0</SubscriptionID> <EventCode>string</EventCode> <NotificationURL>string</NotificationURL> <UserIDFK>0</UserIDFK> </Webhooks> </WebhookList>
    post:
      summary: 'Subscribe to Webhook. On success, returns ID of webhook subscription.'
      description: 'When you receive a webhook, you should respond with Http 200 OK Status Code, otherwise we will retry. To create a webhook, you need both the webhook_notifications scope, as well as the scope for the required entity being monitored.  Event values are: "company_created", "company_deleted", "company_updated", "contact_created", "contact_deleted", "contact_updated", "invoice_created", "invoice_sent","invoice_updated","invoice_deleted", "project_created", "project_deleted", "project_updated", "task_created", "task_updated","task_deleted", "timesheet_created", "timesheet_deleted", "timesheet_updated".  You can subscribe to any webhook, but you will only receive notifications for data appropriate to the roles of your user account. There is an optional  Secret parameter (string 255 char max). This allows for webhook authentication. If provided, the Secret will be BASE 64 encoded and passed with notications as a basic authentication http header. i.e. Authorization Basic [BASE64 of Secret]"'
      operationId: 61af661ab2774d193ff03120
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
            example:
              target_url: string
              event: string
              secret: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
            example:
              target_url: string
              event: string
              secret: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
            example: "<CreateSubscription>{\r\n  \"target_url\": \"string\",\r\n  \"event\": \"string\",\r\n  \"secret\": \"string\"\r\n}</CreateSubscription>"
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateSubscription'
            example: "<CreateSubscription>{\r\n  \"target_url\": \"string\",\r\n  \"event\": \"string\",\r\n  \"secret\": \"string\"\r\n}</CreateSubscription>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                target_url:
                  type: string
                event:
                  type: string
                secret:
                  type: string
      responses:
        '201':
          description: Subscription created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscribeResult'
              example:
                ID: 0
            text/json:
              schema:
                $ref: '#/components/schemas/SubscribeResult'
              example:
                ID: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/SubscribeResult'
              example: <SubscribeResult> <ID>0</ID> </SubscribeResult>
            text/xml:
              schema:
                $ref: '#/components/schemas/SubscribeResult'
              example: <SubscribeResult> <ID>0</ID> </SubscribeResult>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '409':
          description: Duplicate subscription already exists
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Task:
    post:
      summary: Create a Task
      description: Create a Task
      operationId: 61af661082f39b42ec9b65b3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
            example:
              ProjectIDFK: 0
              SectionIDFK: 0
              AccountTaskTypeIDFK: 0
              Title: string
              Description: string
              AssignedToUserIDFK: 0
              TaskPriorityCode: string
              DateStart: string
              DateDue: string
              EstimatedEffort: 0
              Tags:
                - Name: string
                  Color: string
          text/json:
            schema:
              $ref: '#/components/schemas/NewTask'
            example:
              ProjectIDFK: 0
              SectionIDFK: 0
              AccountTaskTypeIDFK: 0
              Title: string
              Description: string
              AssignedToUserIDFK: 0
              TaskPriorityCode: string
              DateStart: string
              DateDue: string
              EstimatedEffort: 0
              Tags:
                - Name: string
                  Color: string
          application/xml:
            schema:
              $ref: '#/components/schemas/NewTask'
            example: "<NewTask>{\r\n  \"ProjectIDFK\": 0,\r\n  \"SectionIDFK\": 0,\r\n  \"AccountTaskTypeIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"Description\": \"string\",\r\n  \"AssignedToUserIDFK\": 0,\r\n  \"TaskPriorityCode\": \"string\",\r\n  \"DateStart\": \"string\",\r\n  \"DateDue\": \"string\",\r\n  \"EstimatedEffort\": 0.0,\r\n  \"Tags\": [\r\n    {\r\n      \"Name\": \"string\",\r\n      \"Color\": \"string\"\r\n    }\r\n  ]\r\n}</NewTask>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewTask'
            example: "<NewTask>{\r\n  \"ProjectIDFK\": 0,\r\n  \"SectionIDFK\": 0,\r\n  \"AccountTaskTypeIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"Description\": \"string\",\r\n  \"AssignedToUserIDFK\": 0,\r\n  \"TaskPriorityCode\": \"string\",\r\n  \"DateStart\": \"string\",\r\n  \"DateDue\": \"string\",\r\n  \"EstimatedEffort\": 0.0,\r\n  \"Tags\": [\r\n    {\r\n      \"Name\": \"string\",\r\n      \"Color\": \"string\"\r\n    }\r\n  ]\r\n}</NewTask>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ProjectIDFK:
                  type: integer
                SectionIDFK:
                  type: integer
                AccountTaskTypeIDFK:
                  type: integer
                Title:
                  type: string
                Description:
                  type: string
                AssignedToUserIDFK:
                  type: integer
                TaskPriorityCode:
                  type: string
                DateStart:
                  type: string
                DateDue:
                  type: string
                EstimatedEffort:
                  type: number
                Tags:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
    delete:
      summary: Delete a Task
      description: Delete a Task
      operationId: 61af661155395f7f4d8a75ea
      parameters:
        - name: TaskID
          in: query
          description: Format - int64.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTaskDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTaskDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTaskDelete200TextXmlResponse'
              example: <ApiTaskDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTaskDelete200TextXmlResponse'
              example: <ApiTaskDelete200TextXmlResponse />
    get:
      summary: Gets list of Tasks
      description: Gets list of Tasks
      operationId: 61af6616e6715c56d438fc2e
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Optional filter to records updated after a specific date.
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page. Defaults to 20.
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1. Defaults to 1
          schema:
            type: integer
        - name: Sort
          in: query
          description: 'Optional sorting instruction. Currently possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc", "SectionTitle", "Title"'
          schema:
            type: string
        - name: isComplete
          in: query
          description: 'Optional filter to only display tasks linked to a Task Status where isComplete=false, or where isComplete=true'
          schema:
            type: boolean
        - name: ProjectID
          in: query
          description: Format - int32. Optional filter to only display tasks belonging to a specific ProjectID
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskList'
              example:
                Tasks:
                  - TaskID: 0
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    SectionTitle: string
                    SectionIDFK: 0
                    Title: string
                    Description: string
                    DescriptionNoHTML: string
                    AssignedToFirstname: string
                    AssignedToLastname: string
                    AssignedToEmail: string
                    AssignedToUserIDFK: string
                    DateStart: string
                    DateDue: string
                    DateCompleted: string
                    EstimatedEffort: 0
                    ActualTime: 0
                    Tags:
                      - TagID: 0
                        Name: string
                        Color: string
                    AccountTaskTypeIDFK: 0
                    TaskStatusCode: string
                    TaskStatusName: string
                    isCompleteStatus: true
                    PercentComplete: 0
                    TaskPriorityCode: string
                    TaskPriorityName: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/TaskList'
              example:
                Tasks:
                  - TaskID: 0
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    SectionTitle: string
                    SectionIDFK: 0
                    Title: string
                    Description: string
                    DescriptionNoHTML: string
                    AssignedToFirstname: string
                    AssignedToLastname: string
                    AssignedToEmail: string
                    AssignedToUserIDFK: string
                    DateStart: string
                    DateDue: string
                    DateCompleted: string
                    EstimatedEffort: 0
                    ActualTime: 0
                    Tags:
                      - TagID: 0
                        Name: string
                        Color: string
                    AccountTaskTypeIDFK: 0
                    TaskStatusCode: string
                    TaskStatusName: string
                    isCompleteStatus: true
                    PercentComplete: 0
                    TaskPriorityCode: string
                    TaskPriorityName: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskList'
              example: <TaskList> <Tasks> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Tasks> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </TaskList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskList'
              example: <TaskList> <Tasks> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Tasks> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </TaskList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    put:
      summary: Update a Task.
      description: Requires TaskID and a list of field names to update. The FieldsToUpdate field accepts a string array containing field names that should be updated.
      operationId: 61af661ac4e5cab384a982db
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
            example:
              TaskID: 0
              FieldsToUpdate:
                - string
              SectionIDFK: 0
              Title: string
              Description: string
              AssignedToUserIDFK: 0
              DateStart: string
              DateDue: string
              TaskPriorityCode: string
              EstimatedEffort: 0
              TaskStatusCode: string
              PercentComplete: 0
              Tags:
                - Name: string
                  Color: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTask'
            example:
              TaskID: 0
              FieldsToUpdate:
                - string
              SectionIDFK: 0
              Title: string
              Description: string
              AssignedToUserIDFK: 0
              DateStart: string
              DateDue: string
              TaskPriorityCode: string
              EstimatedEffort: 0
              TaskStatusCode: string
              PercentComplete: 0
              Tags:
                - Name: string
                  Color: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateTask'
            example: "<UpdateTask>{\r\n  \"TaskID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"SectionIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"Description\": \"string\",\r\n  \"AssignedToUserIDFK\": 0,\r\n  \"DateStart\": \"string\",\r\n  \"DateDue\": \"string\",\r\n  \"TaskPriorityCode\": \"string\",\r\n  \"EstimatedEffort\": 0.0,\r\n  \"TaskStatusCode\": \"string\",\r\n  \"PercentComplete\": 0,\r\n  \"Tags\": [\r\n    {\r\n      \"Name\": \"string\",\r\n      \"Color\": \"string\"\r\n    }\r\n  ]\r\n}</UpdateTask>"
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTask'
            example: "<UpdateTask>{\r\n  \"TaskID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"SectionIDFK\": 0,\r\n  \"Title\": \"string\",\r\n  \"Description\": \"string\",\r\n  \"AssignedToUserIDFK\": 0,\r\n  \"DateStart\": \"string\",\r\n  \"DateDue\": \"string\",\r\n  \"TaskPriorityCode\": \"string\",\r\n  \"EstimatedEffort\": 0.0,\r\n  \"TaskStatusCode\": \"string\",\r\n  \"PercentComplete\": 0,\r\n  \"Tags\": [\r\n    {\r\n      \"Name\": \"string\",\r\n      \"Color\": \"string\"\r\n    }\r\n  ]\r\n}</UpdateTask>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                TaskID:
                  type: integer
                FieldsToUpdate:
                  type: array
                SectionIDFK:
                  type: integer
                Title:
                  type: string
                Description:
                  type: string
                AssignedToUserIDFK:
                  type: integer
                DateStart:
                  type: string
                DateDue:
                  type: string
                TaskPriorityCode:
                  type: string
                EstimatedEffort:
                  type: number
                TaskStatusCode:
                  type: string
                PercentComplete:
                  type: integer
                Tags:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
  /api/Estimate:
    post:
      summary: Create a new draft Estimate
      description: Create a new draft Estimate
      operationId: 61af660ebac0ae8ccd0abc0e
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewEstimate'
            example:
              EstimatePrefix: string
              EstimateNumber: string
              CompanyIDFK: 0
              CompanyName: string
              Firstname: string
              Lastname: string
              Email: string
              CurrencyCode: string
              ExchangeRate: 0
              InvoiceTemplateIDFK: 0
              Subject: string
              CustomerPONumber: string
              DateIssued: string
              DueDate: string
              EstimateTaxConfigCode: string
              Notes: string
              LineItems:
                - InventoryItemIDFK: 0
                  InventoryItemName: string
                  Description: string
                  Quantity: 0
                  UnitPrice: 0
                  TaxIDFK: 0
                  TaxName: string
                  TaxPercent: 0
                  Discount: 0
          text/json:
            schema:
              $ref: '#/components/schemas/NewEstimate'
            example:
              EstimatePrefix: string
              EstimateNumber: string
              CompanyIDFK: 0
              CompanyName: string
              Firstname: string
              Lastname: string
              Email: string
              CurrencyCode: string
              ExchangeRate: 0
              InvoiceTemplateIDFK: 0
              Subject: string
              CustomerPONumber: string
              DateIssued: string
              DueDate: string
              EstimateTaxConfigCode: string
              Notes: string
              LineItems:
                - InventoryItemIDFK: 0
                  InventoryItemName: string
                  Description: string
                  Quantity: 0
                  UnitPrice: 0
                  TaxIDFK: 0
                  TaxName: string
                  TaxPercent: 0
                  Discount: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/NewEstimate'
            example: "<NewEstimate>{\r\n  \"EstimatePrefix\": \"string\",\r\n  \"EstimateNumber\": \"string\",\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"Email\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"InvoiceTemplateIDFK\": 0,\r\n  \"Subject\": \"string\",\r\n  \"CustomerPONumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"DueDate\": \"string\",\r\n  \"EstimateTaxConfigCode\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"LineItems\": [\r\n    {\r\n      \"InventoryItemIDFK\": 0,\r\n      \"InventoryItemName\": \"string\",\r\n      \"Description\": \"string\",\r\n      \"Quantity\": 0,\r\n      \"UnitPrice\": 0,\r\n      \"TaxIDFK\": 0,\r\n      \"TaxName\": \"string\",\r\n      \"TaxPercent\": 0,\r\n      \"Discount\": 0\r\n    }\r\n  ]\r\n}</NewEstimate>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewEstimate'
            example: "<NewEstimate>{\r\n  \"EstimatePrefix\": \"string\",\r\n  \"EstimateNumber\": \"string\",\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"Firstname\": \"string\",\r\n  \"Lastname\": \"string\",\r\n  \"Email\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"InvoiceTemplateIDFK\": 0,\r\n  \"Subject\": \"string\",\r\n  \"CustomerPONumber\": \"string\",\r\n  \"DateIssued\": \"string\",\r\n  \"DueDate\": \"string\",\r\n  \"EstimateTaxConfigCode\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"LineItems\": [\r\n    {\r\n      \"InventoryItemIDFK\": 0,\r\n      \"InventoryItemName\": \"string\",\r\n      \"Description\": \"string\",\r\n      \"Quantity\": 0,\r\n      \"UnitPrice\": 0,\r\n      \"TaxIDFK\": 0,\r\n      \"TaxName\": \"string\",\r\n      \"TaxPercent\": 0,\r\n      \"Discount\": 0\r\n    }\r\n  ]\r\n}</NewEstimate>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                EstimatePrefix:
                  type: string
                EstimateNumber:
                  type: string
                CompanyIDFK:
                  type: integer
                CompanyName:
                  type: string
                Firstname:
                  type: string
                Lastname:
                  type: string
                Email:
                  type: string
                CurrencyCode:
                  type: string
                ExchangeRate:
                  type: number
                InvoiceTemplateIDFK:
                  type: integer
                Subject:
                  type: string
                CustomerPONumber:
                  type: string
                DateIssued:
                  type: string
                DueDate:
                  type: string
                EstimateTaxConfigCode:
                  type: string
                Notes:
                  type: string
                LineItems:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateDetails'
              example:
                EstimateID: 0
                AccountIDFK: 0
                EstimatePrefix: string
                EstimateItemNumber: string
                CompanyIDFK: 0
                CompanyName: string
                Subject: string
                DateIssued: string
                DateSent: string
                DueDate: string
                EstimateStatusCode: string
                TaxAmount: 0
                EstimateTaxConfigCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                ExchangeRate: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                LineItems:
                  - EstimateLineItemID: 0
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    InventoryItemSKU: string
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxCode: string
                    TaxName: string
                    Amount: 0
                    Discount: 0
                Links:
                  ClientView: string
                  View: string
                  Edit: string
                Issuer:
                  BillingAddress: string
                  BillingAddressLine: string
                  BillingAddressCity: string
                  BillingAddressState: string
                  BillingAddressPostCode: string
                  BillingCountryCode: string
                  TaxNumber: string
                Recipient:
                  CompanyIDFK: 0
                  CompanyName: string
                  RecipientFormattedBillingAddress: string
                  RecipientBillingAddressLine: string
                  RecipientBillingAddressCity: string
                  RecipientBillingAddressState: string
                  RecipientBillingAddressPostCode: string
                  RecipientBillingAddressCountryCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/EstimateDetails'
              example:
                EstimateID: 0
                AccountIDFK: 0
                EstimatePrefix: string
                EstimateItemNumber: string
                CompanyIDFK: 0
                CompanyName: string
                Subject: string
                DateIssued: string
                DateSent: string
                DueDate: string
                EstimateStatusCode: string
                TaxAmount: 0
                EstimateTaxConfigCode: string
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                ExchangeRate: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                LineItems:
                  - EstimateLineItemID: 0
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    InventoryItemSKU: string
                    Description: string
                    Quantity: 0
                    UnitPrice: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxCode: string
                    TaxName: string
                    Amount: 0
                    Discount: 0
                Links:
                  ClientView: string
                  View: string
                  Edit: string
                Issuer:
                  BillingAddress: string
                  BillingAddressLine: string
                  BillingAddressCity: string
                  BillingAddressState: string
                  BillingAddressPostCode: string
                  BillingCountryCode: string
                  TaxNumber: string
                Recipient:
                  CompanyIDFK: 0
                  CompanyName: string
                  RecipientFormattedBillingAddress: string
                  RecipientBillingAddressLine: string
                  RecipientBillingAddressCity: string
                  RecipientBillingAddressState: string
                  RecipientBillingAddressPostCode: string
                  RecipientBillingAddressCountryCode: string
            application/xml:
              schema:
                $ref: '#/components/schemas/EstimateDetails'
              example: <EstimateDetails> <EstimateID>0</EstimateID> <AccountIDFK>0</AccountIDFK> <EstimatePrefix>string</EstimatePrefix> <EstimateItemNumber>string</EstimateItemNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <EstimateStatusCode>string</EstimateStatusCode> <TaxAmount>0</TaxAmount> <EstimateTaxConfigCode>string</EstimateTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <EstimateLineItemID>0</EstimateLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </EstimateDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/EstimateDetails'
              example: <EstimateDetails> <EstimateID>0</EstimateID> <AccountIDFK>0</AccountIDFK> <EstimatePrefix>string</EstimatePrefix> <EstimateItemNumber>string</EstimateItemNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <EstimateStatusCode>string</EstimateStatusCode> <TaxAmount>0</TaxAmount> <EstimateTaxConfigCode>string</EstimateTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <EstimateLineItemID>0</EstimateLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </EstimateDetails>
    get:
      summary: Gets list of Estimates
      description: 'EstimateStatusCode values are: "Draft", "Sent", "Accepted", "Converted", "Expired", "Rejected"'
      operationId: 61af66147a0edd2db9cc674f
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          schema:
            type: string
        - name: CompanyIDFK
          in: query
          description: Format - int32.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstimateList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Estimates:
                  - EstimateID: 0
                    AccountIDFK: 0
                    EstimatePrefix: string
                    EstimateItemNumber: string
                    CompanyIDFK: 0
                    CompanyName: string
                    Subject: string
                    DateIssued: string
                    DateSent: string
                    DueDate: string
                    EstimateStatusCode: string
                    TaxAmount: 0
                    EstimateTaxConfigCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    ExchangeRate: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    LineItems:
                      - EstimateLineItemID: 0
                        InventoryItemIDFK: 0
                        InventoryItemName: string
                        InventoryItemSKU: string
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        TaxCode: string
                        TaxName: string
                        Amount: 0
                        Discount: 0
                    Links:
                      ClientView: string
                      View: string
                      Edit: string
                    Issuer:
                      BillingAddress: string
                      BillingAddressLine: string
                      BillingAddressCity: string
                      BillingAddressState: string
                      BillingAddressPostCode: string
                      BillingCountryCode: string
                      TaxNumber: string
                    Recipient:
                      CompanyIDFK: 0
                      CompanyName: string
                      RecipientFormattedBillingAddress: string
                      RecipientBillingAddressLine: string
                      RecipientBillingAddressCity: string
                      RecipientBillingAddressState: string
                      RecipientBillingAddressPostCode: string
                      RecipientBillingAddressCountryCode: string
            text/json:
              schema:
                $ref: '#/components/schemas/EstimateList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Estimates:
                  - EstimateID: 0
                    AccountIDFK: 0
                    EstimatePrefix: string
                    EstimateItemNumber: string
                    CompanyIDFK: 0
                    CompanyName: string
                    Subject: string
                    DateIssued: string
                    DateSent: string
                    DueDate: string
                    EstimateStatusCode: string
                    TaxAmount: 0
                    EstimateTaxConfigCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    ExchangeRate: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    LineItems:
                      - EstimateLineItemID: 0
                        InventoryItemIDFK: 0
                        InventoryItemName: string
                        InventoryItemSKU: string
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        TaxCode: string
                        TaxName: string
                        Amount: 0
                        Discount: 0
                    Links:
                      ClientView: string
                      View: string
                      Edit: string
                    Issuer:
                      BillingAddress: string
                      BillingAddressLine: string
                      BillingAddressCity: string
                      BillingAddressState: string
                      BillingAddressPostCode: string
                      BillingCountryCode: string
                      TaxNumber: string
                    Recipient:
                      CompanyIDFK: 0
                      CompanyName: string
                      RecipientFormattedBillingAddress: string
                      RecipientBillingAddressLine: string
                      RecipientBillingAddressCity: string
                      RecipientBillingAddressState: string
                      RecipientBillingAddressPostCode: string
                      RecipientBillingAddressCountryCode: string
            application/xml:
              schema:
                $ref: '#/components/schemas/EstimateList'
              example: <EstimateList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Estimates> <EstimateID>0</EstimateID> <AccountIDFK>0</AccountIDFK> <EstimatePrefix>string</EstimatePrefix> <EstimateItemNumber>string</EstimateItemNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <EstimateStatusCode>string</EstimateStatusCode> <TaxAmount>0</TaxAmount> <EstimateTaxConfigCode>string</EstimateTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <EstimateLineItemID>0</EstimateLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Estimates> </EstimateList>
            text/xml:
              schema:
                $ref: '#/components/schemas/EstimateList'
              example: <EstimateList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Estimates> <EstimateID>0</EstimateID> <AccountIDFK>0</AccountIDFK> <EstimatePrefix>string</EstimatePrefix> <EstimateItemNumber>string</EstimateItemNumber> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Subject>string</Subject> <DateIssued>string</DateIssued> <DateSent>string</DateSent> <DueDate>string</DueDate> <EstimateStatusCode>string</EstimateStatusCode> <TaxAmount>0</TaxAmount> <EstimateTaxConfigCode>string</EstimateTaxConfigCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <ExchangeRate>0</ExchangeRate> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <LineItems> <EstimateLineItemID>0</EstimateLineItemID> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <InventoryItemSKU>string</InventoryItemSKU> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxCode>string</TaxCode> <TaxName>string</TaxName> <Amount>0</Amount> <Discount>0</Discount> </LineItems> <Links> <ClientView>string</ClientView> <View>string</View> <Edit>string</Edit> </Links> <Issuer> <BillingAddress>string</BillingAddress> <BillingAddressLine>string</BillingAddressLine> <BillingAddressCity>string</BillingAddressCity> <BillingAddressState>string</BillingAddressState> <BillingAddressPostCode>string</BillingAddressPostCode> <BillingCountryCode>string</BillingCountryCode> <TaxNumber>string</TaxNumber> </Issuer> <Recipient> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <RecipientFormattedBillingAddress>string</RecipientFormattedBillingAddress> <RecipientBillingAddressLine>string</RecipientBillingAddressLine> <RecipientBillingAddressCity>string</RecipientBillingAddressCity> <RecipientBillingAddressState>string</RecipientBillingAddressState> <RecipientBillingAddressPostCode>string</RecipientBillingAddressPostCode> <RecipientBillingAddressCountryCode>string</RecipientBillingAddressCountryCode> </Recipient> </Estimates> </EstimateList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /ScheduleSeries/EditBooking:
    put:
      summary: Edit Booking
      description: Edit Booking
      operationId: 61af660d777951ebc4730c5d
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditBooking'
            example:
              ScheduleSeriesID: 0
              UserIDFK: 0
              HoursPerDay: 0
              TotalDuration: 0
              DurationType: string
              ScheduleOnDaysOff: true
              ProjectIDFK: 0
              CategoryIDFK: 0
              TaskIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          text/json:
            schema:
              $ref: '#/components/schemas/EditBooking'
            example:
              ScheduleSeriesID: 0
              UserIDFK: 0
              HoursPerDay: 0
              TotalDuration: 0
              DurationType: string
              ScheduleOnDaysOff: true
              ProjectIDFK: 0
              CategoryIDFK: 0
              TaskIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          application/xml:
            schema:
              $ref: '#/components/schemas/EditBooking'
            example: "<EditBooking>{\r\n  \"ScheduleSeriesID\": 0.0,\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"TotalDuration\": 0.0,\r\n  \"DurationType\": \"string\",\r\n  \"ScheduleOnDaysOff\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"CategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</EditBooking>"
          text/xml:
            schema:
              $ref: '#/components/schemas/EditBooking'
            example: "<EditBooking>{\r\n  \"ScheduleSeriesID\": 0.0,\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"TotalDuration\": 0.0,\r\n  \"DurationType\": \"string\",\r\n  \"ScheduleOnDaysOff\": true,\r\n  \"ProjectIDFK\": 0,\r\n  \"CategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</EditBooking>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ScheduleSeriesID:
                  type: integer
                UserIDFK:
                  type: integer
                HoursPerDay:
                  type: number
                TotalDuration:
                  type: number
                DurationType:
                  type: string
                ScheduleOnDaysOff:
                  type: boolean
                ProjectIDFK:
                  type: integer
                CategoryIDFK:
                  type: integer
                TaskIDFK:
                  type: integer
                Notes:
                  type: string
                StartDate:
                  type: string
                EndDate:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
  '/api/Timesheet/{id}':
    delete:
      summary: Delete a Timesheet Entry
      description: Delete a Timesheet Entry
      operationId: 61af660dafff92a91b725b1a
      parameters:
        - name: id
          in: path
          description: Format - int64. The id of the timesheet entry to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetIdDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetIdDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetIdDelete200TextXmlResponse'
              example: <ApiTimesheetIdDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetIdDelete200TextXmlResponse'
              example: <ApiTimesheetIdDelete200TextXmlResponse />
    get:
      summary: Gets a Timesheet Entry by Timesheet ID
      description: Gets a Timesheet Entry by Timesheet ID
      operationId: 61af660f1e31d368a9d1e542
      parameters:
        - name: id
          in: path
          description: Format - int64. Timesheet ID number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            text/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  '/api/Webhook/{id}':
    get:
      summary: Get Webhook Subscription by SubscriptionID
      description: Get Webhook Subscription by SubscriptionID
      operationId: 61af660e4e226b3fbe6ccceb
      parameters:
        - name: id
          in: path
          description: Format - int32.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example:
                Webhooks:
                  - SubscriptionID: 0
                    EventCode: string
                    NotificationURL: string
                    UserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example:
                Webhooks:
                  - SubscriptionID: 0
                    EventCode: string
                    NotificationURL: string
                    UserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example: <WebhookList> <Webhooks> <SubscriptionID>0</SubscriptionID> <EventCode>string</EventCode> <NotificationURL>string</NotificationURL> <UserIDFK>0</UserIDFK> </Webhooks> </WebhookList>
            text/xml:
              schema:
                $ref: '#/components/schemas/WebhookList'
              example: <WebhookList> <Webhooks> <SubscriptionID>0</SubscriptionID> <EventCode>string</EventCode> <NotificationURL>string</NotificationURL> <UserIDFK>0</UserIDFK> </Webhooks> </WebhookList>
    delete:
      summary: Delete Webhook Subscription by ID
      description: Delete Webhook Subscription by ID
      operationId: 61af660e4c7b30f98eeb8683
      parameters:
        - name: id
          in: path
          description: Format - int32. Subscription id to be deleted
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Subscription deleted ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWebhookIdDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiWebhookIdDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiWebhookIdDelete200TextXmlResponse'
              example: <ApiWebhookIdDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiWebhookIdDelete200TextXmlResponse'
              example: <ApiWebhookIdDelete200TextXmlResponse />
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Timesheet:
    post:
      summary: Create a new Timesheet Entry
      description: Create a new Timesheet Entry
      operationId: 61af660ead67fe659008b1f5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTimesheet'
            example:
              UserIDFK: 0
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              Duration: 0
              isInvoiced: true
              EntryDate: string
              hasStartEndTime: true
              Notes: string
              TaskIDFK: 0
              CustomMetadata: string
          text/json:
            schema:
              $ref: '#/components/schemas/NewTimesheet'
            example:
              UserIDFK: 0
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              Duration: 0
              isInvoiced: true
              EntryDate: string
              hasStartEndTime: true
              Notes: string
              TaskIDFK: 0
              CustomMetadata: string
          application/xml:
            schema:
              $ref: '#/components/schemas/NewTimesheet'
            example: "<NewTimesheet>{\r\n  \"UserIDFK\": 0,\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"Duration\": 0.0,\r\n  \"isInvoiced\": true,\r\n  \"EntryDate\": \"string\",\r\n  \"hasStartEndTime\": true,\r\n  \"Notes\": \"string\",\r\n  \"TaskIDFK\": 0,\r\n  \"CustomMetadata\": \"string\"\r\n}</NewTimesheet>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewTimesheet'
            example: "<NewTimesheet>{\r\n  \"UserIDFK\": 0,\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"Duration\": 0.0,\r\n  \"isInvoiced\": true,\r\n  \"EntryDate\": \"string\",\r\n  \"hasStartEndTime\": true,\r\n  \"Notes\": \"string\",\r\n  \"TaskIDFK\": 0,\r\n  \"CustomMetadata\": \"string\"\r\n}</NewTimesheet>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                UserIDFK:
                  type: integer
                ProjectIDFK:
                  type: integer
                TimesheetCategoryIDFK:
                  type: integer
                Duration:
                  type: number
                isInvoiced:
                  type: boolean
                EntryDate:
                  type: string
                hasStartEndTime:
                  type: boolean
                Notes:
                  type: string
                TaskIDFK:
                  type: integer
                CustomMetadata:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            text/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
    get:
      summary: Gets list of Timsheets
      description: Gets list of Timsheets
      operationId: 61af66168e287ba46837cf91
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: EntryDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: EntryDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: UserID
          in: query
          description: Format - int32. The UserID of a timesheet user to filter timesheets for. Only api users with certain higher roles can see timesheets across multiple users.
          schema:
            type: integer
        - name: UserEmail
          in: query
          schema:
            type: string
        - name: CategoryName
          in: query
          schema:
            type: string
        - name: ProjectID
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: isBillable
          in: query
          schema:
            type: boolean
        - name: isInvoiced
          in: query
          schema:
            type: boolean
        - name: isTimerRunning
          in: query
          schema:
            type: boolean
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: includeInvoiceDetails
          in: query
          description: 'Defaults to false. When true, the InvoiceIDFK value will be included in the response.'
          schema:
            type: boolean
        - name: Sort
          in: query
          description: 'Optional sorting instruction. Currently possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc","EntryDate", "EntryDate desc", "StartTimeLocal","StartTimeLocal desc", "TimeSheetEntryID", "TimeSheetEntryID desc"'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetList'
              example:
                Timesheets:
                  - TimesheetEntryID: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Email: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    CustomerIDFK: 0
                    CustomerName: string
                    TimesheetCategoryIDFK: 0
                    CategoryName: string
                    Duration: 0
                    TimesheetEntryApprovalStatusCode: string
                    HasTimer: true
                    TimerStartedAtUTC: string
                    isBillable: true
                    isInvoiced: true
                    EntryDate: string
                    StartTimeLocal: string
                    StartTimeUTC: string
                    EndTimeLocal: string
                    EndTimeUTC: string
                    TimesheetUserTimeZone: string
                    Notes: string
                    TaskIDFK: 0
                    TaskTitle: string
                    InvoiceIDFK: 0
                    InvoiceLineItemIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                    DateApproved: string
                    ApprovedBy: string
                    CustomMetadata: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/TimesheetList'
              example:
                Timesheets:
                  - TimesheetEntryID: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Email: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    CustomerIDFK: 0
                    CustomerName: string
                    TimesheetCategoryIDFK: 0
                    CategoryName: string
                    Duration: 0
                    TimesheetEntryApprovalStatusCode: string
                    HasTimer: true
                    TimerStartedAtUTC: string
                    isBillable: true
                    isInvoiced: true
                    EntryDate: string
                    StartTimeLocal: string
                    StartTimeUTC: string
                    EndTimeLocal: string
                    EndTimeUTC: string
                    TimesheetUserTimeZone: string
                    Notes: string
                    TaskIDFK: 0
                    TaskTitle: string
                    InvoiceIDFK: 0
                    InvoiceLineItemIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                    DateApproved: string
                    ApprovedBy: string
                    CustomMetadata: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/TimesheetList'
              example: <TimesheetList> <Timesheets> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </Timesheets> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </TimesheetList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TimesheetList'
              example: <TimesheetList> <Timesheets> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </Timesheets> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </TimesheetList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    put:
      summary: Update a Timesheet
      description: 'The FieldsToUpdate field expects a string array collection of the field names you would like updated. Valid fields to update inlcude "ProjectIDFK", "TimeSheetCategoryIDFK", "TaskIDFK", "Duration", "EntryDate", "Notes", "hasStartEndTime", "CustomMetadata". If you intend to provide start/end times on timesheets, this is achieved by including the start time in the EntryDate field (Iso date format), along with a Duration (decimal format).'
      operationId: 61af661ad6937c5f46d80a08
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetModel'
            example:
              TimeSheetEntryID: 0
              FieldsToUpdate:
                - string
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              TaskIDFK: 0
              Duration: 0
              EntryDate: string
              hasStartEndTime: true
              Notes: string
              CustomMetadata: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetModel'
            example:
              TimeSheetEntryID: 0
              FieldsToUpdate:
                - string
              ProjectIDFK: 0
              TimesheetCategoryIDFK: 0
              TaskIDFK: 0
              Duration: 0
              EntryDate: string
              hasStartEndTime: true
              Notes: string
              CustomMetadata: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetModel'
            example: "<UpdateTimesheetModel>{\r\n  \"TimeSheetEntryID\": 0.0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Duration\": 0.0,\r\n  \"EntryDate\": \"string\",\r\n  \"hasStartEndTime\": true,\r\n  \"Notes\": \"string\",\r\n  \"CustomMetadata\": \"string\"\r\n}</UpdateTimesheetModel>"
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTimesheetModel'
            example: "<UpdateTimesheetModel>{\r\n  \"TimeSheetEntryID\": 0.0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ProjectIDFK\": 0,\r\n  \"TimesheetCategoryIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"Duration\": 0.0,\r\n  \"EntryDate\": \"string\",\r\n  \"hasStartEndTime\": true,\r\n  \"Notes\": \"string\",\r\n  \"CustomMetadata\": \"string\"\r\n}</UpdateTimesheetModel>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                TimeSheetEntryID:
                  type: integer
                FieldsToUpdate:
                  type: array
                ProjectIDFK:
                  type: integer
                TimesheetCategoryIDFK:
                  type: integer
                TaskIDFK:
                  type: integer
                Duration:
                  type: number
                EntryDate:
                  type: string
                hasStartEndTime:
                  type: boolean
                Notes:
                  type: string
                CustomMetadata:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            text/json:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example:
                TimesheetEntryID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                CustomerIDFK: 0
                CustomerName: string
                TimesheetCategoryIDFK: 0
                CategoryName: string
                Duration: 0
                TimesheetEntryApprovalStatusCode: string
                HasTimer: true
                TimerStartedAtUTC: string
                isBillable: true
                isInvoiced: true
                EntryDate: string
                StartTimeLocal: string
                StartTimeUTC: string
                EndTimeLocal: string
                EndTimeUTC: string
                TimesheetUserTimeZone: string
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                InvoiceIDFK: 0
                InvoiceLineItemIDFK: 0
                DateCreated: string
                DateUpdated: string
                DateApproved: string
                ApprovedBy: string
                CustomMetadata: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TimesheetDetails'
              example: <TimesheetDetails> <TimesheetEntryID>0</TimesheetEntryID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <TimesheetCategoryIDFK>0</TimesheetCategoryIDFK> <CategoryName>string</CategoryName> <Duration>0</Duration> <TimesheetEntryApprovalStatusCode>string</TimesheetEntryApprovalStatusCode> <HasTimer>true</HasTimer> <TimerStartedAtUTC>string</TimerStartedAtUTC> <isBillable>true</isBillable> <isInvoiced>true</isInvoiced> <EntryDate>string</EntryDate> <StartTimeLocal>string</StartTimeLocal> <StartTimeUTC>string</StartTimeUTC> <EndTimeLocal>string</EndTimeLocal> <EndTimeUTC>string</EndTimeUTC> <TimesheetUserTimeZone>string</TimesheetUserTimeZone> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InvoiceIDFK>0</InvoiceIDFK> <InvoiceLineItemIDFK>0</InvoiceLineItemIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <DateApproved>string</DateApproved> <ApprovedBy>string</ApprovedBy> <CustomMetadata>string</CustomMetadata> </TimesheetDetails>
  /api/Project:
    post:
      summary: Create a Project
      description: Create a Project
      operationId: 61af660cd732f907a4dcad9c
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewProjectModel'
            example:
              CompanyIDFK: 0
              CompanyName: string
              CurrencyCode: string
              ProjectTitle: string
              ProjectCode: string
              ProjectNotes: string
              TimesheetApprovalRequiredbyDefault: true
              PopulateDefaultProjectMembers: true
              isTaskRequiredOnTimesheet: true
              StartDate: string
              EndDate: string
              BudgetAmount: 0
              BudgetHours: 0
              ProjectStatusCode: string
              ProjectCategoryIDFK: 0
          text/json:
            schema:
              $ref: '#/components/schemas/NewProjectModel'
            example:
              CompanyIDFK: 0
              CompanyName: string
              CurrencyCode: string
              ProjectTitle: string
              ProjectCode: string
              ProjectNotes: string
              TimesheetApprovalRequiredbyDefault: true
              PopulateDefaultProjectMembers: true
              isTaskRequiredOnTimesheet: true
              StartDate: string
              EndDate: string
              BudgetAmount: 0
              BudgetHours: 0
              ProjectStatusCode: string
              ProjectCategoryIDFK: 0
          application/xml:
            schema:
              $ref: '#/components/schemas/NewProjectModel'
            example: "<NewProjectModel>{\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ProjectTitle\": \"string\",\r\n  \"ProjectCode\": \"string\",\r\n  \"ProjectNotes\": \"string\",\r\n  \"TimesheetApprovalRequiredbyDefault\": true,\r\n  \"PopulateDefaultProjectMembers\": true,\r\n  \"isTaskRequiredOnTimesheet\": true,\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\",\r\n  \"BudgetAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"ProjectStatusCode\": \"string\",\r\n  \"ProjectCategoryIDFK\": 0\r\n}</NewProjectModel>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewProjectModel'
            example: "<NewProjectModel>{\r\n  \"CompanyIDFK\": 0,\r\n  \"CompanyName\": \"string\",\r\n  \"CurrencyCode\": \"string\",\r\n  \"ProjectTitle\": \"string\",\r\n  \"ProjectCode\": \"string\",\r\n  \"ProjectNotes\": \"string\",\r\n  \"TimesheetApprovalRequiredbyDefault\": true,\r\n  \"PopulateDefaultProjectMembers\": true,\r\n  \"isTaskRequiredOnTimesheet\": true,\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\",\r\n  \"BudgetAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"ProjectStatusCode\": \"string\",\r\n  \"ProjectCategoryIDFK\": 0\r\n}</NewProjectModel>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                CompanyIDFK:
                  type: integer
                CompanyName:
                  type: string
                CurrencyCode:
                  type: string
                ProjectTitle:
                  type: string
                ProjectCode:
                  type: string
                ProjectNotes:
                  type: string
                TimesheetApprovalRequiredbyDefault:
                  type: boolean
                PopulateDefaultProjectMembers:
                  type: boolean
                isTaskRequiredOnTimesheet:
                  type: boolean
                StartDate:
                  type: string
                EndDate:
                  type: string
                BudgetAmount:
                  type: number
                BudgetHours:
                  type: number
                ProjectStatusCode:
                  type: string
                ProjectCategoryIDFK:
                  type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    get:
      summary: Gets list of Projects
      description: Gets list of Projects
      operationId: 61af66144c1479f7f2d54d37
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Only show project records updated after a certain date (UTC)
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          description: 'A column to sort on. Current possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc"'
          schema:
            type: string
        - name: TimesheetUserID
          in: query
          description: Format - int32. Filter to the projects that the supplied UserID can add timesheets to
          schema:
            type: integer
        - name: includeArchived
          in: query
          description: Include Archived Projects in the results
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
              example:
                Projects:
                  - ProjectID: 0
                    ProjectCode: string
                    Title: string
                    isArchived: true
                    Notes: string
                    CompanyName: string
                    CompanyIDFK: 0
                    ProjectCategoryIDFK: 0
                    ProjectCategoryName: string
                    isTaskRequiredOnTimesheet: true
                    DefaultAccountTaskTypeIDFK: 0
                    DefaultAccountTaskTypeName: string
                    ProjectOwnerUserIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectList'
              example:
                Projects:
                  - ProjectID: 0
                    ProjectCode: string
                    Title: string
                    isArchived: true
                    Notes: string
                    CompanyName: string
                    CompanyIDFK: 0
                    ProjectCategoryIDFK: 0
                    ProjectCategoryName: string
                    isTaskRequiredOnTimesheet: true
                    DefaultAccountTaskTypeIDFK: 0
                    DefaultAccountTaskTypeName: string
                    ProjectOwnerUserIDFK: 0
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectList'
              example: <ProjectList> <Projects> <ProjectID>0</ProjectID> <ProjectCode>string</ProjectCode> <Title>string</Title> <isArchived>true</isArchived> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Projects> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ProjectList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectList'
              example: <ProjectList> <Projects> <ProjectID>0</ProjectID> <ProjectCode>string</ProjectCode> <Title>string</Title> <isArchived>true</isArchived> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Projects> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ProjectList>
    put:
      summary: Update an Project
      description: Update a Project
      operationId: 61af6619e9907ec1a23bc530
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectModel'
            example:
              ProjectID: 0
              FieldsToUpdate:
                - string
              ProjectTitle: string
              ProjectNotes: string
              TimesheetApprovalRequiredbyDefault: true
              isTaskRequiredOnTimesheet: true
              StartDate: string
              EndDate: string
              BudgetAmount: 0
              BudgetHours: 0
              ProjectStatusCode: string
              ProjectCategoryIDFK: 0
              ProjectBillableTypeCode: string
              ProjectBudgetTypeCode: string
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectModel'
            example:
              ProjectID: 0
              FieldsToUpdate:
                - string
              ProjectTitle: string
              ProjectNotes: string
              TimesheetApprovalRequiredbyDefault: true
              isTaskRequiredOnTimesheet: true
              StartDate: string
              EndDate: string
              BudgetAmount: 0
              BudgetHours: 0
              ProjectStatusCode: string
              ProjectCategoryIDFK: 0
              ProjectBillableTypeCode: string
              ProjectBudgetTypeCode: string
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateProjectModel'
            example: "<UpdateProjectModel>{\r\n  \"ProjectID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ProjectTitle\": \"string\",\r\n  \"ProjectNotes\": \"string\",\r\n  \"TimesheetApprovalRequiredbyDefault\": true,\r\n  \"isTaskRequiredOnTimesheet\": true,\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\",\r\n  \"BudgetAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"ProjectStatusCode\": \"string\",\r\n  \"ProjectCategoryIDFK\": 0,\r\n  \"ProjectBillableTypeCode\": \"string\",\r\n  \"ProjectBudgetTypeCode\": \"string\"\r\n}</UpdateProjectModel>"
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateProjectModel'
            example: "<UpdateProjectModel>{\r\n  \"ProjectID\": 0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ProjectTitle\": \"string\",\r\n  \"ProjectNotes\": \"string\",\r\n  \"TimesheetApprovalRequiredbyDefault\": true,\r\n  \"isTaskRequiredOnTimesheet\": true,\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\",\r\n  \"BudgetAmount\": 0.0,\r\n  \"BudgetHours\": 0.0,\r\n  \"ProjectStatusCode\": \"string\",\r\n  \"ProjectCategoryIDFK\": 0,\r\n  \"ProjectBillableTypeCode\": \"string\",\r\n  \"ProjectBudgetTypeCode\": \"string\"\r\n}</UpdateProjectModel>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ProjectID:
                  type: integer
                FieldsToUpdate:
                  type: array
                ProjectTitle:
                  type: string
                ProjectNotes:
                  type: string
                TimesheetApprovalRequiredbyDefault:
                  type: boolean
                isTaskRequiredOnTimesheet:
                  type: boolean
                StartDate:
                  type: string
                EndDate:
                  type: string
                BudgetAmount:
                  type: number
                BudgetHours:
                  type: number
                ProjectStatusCode:
                  type: string
                ProjectCategoryIDFK:
                  type: integer
                ProjectBillableTypeCode:
                  type: string
                ProjectBudgetTypeCode:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
  /api/Task/Lookup:
    get:
      summary: Gets minimal list of Tasks for the current user
      description: Groups Tasks by Section. Default sort is by Section Title followed by Task Title
      operationId: 61af6614aa52d85fa214c323
      parameters:
        - name: projectID
          in: query
          description: Format - int32. (required) The ProjectID to use when filtering Tasks
          required: true
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: hideCompleted
          in: query
          description: (optional) true/false to hide completed tasks. Defaults false
          schema:
            type: boolean
        - name: search
          in: query
          description: (optional) Search string to match against Task title. Performs begins-with match
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDropdownList'
              example:
                sections:
                  - SectionTitle: string
                    tasks:
                      - TaskID: string
                        Title: string
                pageNumber: 0
                PageSize: 0
                hasMore: true
            text/json:
              schema:
                $ref: '#/components/schemas/TaskDropdownList'
              example:
                sections:
                  - SectionTitle: string
                    tasks:
                      - TaskID: string
                        Title: string
                pageNumber: 0
                PageSize: 0
                hasMore: true
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskDropdownList'
              example: <TaskDropdownList> <sections> <SectionTitle>string</SectionTitle> <tasks> <TaskID>string</TaskID> <Title>string</Title> </tasks> </sections> <pageNumber>0</pageNumber> <PageSize>0</PageSize> <hasMore>true</hasMore> </TaskDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskDropdownList'
              example: <TaskDropdownList> <sections> <SectionTitle>string</SectionTitle> <tasks> <TaskID>string</TaskID> <Title>string</Title> </tasks> </sections> <pageNumber>0</pageNumber> <PageSize>0</PageSize> <hasMore>true</hasMore> </TaskDropdownList>
  /api/Expense:
    delete:
      summary: Delete a Timesheet Entry
      description: Delete a Timesheet Entry
      operationId: 61af660f7f165ed3f8229834
      requestBody:
        description: A collection of ExpenseIDs to delete
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example:
              - 0
          text/json:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example:
              - 0
          application/xml:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example: '<ExpenseIDs>[ 0.0 ]</ExpenseIDs>'
          text/xml:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example: '<ExpenseIDs>[ 0.0 ]</ExpenseIDs>'
          application/x-www-form-urlencoded: { }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDeleteResultSet'
              example:
                Results:
                  - ExpenseID: 0
                    Success: true
                    ErrorMessage: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseDeleteResultSet'
              example:
                Results:
                  - ExpenseID: 0
                    Success: true
                    ErrorMessage: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDeleteResultSet'
              example: <ExpenseDeleteResultSet> <Results> <ExpenseID>0</ExpenseID> <Success>true</Success> <ErrorMessage>string</ErrorMessage> </Results> </ExpenseDeleteResultSet>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDeleteResultSet'
              example: <ExpenseDeleteResultSet> <Results> <ExpenseID>0</ExpenseID> <Success>true</Success> <ErrorMessage>string</ErrorMessage> </Results> </ExpenseDeleteResultSet>
    post:
      summary: Create an Expense
      description: Create an Expense
      operationId: 61af6610d9cf41f4ba3c11bc
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewExpense'
            example:
              ExpenseDate: string
              UserIDFK: 0
              UserEmail: string
              ExpenseCategoryIDFK: 0
              ExpenseCategoryName: string
              isChargeable: true
              isReimbursable: true
              Quantity: 0
              CustomerIDFK: 0
              CustomerName: string
              ProjectIDFK: 0
              ProjectName: string
              TaskIDFK: 0
              CurrencyCode: string
              ExchangeRate: 0
              Amount: 0
              TaxIDFK: 0
              TaxName: string
              TransactionTaxConfigCode: string
              GroupTripName: string
              ExpensePaymentMethodIDFK: 0
              Merchant: string
              MerchantTaxNumber: string
              Notes: string
              VerifyAndSave: true
              FileAttachmentIDs:
                - 0
          text/json:
            schema:
              $ref: '#/components/schemas/NewExpense'
            example:
              ExpenseDate: string
              UserIDFK: 0
              UserEmail: string
              ExpenseCategoryIDFK: 0
              ExpenseCategoryName: string
              isChargeable: true
              isReimbursable: true
              Quantity: 0
              CustomerIDFK: 0
              CustomerName: string
              ProjectIDFK: 0
              ProjectName: string
              TaskIDFK: 0
              CurrencyCode: string
              ExchangeRate: 0
              Amount: 0
              TaxIDFK: 0
              TaxName: string
              TransactionTaxConfigCode: string
              GroupTripName: string
              ExpensePaymentMethodIDFK: 0
              Merchant: string
              MerchantTaxNumber: string
              Notes: string
              VerifyAndSave: true
              FileAttachmentIDs:
                - 0
          application/xml:
            schema:
              $ref: '#/components/schemas/NewExpense'
            example: "<NewExpense>{\r\n  \"ExpenseDate\": \"string\",\r\n  \"UserIDFK\": 0,\r\n  \"UserEmail\": \"string\",\r\n  \"ExpenseCategoryIDFK\": 0,\r\n  \"ExpenseCategoryName\": \"string\",\r\n  \"isChargeable\": true,\r\n  \"isReimbursable\": true,\r\n  \"Quantity\": 0.0,\r\n  \"CustomerIDFK\": 0,\r\n  \"CustomerName\": \"string\",\r\n  \"ProjectIDFK\": 0,\r\n  \"ProjectName\": \"string\",\r\n  \"TaskIDFK\": 0,\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"Amount\": 0.0,\r\n  \"TaxIDFK\": 0,\r\n  \"TaxName\": \"string\",\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"GroupTripName\": \"string\",\r\n  \"ExpensePaymentMethodIDFK\": 0,\r\n  \"Merchant\": \"string\",\r\n  \"MerchantTaxNumber\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"VerifyAndSave\": true,\r\n  \"FileAttachmentIDs\": [\r\n    0.0\r\n  ]\r\n}</NewExpense>"
          text/xml:
            schema:
              $ref: '#/components/schemas/NewExpense'
            example: "<NewExpense>{\r\n  \"ExpenseDate\": \"string\",\r\n  \"UserIDFK\": 0,\r\n  \"UserEmail\": \"string\",\r\n  \"ExpenseCategoryIDFK\": 0,\r\n  \"ExpenseCategoryName\": \"string\",\r\n  \"isChargeable\": true,\r\n  \"isReimbursable\": true,\r\n  \"Quantity\": 0.0,\r\n  \"CustomerIDFK\": 0,\r\n  \"CustomerName\": \"string\",\r\n  \"ProjectIDFK\": 0,\r\n  \"ProjectName\": \"string\",\r\n  \"TaskIDFK\": 0,\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"Amount\": 0.0,\r\n  \"TaxIDFK\": 0,\r\n  \"TaxName\": \"string\",\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"GroupTripName\": \"string\",\r\n  \"ExpensePaymentMethodIDFK\": 0,\r\n  \"Merchant\": \"string\",\r\n  \"MerchantTaxNumber\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"VerifyAndSave\": true,\r\n  \"FileAttachmentIDs\": [\r\n    0.0\r\n  ]\r\n}</NewExpense>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ExpenseDate:
                  type: string
                UserIDFK:
                  type: integer
                UserEmail:
                  type: string
                ExpenseCategoryIDFK:
                  type: integer
                ExpenseCategoryName:
                  type: string
                isChargeable:
                  type: boolean
                isReimbursable:
                  type: boolean
                Quantity:
                  type: number
                CustomerIDFK:
                  type: integer
                CustomerName:
                  type: string
                ProjectIDFK:
                  type: integer
                ProjectName:
                  type: string
                TaskIDFK:
                  type: integer
                CurrencyCode:
                  type: string
                ExchangeRate:
                  type: number
                Amount:
                  type: number
                TaxIDFK:
                  type: integer
                TaxName:
                  type: string
                TransactionTaxConfigCode:
                  type: string
                GroupTripName:
                  type: string
                ExpensePaymentMethodIDFK:
                  type: integer
                Merchant:
                  type: string
                MerchantTaxNumber:
                  type: string
                Notes:
                  type: string
                VerifyAndSave:
                  type: boolean
                FileAttachmentIDs:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
    get:
      summary: Gets list of Expenses
      description: Gets list of Expenses
      operationId: 61af66123db5c5bee426d5be
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: ExpenseDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: ExpenseDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: UserEmail
          in: query
          schema:
            type: string
        - name: UserID
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: CategoryName
          in: query
          schema:
            type: string
        - name: CustomerID
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: ProjectID
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: isChargeable
          in: query
          schema:
            type: boolean
        - name: isInvoiced
          in: query
          schema:
            type: boolean
        - name: ExpenseReimbursementIDFK
          in: query
          description: Format - int64.
          schema:
            type: integer
        - name: ExpensePaymentMethodIDFK
          in: query
          description: Format - int32.
          schema:
            type: integer
        - name: ExpenseApprovalStatusCode
          in: query
          schema:
            type: string
        - name: Search
          in: query
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseList'
              example:
                Expenses:
                  - ExpenseID: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Email: string
                    CustomerIDFK: 0
                    CustomerName: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    TaskIDFK: 0
                    TaskTitle: string
                    ExpenseCategoryIDFK: 0
                    ExpenseCategoryName: string
                    ExpenseCategoryHasUnitPrice: true
                    ExpenseCategoryUnitPrice: 0
                    ExpenseCategoryUnitName: string
                    CurrencyCode: string
                    ExchangeRate: 0
                    Quantity: 0
                    Amount: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxName: string
                    TransactionTaxConfigCode: string
                    TransactionTaxConfigName: string
                    isOfficialExchangeRate: true
                    ExpenseApprovalStatusCode: string
                    ExpensePaymentMethodIDFK: 0
                    ExpensePaymentMethodName: string
                    isChargeable: true
                    ChargeableStatusCode: string
                    isReimbursable: true
                    ExpenseReimbursementStatusCode: string
                    ExpenseReimbursementIDFK: 0
                    ExpenseDate: string
                    FileAttachmentIDFK: 0
                    AttachmentURL: string
                    AttachmentPreviewURL: string
                    Merchant: string
                    MerchantTaxNumber: string
                    Notes: string
                    ExpenseReportIDFK: 0
                    ExpenseReportName: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseList'
              example:
                Expenses:
                  - ExpenseID: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Email: string
                    CustomerIDFK: 0
                    CustomerName: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    TaskIDFK: 0
                    TaskTitle: string
                    ExpenseCategoryIDFK: 0
                    ExpenseCategoryName: string
                    ExpenseCategoryHasUnitPrice: true
                    ExpenseCategoryUnitPrice: 0
                    ExpenseCategoryUnitName: string
                    CurrencyCode: string
                    ExchangeRate: 0
                    Quantity: 0
                    Amount: 0
                    TaxAmount: 0
                    TaxIDFK: 0
                    TaxName: string
                    TransactionTaxConfigCode: string
                    TransactionTaxConfigName: string
                    isOfficialExchangeRate: true
                    ExpenseApprovalStatusCode: string
                    ExpensePaymentMethodIDFK: 0
                    ExpensePaymentMethodName: string
                    isChargeable: true
                    ChargeableStatusCode: string
                    isReimbursable: true
                    ExpenseReimbursementStatusCode: string
                    ExpenseReimbursementIDFK: 0
                    ExpenseDate: string
                    FileAttachmentIDFK: 0
                    AttachmentURL: string
                    AttachmentPreviewURL: string
                    Merchant: string
                    MerchantTaxNumber: string
                    Notes: string
                    ExpenseReportIDFK: 0
                    ExpenseReportName: string
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseList'
              example: <ExpenseList> <Expenses> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Expenses> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseList'
              example: <ExpenseList> <Expenses> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Expenses> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    put:
      summary: Update an Expense
      description: Update an Expense
      operationId: 61af661c674795ec7ed65d4a
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExpense'
            example:
              ExpenseID: 0
              FieldsToUpdate:
                - string
              ExpenseDate: string
              ExpenseCategoryIDFK: 0
              isChargeable: true
              isReimbursable: true
              Quantity: 0
              CustomerIDFK: 0
              ProjectIDFK: 0
              TaskIDFK: 0
              CurrencyCode: string
              ExchangeRate: 0
              Amount: 0
              TaxIDFK: 0
              TransactionTaxConfigCode: string
              GroupTripName: string
              ExpensePaymentMethodIDFK: 0
              Merchant: string
              MerchantTaxNumber: string
              Notes: string
              VerifyAndSave: true
              FileAttachmentIDs:
                - 0
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateExpense'
            example:
              ExpenseID: 0
              FieldsToUpdate:
                - string
              ExpenseDate: string
              ExpenseCategoryIDFK: 0
              isChargeable: true
              isReimbursable: true
              Quantity: 0
              CustomerIDFK: 0
              ProjectIDFK: 0
              TaskIDFK: 0
              CurrencyCode: string
              ExchangeRate: 0
              Amount: 0
              TaxIDFK: 0
              TransactionTaxConfigCode: string
              GroupTripName: string
              ExpensePaymentMethodIDFK: 0
              Merchant: string
              MerchantTaxNumber: string
              Notes: string
              VerifyAndSave: true
              FileAttachmentIDs:
                - 0
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateExpense'
            example: "<UpdateExpense>{\r\n  \"ExpenseID\": 0.0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ExpenseDate\": \"string\",\r\n  \"ExpenseCategoryIDFK\": 0,\r\n  \"isChargeable\": true,\r\n  \"isReimbursable\": true,\r\n  \"Quantity\": 0.0,\r\n  \"CustomerIDFK\": 0,\r\n  \"ProjectIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"Amount\": 0.0,\r\n  \"TaxIDFK\": 0,\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"GroupTripName\": \"string\",\r\n  \"ExpensePaymentMethodIDFK\": 0,\r\n  \"Merchant\": \"string\",\r\n  \"MerchantTaxNumber\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"VerifyAndSave\": true,\r\n  \"FileAttachmentIDs\": [\r\n    0.0\r\n  ]\r\n}</UpdateExpense>"
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateExpense'
            example: "<UpdateExpense>{\r\n  \"ExpenseID\": 0.0,\r\n  \"FieldsToUpdate\": [\r\n    \"string\"\r\n  ],\r\n  \"ExpenseDate\": \"string\",\r\n  \"ExpenseCategoryIDFK\": 0,\r\n  \"isChargeable\": true,\r\n  \"isReimbursable\": true,\r\n  \"Quantity\": 0.0,\r\n  \"CustomerIDFK\": 0,\r\n  \"ProjectIDFK\": 0,\r\n  \"TaskIDFK\": 0,\r\n  \"CurrencyCode\": \"string\",\r\n  \"ExchangeRate\": 0.0,\r\n  \"Amount\": 0.0,\r\n  \"TaxIDFK\": 0,\r\n  \"TransactionTaxConfigCode\": \"string\",\r\n  \"GroupTripName\": \"string\",\r\n  \"ExpensePaymentMethodIDFK\": 0,\r\n  \"Merchant\": \"string\",\r\n  \"MerchantTaxNumber\": \"string\",\r\n  \"Notes\": \"string\",\r\n  \"VerifyAndSave\": true,\r\n  \"FileAttachmentIDs\": [\r\n    0.0\r\n  ]\r\n}</UpdateExpense>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ExpenseID:
                  type: integer
                FieldsToUpdate:
                  type: array
                ExpenseDate:
                  type: string
                ExpenseCategoryIDFK:
                  type: integer
                isChargeable:
                  type: boolean
                isReimbursable:
                  type: boolean
                Quantity:
                  type: number
                CustomerIDFK:
                  type: integer
                ProjectIDFK:
                  type: integer
                TaskIDFK:
                  type: integer
                CurrencyCode:
                  type: string
                ExchangeRate:
                  type: number
                Amount:
                  type: number
                TaxIDFK:
                  type: integer
                TransactionTaxConfigCode:
                  type: string
                GroupTripName:
                  type: string
                ExpensePaymentMethodIDFK:
                  type: integer
                Merchant:
                  type: string
                MerchantTaxNumber:
                  type: string
                Notes:
                  type: string
                VerifyAndSave:
                  type: boolean
                FileAttachmentIDs:
                  type: array
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
  /ScheduleSeries/AddLeave:
    post:
      summary: Create new Leave Booking
      description: Create new Leave Booking
      operationId: 61af660eaa281959ba8ab3a4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLeave'
            example:
              LeaveUserIDFK: 0
              LeaveNotify: true
              LeaveHoursPerDay: 0
              LeaveTypeIDFK: 0
              LeaveNotes: string
              LeaveStartDate: string
              LeaveEndDate: string
          text/json:
            schema:
              $ref: '#/components/schemas/CreateLeave'
            example:
              LeaveUserIDFK: 0
              LeaveNotify: true
              LeaveHoursPerDay: 0
              LeaveTypeIDFK: 0
              LeaveNotes: string
              LeaveStartDate: string
              LeaveEndDate: string
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateLeave'
            example: "<CreateLeave>{\r\n  \"LeaveUserIDFK\": 0,\r\n  \"LeaveNotify\": true,\r\n  \"LeaveHoursPerDay\": 0.0,\r\n  \"LeaveTypeIDFK\": 0,\r\n  \"LeaveNotes\": \"string\",\r\n  \"LeaveStartDate\": \"string\",\r\n  \"LeaveEndDate\": \"string\"\r\n}</CreateLeave>"
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateLeave'
            example: "<CreateLeave>{\r\n  \"LeaveUserIDFK\": 0,\r\n  \"LeaveNotify\": true,\r\n  \"LeaveHoursPerDay\": 0.0,\r\n  \"LeaveTypeIDFK\": 0,\r\n  \"LeaveNotes\": \"string\",\r\n  \"LeaveStartDate\": \"string\",\r\n  \"LeaveEndDate\": \"string\"\r\n}</CreateLeave>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                LeaveUserIDFK:
                  type: integer
                LeaveNotify:
                  type: boolean
                LeaveHoursPerDay:
                  type: number
                LeaveTypeIDFK:
                  type: integer
                LeaveNotes:
                  type: string
                LeaveStartDate:
                  type: string
                LeaveEndDate:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
  /api/Tax:
    get:
      summary: Get List of Taxes configured in the Avaza account.
      description: Get List of Taxes configured in the Avaza account.
      operationId: 61af660fa7231c683263bb64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxList'
              example:
                Taxes:
                  - TaxID: 0
                    TaxCode: string
                    Name: string
                    CalculatedPercent: 0
                    TaxComponents:
                      - TaxComponentID: 0
                        TaxIDFK: 0
                        ComponentTaxCode: string
                        Name: string
                        Percentage: 0
                        isCompound: true
            text/json:
              schema:
                $ref: '#/components/schemas/TaxList'
              example:
                Taxes:
                  - TaxID: 0
                    TaxCode: string
                    Name: string
                    CalculatedPercent: 0
                    TaxComponents:
                      - TaxComponentID: 0
                        TaxIDFK: 0
                        ComponentTaxCode: string
                        Name: string
                        Percentage: 0
                        isCompound: true
            application/xml:
              schema:
                $ref: '#/components/schemas/TaxList'
              example: <TaxList> <Taxes> <TaxID>0</TaxID> <TaxCode>string</TaxCode> <Name>string</Name> <CalculatedPercent>0</CalculatedPercent> <TaxComponents> <TaxComponentID>0</TaxComponentID> <TaxIDFK>0</TaxIDFK> <ComponentTaxCode>string</ComponentTaxCode> <Name>string</Name> <Percentage>0</Percentage> <isCompound>true</isCompound> </TaxComponents> </Taxes> </TaxList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaxList'
              example: <TaxList> <Taxes> <TaxID>0</TaxID> <TaxCode>string</TaxCode> <Name>string</Name> <CalculatedPercent>0</CalculatedPercent> <TaxComponents> <TaxComponentID>0</TaxComponentID> <TaxIDFK>0</TaxIDFK> <ComponentTaxCode>string</ComponentTaxCode> <Name>string</Name> <Percentage>0</Percentage> <isCompound>true</isCompound> </TaxComponents> </Taxes> </TaxList>
  /api/Expense/Attachment:
    post:
      summary: ExpenseAttachment
      description: ExpenseAttachment
      operationId: 61af660f570133a08da11986
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'
              example:
                FileAttachments:
                  - FileAttachmentID: 0
                    SizeBytes: 0
                    OriginalFilename: string
                    PublicFileURL: string
                    PreviewBaseURL: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'
              example:
                FileAttachments:
                  - FileAttachmentID: 0
                    SizeBytes: 0
                    OriginalFilename: string
                    PublicFileURL: string
                    PreviewBaseURL: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'
              example: <ExpenseAttachmentUploadResult> <FileAttachments> <FileAttachmentID>0</FileAttachmentID> <SizeBytes>0</SizeBytes> <OriginalFilename>string</OriginalFilename> <PublicFileURL>string</PublicFileURL> <PreviewBaseURL>string</PreviewBaseURL> </FileAttachments> </ExpenseAttachmentUploadResult>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseAttachmentUploadResult'
              example: <ExpenseAttachmentUploadResult> <FileAttachments> <FileAttachmentID>0</FileAttachmentID> <SizeBytes>0</SizeBytes> <OriginalFilename>string</OriginalFilename> <PublicFileURL>string</PublicFileURL> <PreviewBaseURL>string</PreviewBaseURL> </FileAttachments> </ExpenseAttachmentUploadResult>
  /ScheduleSeries/EditLeave:
    put:
      summary: Edit Leave Booking
      description: Edit Leave Booking
      operationId: 61af660e14f00ea6c23f4bb9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditLeave'
            example:
              ScheduleSeriesID: 0
              UserIDFK: 0
              HoursPerDay: 0
              LeaveTypeIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          text/json:
            schema:
              $ref: '#/components/schemas/EditLeave'
            example:
              ScheduleSeriesID: 0
              UserIDFK: 0
              HoursPerDay: 0
              LeaveTypeIDFK: 0
              Notes: string
              StartDate: string
              EndDate: string
          application/xml:
            schema:
              $ref: '#/components/schemas/EditLeave'
            example: "<EditLeave>{\r\n  \"ScheduleSeriesID\": 0.0,\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"LeaveTypeIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</EditLeave>"
          text/xml:
            schema:
              $ref: '#/components/schemas/EditLeave'
            example: "<EditLeave>{\r\n  \"ScheduleSeriesID\": 0.0,\r\n  \"UserIDFK\": 0,\r\n  \"HoursPerDay\": 0.0,\r\n  \"LeaveTypeIDFK\": 0,\r\n  \"Notes\": \"string\",\r\n  \"StartDate\": \"string\",\r\n  \"EndDate\": \"string\"\r\n}</EditLeave>"
          application/x-www-form-urlencoded:
            schema:
              properties:
                ScheduleSeriesID:
                  type: integer
                UserIDFK:
                  type: integer
                HoursPerDay:
                  type: number
                LeaveTypeIDFK:
                  type: integer
                Notes:
                  type: string
                StartDate:
                  type: string
                EndDate:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example:
                ScheduleSeriesID: 0
                AccountIDFK: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                ProjectIDFK: 0
                ProjectTitle: string
                CompanyIDFK: 0
                CompanyName: string
                TimeSheetCategoryIDFK: 0
                TimeSheetCategoryName: string
                LeaveTypeIDFK: 0
                LeaveTypeName: string
                StartDate: string
                EndDate: string
                HoursPerDay: 0
                TotalDuration: 0
                ScheduleOnDaysOff: true
                Notes: string
                TaskIDFK: 0
                TaskTitle: string
                DateCreated: string
                DateUpdated: string
                UpdatedByUserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesDetails'
              example: <ScheduleSeriesDetails> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeriesDetails>
  '/api/Task/{id}':
    get:
      summary: Gets Task by Task ID
      description: Gets Task by Task ID
      operationId: 61af6615b23beb6b49fab4cd
      parameters:
        - name: id
          in: path
          description: Format - int64. Task ID number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example:
                TaskID: 0
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                SectionTitle: string
                SectionIDFK: 0
                Title: string
                Description: string
                DescriptionNoHTML: string
                AssignedToFirstname: string
                AssignedToLastname: string
                AssignedToEmail: string
                AssignedToUserIDFK: string
                DateStart: string
                DateDue: string
                DateCompleted: string
                EstimatedEffort: 0
                ActualTime: 0
                Tags:
                  - TagID: 0
                    Name: string
                    Color: string
                AccountTaskTypeIDFK: 0
                TaskStatusCode: string
                TaskStatusName: string
                isCompleteStatus: true
                PercentComplete: 0
                TaskPriorityCode: string
                TaskPriorityName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskDetails'
              example: <TaskDetails> <TaskID>0</TaskID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <SectionTitle>string</SectionTitle> <SectionIDFK>0</SectionIDFK> <Title>string</Title> <Description>string</Description> <DescriptionNoHTML>string</DescriptionNoHTML> <AssignedToFirstname>string</AssignedToFirstname> <AssignedToLastname>string</AssignedToLastname> <AssignedToEmail>string</AssignedToEmail> <AssignedToUserIDFK>string</AssignedToUserIDFK> <DateStart>string</DateStart> <DateDue>string</DateDue> <DateCompleted>string</DateCompleted> <EstimatedEffort>0</EstimatedEffort> <ActualTime>0</ActualTime> <Tags> <TagID>0</TagID> <Name>string</Name> <Color>string</Color> </Tags> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskStatusCode>string</TaskStatusCode> <TaskStatusName>string</TaskStatusName> <isCompleteStatus>true</isCompleteStatus> <PercentComplete>0</PercentComplete> <TaskPriorityCode>string</TaskPriorityCode> <TaskPriorityName>string</TaskPriorityName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </TaskDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/TaskType:
    get:
      summary: Gets list of Task Types
      description: Gets list of Task Types
      operationId: 61af6618bf4940568af02892
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskTypeList'
              example:
                tasktypes:
                  - AccountTaskTypeID: 0
                    Name: string
                    Icon: string
                    IconType: string
                    isDefault: true
            text/json:
              schema:
                $ref: '#/components/schemas/TaskTypeList'
              example:
                tasktypes:
                  - AccountTaskTypeID: 0
                    Name: string
                    Icon: string
                    IconType: string
                    isDefault: true
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeList'
              example: <TaskTypeList> <tasktypes> <AccountTaskTypeID>0</AccountTaskTypeID> <Name>string</Name> <Icon>string</Icon> <IconType>string</IconType> <isDefault>true</isDefault> </tasktypes> </TaskTypeList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskTypeList'
              example: <TaskTypeList> <tasktypes> <AccountTaskTypeID>0</AccountTaskTypeID> <Name>string</Name> <Icon>string</Icon> <IconType>string</IconType> <isDefault>true</isDefault> </tasktypes> </TaskTypeList>
  '/api/Payment/{id}':
    get:
      summary: Gets Payment by Payment Transaction ID
      description: Gets Payment by Payment Transaction ID
      operationId: 61af6618d5dd521fc396b561
      parameters:
        - name: id
          in: path
          description: Format - int64. Invoice Transaction ID Number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                PaymentNumber: string
                TransactionReference: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                PaymentProviderCode: string
                ExchangeRate: 0
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                PaymentAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    PaymentTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/Payment'
              example:
                TransactionID: 0
                AccountIDFK: 0
                TransactionPrefix: string
                PaymentNumber: string
                TransactionReference: string
                CustomerIDFK: 0
                DateIssued: string
                TransactionStatusCode: string
                PaymentProviderCode: string
                ExchangeRate: 0
                Balance: 0
                CurrencyCode: string
                TotalAmount: 0
                Notes: string
                DateCreated: string
                DateUpdated: string
                PaymentAllocations:
                  - TransactionAllocationID: 0
                    InvoiceTransactionIDFK: 0
                    PaymentTransactionIDFK: 0
                    AllocationDate: string
                    AllocationAmount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment'
              example: <Payment> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payment>
            text/xml:
              schema:
                $ref: '#/components/schemas/Payment'
              example: <Payment> <TransactionID>0</TransactionID> <AccountIDFK>0</AccountIDFK> <TransactionPrefix>string</TransactionPrefix> <PaymentNumber>string</PaymentNumber> <TransactionReference>string</TransactionReference> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <PaymentProviderCode>string</PaymentProviderCode> <ExchangeRate>0</ExchangeRate> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <PaymentAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <PaymentTransactionIDFK>0</PaymentTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </PaymentAllocations> </Payment>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  '/api/Expense/{id}':
    get:
      summary: Gets an Expense Entry by Expense ID
      description: Gets an Expense Entry by Expense ID
      operationId: 61af6612720260575c13fc09
      parameters:
        - name: id
          in: path
          description: Format - int64. Expense ID number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example:
                ExpenseID: 0
                UserIDFK: 0
                Firstname: string
                Lastname: string
                Email: string
                CustomerIDFK: 0
                CustomerName: string
                ProjectIDFK: 0
                ProjectTitle: string
                ProjectCode: string
                TaskIDFK: 0
                TaskTitle: string
                ExpenseCategoryIDFK: 0
                ExpenseCategoryName: string
                ExpenseCategoryHasUnitPrice: true
                ExpenseCategoryUnitPrice: 0
                ExpenseCategoryUnitName: string
                CurrencyCode: string
                ExchangeRate: 0
                Quantity: 0
                Amount: 0
                TaxAmount: 0
                TaxIDFK: 0
                TaxName: string
                TransactionTaxConfigCode: string
                TransactionTaxConfigName: string
                isOfficialExchangeRate: true
                ExpenseApprovalStatusCode: string
                ExpensePaymentMethodIDFK: 0
                ExpensePaymentMethodName: string
                isChargeable: true
                ChargeableStatusCode: string
                isReimbursable: true
                ExpenseReimbursementStatusCode: string
                ExpenseReimbursementIDFK: 0
                ExpenseDate: string
                FileAttachmentIDFK: 0
                AttachmentURL: string
                AttachmentPreviewURL: string
                Merchant: string
                MerchantTaxNumber: string
                Notes: string
                ExpenseReportIDFK: 0
                ExpenseReportName: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseDetails'
              example: <ExpenseDetails> <ExpenseID>0</ExpenseID> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <CustomerIDFK>0</CustomerIDFK> <CustomerName>string</CustomerName> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <ExpenseCategoryIDFK>0</ExpenseCategoryIDFK> <ExpenseCategoryName>string</ExpenseCategoryName> <ExpenseCategoryHasUnitPrice>true</ExpenseCategoryHasUnitPrice> <ExpenseCategoryUnitPrice>0</ExpenseCategoryUnitPrice> <ExpenseCategoryUnitName>string</ExpenseCategoryUnitName> <CurrencyCode>string</CurrencyCode> <ExchangeRate>0</ExchangeRate> <Quantity>0</Quantity> <Amount>0</Amount> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <TaxName>string</TaxName> <TransactionTaxConfigCode>string</TransactionTaxConfigCode> <TransactionTaxConfigName>string</TransactionTaxConfigName> <isOfficialExchangeRate>true</isOfficialExchangeRate> <ExpenseApprovalStatusCode>string</ExpenseApprovalStatusCode> <ExpensePaymentMethodIDFK>0</ExpensePaymentMethodIDFK> <ExpensePaymentMethodName>string</ExpensePaymentMethodName> <isChargeable>true</isChargeable> <ChargeableStatusCode>string</ChargeableStatusCode> <isReimbursable>true</isReimbursable> <ExpenseReimbursementStatusCode>string</ExpenseReimbursementStatusCode> <ExpenseReimbursementIDFK>0</ExpenseReimbursementIDFK> <ExpenseDate>string</ExpenseDate> <FileAttachmentIDFK>0</FileAttachmentIDFK> <AttachmentURL>string</AttachmentURL> <AttachmentPreviewURL>string</AttachmentPreviewURL> <Merchant>string</Merchant> <MerchantTaxNumber>string</MerchantTaxNumber> <Notes>string</Notes> <ExpenseReportIDFK>0</ExpenseReportIDFK> <ExpenseReportName>string</ExpenseReportName> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ExpenseDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/UserProfile:
    get:
      summary: Get Collection of Users who have roles in the current Avaza account.
      description: Admin and Invoice Managers can see all. Other users are limited to seeing their own profile.
      operationId: 61af6610cdd44b4732f65342
      parameters:
        - name: Roles
          in: query
          description: 'Optional list of comma separated role codes to filter users by (e.g. "TimesheetUser,Admin")'
          schema:
            type: string
        - name: Tags
          in: query
          schema:
            type: string
        - name: CurrentUserOnly
          in: query
          description: Optional boolean (true/false) to filter to only show current authenticated user (always true for non Admin/InvoiceManager users)
          schema:
            type: boolean
        - name: CompanyIDFK
          in: query
          description: Format - int32. Optionally filter by Company ID
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
              example:
                Users:
                  - UserID: 0
                    AccountIDFK: 0
                    Email: string
                    Firstname: string
                    Lastname: string
                    PositionTitle: string
                    Phone: string
                    Mobile: string
                    TimeZone: string
                    IANATimezone: string
                    isTeamMember: true
                    CompanyIDFK: 0
                    CompanyName: string
                    DefaultBillableRate: 0
                    DefaultCostRate: 0
                    MondayAvailableHours: 0
                    TuesdayAvailableHours: 0
                    WednesdayAvailableHours: 0
                    ThursdayAvailableHours: 0
                    FridayAvailableHours: 0
                    SaturdayAvailableHours: 0
                    SundayAvailableHours: 0
                    Roles:
                      - RoleCode: string
                        RoleName: string
                    Tags:
                      - UserTagID: 0
                        UserTagName: string
            text/json:
              schema:
                $ref: '#/components/schemas/UserList'
              example:
                Users:
                  - UserID: 0
                    AccountIDFK: 0
                    Email: string
                    Firstname: string
                    Lastname: string
                    PositionTitle: string
                    Phone: string
                    Mobile: string
                    TimeZone: string
                    IANATimezone: string
                    isTeamMember: true
                    CompanyIDFK: 0
                    CompanyName: string
                    DefaultBillableRate: 0
                    DefaultCostRate: 0
                    MondayAvailableHours: 0
                    TuesdayAvailableHours: 0
                    WednesdayAvailableHours: 0
                    ThursdayAvailableHours: 0
                    FridayAvailableHours: 0
                    SaturdayAvailableHours: 0
                    SundayAvailableHours: 0
                    Roles:
                      - RoleCode: string
                        RoleName: string
                    Tags:
                      - UserTagID: 0
                        UserTagName: string
            application/xml:
              schema:
                $ref: '#/components/schemas/UserList'
              example: <UserList> <Users> <UserID>0</UserID> <AccountIDFK>0</AccountIDFK> <Email>string</Email> <Firstname>string</Firstname> <Lastname>string</Lastname> <PositionTitle>string</PositionTitle> <Phone>string</Phone> <Mobile>string</Mobile> <TimeZone>string</TimeZone> <IANATimezone>string</IANATimezone> <isTeamMember>true</isTeamMember> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <DefaultBillableRate>0</DefaultBillableRate> <DefaultCostRate>0</DefaultCostRate> <MondayAvailableHours>0</MondayAvailableHours> <TuesdayAvailableHours>0</TuesdayAvailableHours> <WednesdayAvailableHours>0</WednesdayAvailableHours> <ThursdayAvailableHours>0</ThursdayAvailableHours> <FridayAvailableHours>0</FridayAvailableHours> <SaturdayAvailableHours>0</SaturdayAvailableHours> <SundayAvailableHours>0</SundayAvailableHours> <Roles> <RoleCode>string</RoleCode> <RoleName>string</RoleName> </Roles> <Tags> <UserTagID>0</UserTagID> <UserTagName>string</UserTagName> </Tags> </Users> </UserList>
            text/xml:
              schema:
                $ref: '#/components/schemas/UserList'
              example: <UserList> <Users> <UserID>0</UserID> <AccountIDFK>0</AccountIDFK> <Email>string</Email> <Firstname>string</Firstname> <Lastname>string</Lastname> <PositionTitle>string</PositionTitle> <Phone>string</Phone> <Mobile>string</Mobile> <TimeZone>string</TimeZone> <IANATimezone>string</IANATimezone> <isTeamMember>true</isTeamMember> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <DefaultBillableRate>0</DefaultBillableRate> <DefaultCostRate>0</DefaultCostRate> <MondayAvailableHours>0</MondayAvailableHours> <TuesdayAvailableHours>0</TuesdayAvailableHours> <WednesdayAvailableHours>0</WednesdayAvailableHours> <ThursdayAvailableHours>0</ThursdayAvailableHours> <FridayAvailableHours>0</FridayAvailableHours> <SaturdayAvailableHours>0</SaturdayAvailableHours> <SundayAvailableHours>0</SundayAvailableHours> <Roles> <RoleCode>string</RoleCode> <RoleName>string</RoleName> </Roles> <Tags> <UserTagID>0</UserTagID> <UserTagName>string</UserTagName> </Tags> </Users> </UserList>
  '/api/Invoice/{id}':
    get:
      summary: Gets Invoice by Invoice ID
      description: Gets Invoice by Invoice ID
      operationId: 61af6611c44403c1e3c3bd23
      parameters:
        - name: id
          in: path
          description: Format - int64. Invoice Transaction ID number
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/TimesheetSubmission:
    post:
      summary: Submit Timesheets for Approval.
      description: Either provide a a specific Day (WholeDayOf) or any day in a Week (WholeWeekOf) to submit all draft timesheets in that day or week
      operationId: 61af660f939018603c1d9a00
      parameters:
        - name: SendNotifications
          in: query
          description: Send email alerts to timesheet approvers. Defaults to true
          schema:
            type: boolean
        - name: WholeWeekOf
          in: query
          description: Format - date-time (as date-time in RFC3339). A date (yyyy-MM-dd) that falls within  a Week to have all timesheets in that week submitted. Respects the First Day of Week setting in your account Timesheet Settings to determine the week range.
          schema:
            type: string
        - name: WholeDayOf
          in: query
          description: Format - date-time (as date-time in RFC3339). A date (yyyy-MM-dd) to submit all timesheets on this day
          schema:
            type: string
        - name: UserID
          in: query
          description: Format - int32. The user to submit timesheets for. Defaults to current user. Only allowed to be different from the current user when the current user has rights to Impersonate other users.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetSubmissionPost200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetSubmissionPost200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetSubmissionPost200TextXmlResponse'
              example: <ApiTimesheetSubmissionPost200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetSubmissionPost200TextXmlResponse'
              example: <ApiTimesheetSubmissionPost200TextXmlResponse />
  '/api/TimesheetTimer/{id}':
    post:
      summary: Starts a Timer running on an existing Timesheet Entry
      description: Starts a Timer running on an existing Timesheet Entry
      operationId: 61af6618787a68e9cf08027a
      parameters:
        - name: id
          in: path
          description: 'Format - int64. id of timesheet entry that should be used as the basis for running a timer. If the existing timesheet is not on the current day, or you have start/end times enabled, then a new timesheet will be created for the timer.'
          required: true
          schema:
            type: integer
        - name: UserID
          in: query
          description: Format - int32. Optional - User ID number if impersonating a different user. Otherwise assumes the current user. Only users with certain security roles have permission to impersonate other users
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdPost200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdPost200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdPost200TextXmlResponse'
              example: <ApiTimesheetTimerIdPost200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdPost200TextXmlResponse'
              example: <ApiTimesheetTimerIdPost200TextXmlResponse />
        '400':
          description: Bad Request
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
    delete:
      summary: Stop the timer running on an existing Timesheet Entry
      description: Stop the timer running on an existing Timesheet Entry
      operationId: 61af661ae6f3379b2f79998d
      parameters:
        - name: id
          in: path
          description: Format - int64. The ID of the existing timesheet entry that needs its timer stopped
          required: true
          schema:
            type: integer
        - name: UserID
          in: query
          description: Format - int32. Optional - User ID number if impersonating a different user. Otherwise assumes the current user. Only users with certain security roles have permission to impersonate other users
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdDelete200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdDelete200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdDelete200TextXmlResponse'
              example: <ApiTimesheetTimerIdDelete200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerIdDelete200TextXmlResponse'
              example: <ApiTimesheetTimerIdDelete200TextXmlResponse />
        '400':
          description: Bad Request
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Inventory:
    get:
      summary: Gets list of Inventory
      description: Gets list of Inventory
      operationId: 61af6614c242ea84c8dcbe86
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Inventory:
                  - InventoryItemID: 0
                    Name: string
                    Description: string
                    SKU: string
                    CostPrice: 0
                    SalePrice: 0
                    SaleTaxIDFK: 0
                    isHidden: true
                    DateCreated: string
                    DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/InventoryList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                Inventory:
                  - InventoryItemID: 0
                    Name: string
                    Description: string
                    SKU: string
                    CostPrice: 0
                    SalePrice: 0
                    SaleTaxIDFK: 0
                    isHidden: true
                    DateCreated: string
                    DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/InventoryList'
              example: <InventoryList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Inventory> <InventoryItemID>0</InventoryItemID> <Name>string</Name> <Description>string</Description> <SKU>string</SKU> <CostPrice>0</CostPrice> <SalePrice>0</SalePrice> <SaleTaxIDFK>0</SaleTaxIDFK> <isHidden>true</isHidden> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Inventory> </InventoryList>
            text/xml:
              schema:
                $ref: '#/components/schemas/InventoryList'
              example: <InventoryList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <Inventory> <InventoryItemID>0</InventoryItemID> <Name>string</Name> <Description>string</Description> <SKU>string</SKU> <CostPrice>0</CostPrice> <SalePrice>0</SalePrice> <SaleTaxIDFK>0</SaleTaxIDFK> <isHidden>true</isHidden> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </Inventory> </InventoryList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ScheduleAssignment:
    get:
      summary: Gets list of Schedule Assignments.
      description: 'Schedule assignments are per-day, and link to a parent Schedule Series.'
      operationId: 61af661620ef2cde375097c0
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Limit results to records updated after the specified date
          schema:
            type: string
        - name: ScheduleDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedule assignement  that are  on or after a specific date
          schema:
            type: string
        - name: ScheduleDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedules that are on or before a specific date
          schema:
            type: string
        - name: ScheduleSeriesID
          in: query
          description: Format - int64. Filter to records for a particular Schedule Series
          schema:
            type: integer
        - name: UserID
          in: query
          description: Format - int32. The UserID of a schedule user to filter assignments for. Only api users with Admin role can see all schedules across all users. Users with ScheduleUser role can access their own ScheduleSeries.
          schema:
            type: integer
        - name: UserEmail
          in: query
          description: The email of the user who has been scheduled
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          description: 'Optional sorting instruction. Currently possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc"'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleAssignmentList'
              example:
                ScheduleAssignments:
                  - ScheduleAssignmentID: 0
                    AccountIDFK: 0
                    UserIDFK: 0
                    ScheduleSeriesIDFK: 0
                    ScheduleDate: string
                    Duration: 0
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleAssignmentList'
              example:
                ScheduleAssignments:
                  - ScheduleAssignmentID: 0
                    AccountIDFK: 0
                    UserIDFK: 0
                    ScheduleSeriesIDFK: 0
                    ScheduleDate: string
                    Duration: 0
                    DateCreated: string
                    DateUpdated: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleAssignmentList'
              example: <ScheduleAssignmentList> <ScheduleAssignments> <ScheduleAssignmentID>0</ScheduleAssignmentID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <ScheduleSeriesIDFK>0</ScheduleSeriesIDFK> <ScheduleDate>string</ScheduleDate> <Duration>0</Duration> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ScheduleAssignments> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ScheduleAssignmentList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleAssignmentList'
              example: <ScheduleAssignmentList> <ScheduleAssignments> <ScheduleAssignmentID>0</ScheduleAssignmentID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <ScheduleSeriesIDFK>0</ScheduleSeriesIDFK> <ScheduleDate>string</ScheduleDate> <Duration>0</Duration> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ScheduleAssignments> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ScheduleAssignmentList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ExpenseMerchant/Lookup:
    get:
      summary: Gets minimal list of Expense Merchants.
      description: Gets minimal list of Expense Merchants.
      operationId: 61af661803dfe1c2f10afdbf
      parameters:
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: search
          in: query
          description: Search string to match against Expense Group Name
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseMerchantDropdownList'
              example:
                ExpenseMerchants:
                  - MerchantName: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseMerchantDropdownList'
              example:
                ExpenseMerchants:
                  - MerchantName: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseMerchantDropdownList'
              example: <ExpenseMerchantDropdownList> <ExpenseMerchants> <MerchantName>string</MerchantName> </ExpenseMerchants> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseMerchantDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseMerchantDropdownList'
              example: <ExpenseMerchantDropdownList> <ExpenseMerchants> <MerchantName>string</MerchantName> </ExpenseMerchants> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseMerchantDropdownList>
  /api/ExpensePaymentMethod/Lookup:
    get:
      summary: Gets minimal list of Expense Payment Methods.
      description: Gets minimal list of Expense Payment Methods.
      operationId: 61af66185566299640e7b47b
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'
              example:
                ExpensePaymentMethods:
                  - ExpensePaymentMethodID: 0
                    Name: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'
              example:
                ExpensePaymentMethods:
                  - ExpensePaymentMethodID: 0
                    Name: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'
              example: <ExpensePaymentMethodDropdownList> <ExpensePaymentMethods> <ExpensePaymentMethodID>0</ExpensePaymentMethodID> <Name>string</Name> </ExpensePaymentMethods> </ExpensePaymentMethodDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpensePaymentMethodDropdownList'
              example: <ExpensePaymentMethodDropdownList> <ExpensePaymentMethods> <ExpensePaymentMethodID>0</ExpensePaymentMethodID> <Name>string</Name> </ExpensePaymentMethods> </ExpensePaymentMethodDropdownList>
  /api/ExpenseGroup/Lookup:
    get:
      summary: Gets minimal list of Expense Groups.
      description: Expense Groups are for adhoc grouping of reported expenses. e.g. for expenses incurred on a Trip
      operationId: 61af66156ecd34d93a6a2ef0
      parameters:
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: search
          in: query
          description: Search string to match against Expense Group Name
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseGroupDropdownList'
              example:
                ExpenseGroups:
                  - ExpenseGroupID: 0
                    Name: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseGroupDropdownList'
              example:
                ExpenseGroups:
                  - ExpenseGroupID: 0
                    Name: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseGroupDropdownList'
              example: <ExpenseGroupDropdownList> <ExpenseGroups> <ExpenseGroupID>0</ExpenseGroupID> <Name>string</Name> </ExpenseGroups> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseGroupDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseGroupDropdownList'
              example: <ExpenseGroupDropdownList> <ExpenseGroups> <ExpenseGroupID>0</ExpenseGroupID> <Name>string</Name> </ExpenseGroups> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ExpenseGroupDropdownList>
  /api/TimesheetSummary:
    get:
      summary: Gets Basic Summary of Timesheet Statistics
      description: Gets Basic Summary of Timesheet Statistics
      operationId: 61af6611d1c03d722db7f77c
      parameters:
        - name: model.groupBy
          in: query
          description: '(Optional) Combine one, two or three levels of Grouping. Combine these possible grouping values: "Customer", "Project", "Category", "User", "Task", "Year", "Month", "Day", "Week".'
          schema:
            type: array
        - name: model.entryDateFrom
          in: query
          description: 'Format - date-time (as date-time in RFC3339). (Required) Filter for timesheets greater or equal to the specified date. e.g. 2019-01-25. You can optionally include a time component, otherwise it assumes 00:00'
          schema:
            type: string
        - name: model.entryDateTo
          in: query
          description: 'Format - date-time (as date-time in RFC3339). (Required) Filter for timesheets with an entry date smaller or equal to the specified  date. e.g. 2019-01-25. You can optionally include a time component, otherwise it assumes 00:00'
          schema:
            type: string
        - name: model.userID
          in: query
          description: '(Optional) Defaults to the current user. Provide one or more UserIDs of Users whose timesheets should be retrieved. If the current user doesn''t have impersonation rights, then they will only see their own data.'
          schema:
            type: array
        - name: model.projectID
          in: query
          description: Format - int32. (Optional) Filter by Project
          schema:
            type: integer
        - name: model.isBillable
          in: query
          description: (Optional) Filter by the billable status of Timesheets.
          schema:
            type: boolean
        - name: model.isInvoiced
          in: query
          description: (Optional) Filter for timesheets by whether they have been Invoiced or not.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimesheetSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/TimesheetSummaryResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/TimesheetSummaryResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/TimesheetSummaryResult'
  /api/ExpenseSummary:
    get:
      summary: Gets Basic Summary of Expense Statistics
      description: Gets Basic Summary of Expense Statistics
      operationId: 61af6611c03021852b459f9d
      parameters:
        - name: model.groupBy
          in: query
          description: '(Optional) Combine one, two or three levels of Grouping. Combine these possible grouping values: "Category", "ChargeableStatus", "Merchant", "ApprovalStatus", "ReimbursementStatus", "Customer", "Project", "User", "Task", "Year", "Month", "Day", "Week".'
          schema:
            type: array
        - name: model.expenseDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339). (Required) Filter for expenses with expense dates greater or equal to the specified date. e.g. 2019-01-25.
          schema:
            type: string
        - name: model.expenseDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339). (Required) Filter for expenses with an expense date smaller or equal to the specified  date. e.g. 2019-01-25.
          schema:
            type: string
        - name: model.userID
          in: query
          description: '(Optional) Defaults to the current user. Provide one or more UserIDs of Users whose expenses should be retrieved. If the current user doesn''t have impersonation rights, then they will only see their own data.'
          schema:
            type: array
        - name: model.projectID
          in: query
          description: Format - int32. (Optional) Filter by Project
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseSummaryResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseSummaryResult'
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseSummaryResult'
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseSummaryResult'
  /api/FixedAmount:
    get:
      summary: Gets list of Fixed Amounts
      description: Gets list of Fixed Amounts
      operationId: 61af66140aa59a9e79030323
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: EntryDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: EntryDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: ProjectID
          in: query
          description: Format - int32. (Optional) The ProjectID of a Project to filter Fixed Amounts for
          schema:
            type: integer
        - name: TaskID
          in: query
          description: Format - int32. (Optional) The TaskID of a Task to filter Fixed Amounts for
          schema:
            type: integer
        - name: isInvoiced
          in: query
          schema:
            type: boolean
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          description: 'Optional sorting instruction. Currently possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc","EntryDate", "EntryDate desc", "StartTimeLocal","StartTimeLocal desc", "TimeSheetEntryID", "TimeSheetEntryID desc"'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FixedAmountList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                FixedAmounts:
                  - FixedAmountID: 0
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    TaskIDFK: 0
                    TaskTitle: string
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    Amount: 0
                    Notes: string
                    isInvoiced: true
                    DateCreated: string
                    DateUpdated: string
                    UpdatedByUserIDFK: 0
            text/json:
              schema:
                $ref: '#/components/schemas/FixedAmountList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                FixedAmounts:
                  - FixedAmountID: 0
                    ProjectIDFK: 0
                    ProjectTitle: string
                    ProjectCode: string
                    TaskIDFK: 0
                    TaskTitle: string
                    InventoryItemIDFK: 0
                    InventoryItemName: string
                    Amount: 0
                    Notes: string
                    isInvoiced: true
                    DateCreated: string
                    DateUpdated: string
                    UpdatedByUserIDFK: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/FixedAmountList'
              example: <FixedAmountList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <FixedAmounts> <FixedAmountID>0</FixedAmountID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <Amount>0</Amount> <Notes>string</Notes> <isInvoiced>true</isInvoiced> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </FixedAmounts> </FixedAmountList>
            text/xml:
              schema:
                $ref: '#/components/schemas/FixedAmountList'
              example: <FixedAmountList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <FixedAmounts> <FixedAmountID>0</FixedAmountID> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <ProjectCode>string</ProjectCode> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <InventoryItemIDFK>0</InventoryItemIDFK> <InventoryItemName>string</InventoryItemName> <Amount>0</Amount> <Notes>string</Notes> <isInvoiced>true</isInvoiced> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </FixedAmounts> </FixedAmountList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ScheduleSeries:
    get:
      summary: Gets list of Schedule Series
      description: 'Schedule Series represents a strip of time assigned to a user over a date range, for a certain number of hours per day. They can be for Leave or for project work Bookings.'
      operationId: 61af6614454125e1d0a0e3d6
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339). Limit results to records updated after the specified date
          schema:
            type: string
        - name: ScheduleStartDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedules that start on or after a specific date
          schema:
            type: string
        - name: ScheduleStartDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedules that start on or before a specific date
          schema:
            type: string
        - name: ScheduleEndDateFrom
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedules that end on or after a specific date
          schema:
            type: string
        - name: ScheduleEndDateTo
          in: query
          description: Format - date-time (as date-time in RFC3339). Filter for schedules that end on or before a specific date
          schema:
            type: string
        - name: UserID
          in: query
          description: Format - int32. The UserID of a schedule user to filter assignments for. Only api users with Admin role can see all schedules across all users. Users with ScheduleUser role can access their own ScheduleSeries.
          schema:
            type: integer
        - name: UserEmail
          in: query
          description: The email of the user who has been scheduled
          schema:
            type: string
        - name: TimeSheetCategoryID
          in: query
          description: Format - int32. Filter for schedule records linked to a specific timesheeet category
          schema:
            type: integer
        - name: TimeSheetCategoryName
          in: query
          description: Filter for schedule records with a specific timesheeet category name (exact string match)
          schema:
            type: string
        - name: LeaveTypeID
          in: query
          description: Format - int32. Filter to records of a particular leave type
          schema:
            type: integer
        - name: ProjectID
          in: query
          description: Format - int32. Filter to only include books linked to a specific project
          schema:
            type: integer
        - name: CompanyID
          in: query
          description: 'Format - int32. Filter to only include records linked to projects, where that project belongs to a specific customer company'
          schema:
            type: integer
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: Sort
          in: query
          description: 'Optional sorting instruction. Currently possible values: "DateUpdated", "DateCreated", "DateUpdated desc", "DateCreated desc"'
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesList'
              example:
                ScheduleSeries:
                  - ScheduleSeriesID: 0
                    AccountIDFK: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    CompanyIDFK: 0
                    CompanyName: string
                    TimeSheetCategoryIDFK: 0
                    TimeSheetCategoryName: string
                    LeaveTypeIDFK: 0
                    LeaveTypeName: string
                    StartDate: string
                    EndDate: string
                    HoursPerDay: 0
                    TotalDuration: 0
                    ScheduleOnDaysOff: true
                    Notes: string
                    TaskIDFK: 0
                    TaskTitle: string
                    DateCreated: string
                    DateUpdated: string
                    UpdatedByUserIDFK: 0
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesList'
              example:
                ScheduleSeries:
                  - ScheduleSeriesID: 0
                    AccountIDFK: 0
                    UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    ProjectIDFK: 0
                    ProjectTitle: string
                    CompanyIDFK: 0
                    CompanyName: string
                    TimeSheetCategoryIDFK: 0
                    TimeSheetCategoryName: string
                    LeaveTypeIDFK: 0
                    LeaveTypeName: string
                    StartDate: string
                    EndDate: string
                    HoursPerDay: 0
                    TotalDuration: 0
                    ScheduleOnDaysOff: true
                    Notes: string
                    TaskIDFK: 0
                    TaskTitle: string
                    DateCreated: string
                    DateUpdated: string
                    UpdatedByUserIDFK: 0
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesList'
              example: <ScheduleSeriesList> <ScheduleSeries> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeries> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ScheduleSeriesList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ScheduleSeriesList'
              example: <ScheduleSeriesList> <ScheduleSeries> <ScheduleSeriesID>0</ScheduleSeriesID> <AccountIDFK>0</AccountIDFK> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <ProjectIDFK>0</ProjectIDFK> <ProjectTitle>string</ProjectTitle> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <TimeSheetCategoryIDFK>0</TimeSheetCategoryIDFK> <TimeSheetCategoryName>string</TimeSheetCategoryName> <LeaveTypeIDFK>0</LeaveTypeIDFK> <LeaveTypeName>string</LeaveTypeName> <StartDate>string</StartDate> <EndDate>string</EndDate> <HoursPerDay>0</HoursPerDay> <TotalDuration>0</TotalDuration> <ScheduleOnDaysOff>true</ScheduleOnDaysOff> <Notes>string</Notes> <TaskIDFK>0</TaskIDFK> <TaskTitle>string</TaskTitle> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <UpdatedByUserIDFK>0</UpdatedByUserIDFK> </ScheduleSeries> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </ScheduleSeriesList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/ExpenseCategory:
    get:
      summary: Gets list of Expense Categories
      description: The default sort order is by Name asc
      operationId: 61af661436e17e17df946790
      parameters:
        - name: isEnabled
          in: query
          description: Optional filter on for enabled/disabled categories. Defaults to true.
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryList'
              example:
                Categories:
                  - ExpenseCategoryID: 0
                    Name: string
                    Enabled: true
                    hasUnitPrice: true
                    UnitPrice: 0
                    UnitName: string
            text/json:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryList'
              example:
                Categories:
                  - ExpenseCategoryID: 0
                    Name: string
                    Enabled: true
                    hasUnitPrice: true
                    UnitPrice: 0
                    UnitName: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryList'
              example: <ExpenseCategoryList> <Categories> <ExpenseCategoryID>0</ExpenseCategoryID> <Name>string</Name> <Enabled>true</Enabled> <hasUnitPrice>true</hasUnitPrice> <UnitPrice>0</UnitPrice> <UnitName>string</UnitName> </Categories> </ExpenseCategoryList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ExpenseCategoryList'
              example: <ExpenseCategoryList> <Categories> <ExpenseCategoryID>0</ExpenseCategoryID> <Name>string</Name> <Enabled>true</Enabled> <hasUnitPrice>true</hasUnitPrice> <UnitPrice>0</UnitPrice> <UnitName>string</UnitName> </Categories> </ExpenseCategoryList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  '/api/Inventory/{id}':
    get:
      summary: Gets InventoryItem by InventoryItem ID
      description: Gets InventoryItem by InventoryItem ID
      operationId: 61af6611cc98dff32a5ffee4
      parameters:
        - name: id
          in: path
          description: Format - int64. InventoryItem ID number
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Company/Lookup:
    get:
      summary: Gets minimal list of Companies.
      description: Certain roles see a restricted set of companies based on their project memberships
      operationId: 61af66181b3bf28de66b7012
      parameters:
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: search
          in: query
          description: Search string to match against Company title
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyDropdownList'
              example:
                Companies:
                  - CompanyID: 0
                    CompanyName: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyDropdownList'
              example:
                Companies:
                  - CompanyID: 0
                    CompanyName: string
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyDropdownList'
              example: <CompanyDropdownList> <Companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> </Companies> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </CompanyDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyDropdownList'
              example: <CompanyDropdownList> <Companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> </Companies> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> </CompanyDropdownList>
  /api/ExpenseApproval/Submit:
    post:
      summary: Submit Expenses for Approval.
      description: Submit Expenses for Approval.
      operationId: 61af661c55a5c67159c2655d
      parameters:
        - name: UserID
          in: query
          description: Format - int32. The user to submit the Expenses for. Defaults to current user. Only allowed to be different from the current user when the current user has rights to Impersonate other users.
          schema:
            type: integer
        - name: SendNotifications
          in: query
          description: Send email alerts to expense approvers. Defaults to true
          schema:
            type: boolean
      requestBody:
        description: 'A collection of ExpenseID''s that should be submitted for approval. If not provided, submits all verified expenses for approval.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example:
              - 0
          text/json:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example:
              - 0
          application/xml:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example: '<ExpenseIDs>[ 0.0 ]</ExpenseIDs>'
          text/xml:
            schema:
              $ref: '#/components/schemas/ExpenseIDs'
            example: '<ExpenseIDs>[ 0.0 ]</ExpenseIDs>'
          application/x-www-form-urlencoded: { }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiExpenseApprovalSubmitPost200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiExpenseApprovalSubmitPost200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiExpenseApprovalSubmitPost200TextXmlResponse'
              example: <ApiExpenseApprovalSubmitPost200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiExpenseApprovalSubmitPost200TextXmlResponse'
              example: <ApiExpenseApprovalSubmitPost200TextXmlResponse />
  '/api/Estimate/{id}':
    get:
      summary: Gets Estimate by Estimate ID
      description: Gets Estimate by Estimate ID
      operationId: 61af66120f20850211e55877
      parameters:
        - name: id
          in: path
          description: Format - int64. Estimate Estimate ID number
          required: true
          schema:
            type: integer
      responses:
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/Currency:
    get:
      summary: Gets list of Currencies
      description: Gets list of Currencies
      operationId: 61af66125c73e52cbe9ed87a
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyList'
              example:
                Currencies:
                  - CurrencyCode: string
                    Name: string
                    Symbol: string
                    Symbol2: string
                    DecimalPlaces: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CurrencyList'
              example:
                Currencies:
                  - CurrencyCode: string
                    Name: string
                    Symbol: string
                    Symbol2: string
                    DecimalPlaces: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/CurrencyList'
              example: <CurrencyList> <Currencies> <CurrencyCode>string</CurrencyCode> <Name>string</Name> <Symbol>string</Symbol> <Symbol2>string</Symbol2> <DecimalPlaces>0</DecimalPlaces> </Currencies> </CurrencyList>
            text/xml:
              schema:
                $ref: '#/components/schemas/CurrencyList'
              example: <CurrencyList> <Currencies> <CurrencyCode>string</CurrencyCode> <Name>string</Name> <Symbol>string</Symbol> <Symbol2>string</Symbol2> <DecimalPlaces>0</DecimalPlaces> </Currencies> </CurrencyList>
  /api/TaskStatus:
    get:
      summary: Gets list of Task Statuses
      description: Gets list of Task Statuses
      operationId: 61af661622241a67b99603e3
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskStatusList'
              example:
                statuses:
                  - TaskStatusCode: string
                    Name: string
                    Color: string
                    DisplayOrder: 0
                    isComplete: true
                    AccountTaskTypeIDFK: 0
                    TaskTypeName: string
            text/json:
              schema:
                $ref: '#/components/schemas/TaskStatusList'
              example:
                statuses:
                  - TaskStatusCode: string
                    Name: string
                    Color: string
                    DisplayOrder: 0
                    isComplete: true
                    AccountTaskTypeIDFK: 0
                    TaskTypeName: string
            application/xml:
              schema:
                $ref: '#/components/schemas/TaskStatusList'
              example: <TaskStatusList> <statuses> <TaskStatusCode>string</TaskStatusCode> <Name>string</Name> <Color>string</Color> <DisplayOrder>0</DisplayOrder> <isComplete>true</isComplete> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskTypeName>string</TaskTypeName> </statuses> </TaskStatusList>
            text/xml:
              schema:
                $ref: '#/components/schemas/TaskStatusList'
              example: <TaskStatusList> <statuses> <TaskStatusCode>string</TaskStatusCode> <Name>string</Name> <Color>string</Color> <DisplayOrder>0</DisplayOrder> <isComplete>true</isComplete> <AccountTaskTypeIDFK>0</AccountTaskTypeIDFK> <TaskTypeName>string</TaskTypeName> </statuses> </TaskStatusList>
  /api/Project/Lookup:
    get:
      summary: Gets minimal list of active Projects for the current user
      description: Gets minimal list of active Projects for the current user
      operationId: 61af661592a145d2b4be4de3
      parameters:
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
        - name: TimesheetUserID
          in: query
          description: Format - int32. Optionally Filter to the projects that the supplied UserID can add timesheets to
          schema:
            type: integer
        - name: CompanyIDFK
          in: query
          description: Format - int32. Optionally Filter for a specific Company ID
          schema:
            type: integer
        - name: search
          in: query
          description: Search string to match against Project title and Customer name
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDropdownList'
              example:
                companies:
                  - CompanyID: 0
                    CompanyName: string
                    projects:
                      - ProjectID: 0
                        ProjectCode: string
                        Title: string
                pageNumber: 0
                PageSize: 0
                hasMore: true
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDropdownList'
              example:
                companies:
                  - CompanyID: 0
                    CompanyName: string
                    projects:
                      - ProjectID: 0
                        ProjectCode: string
                        Title: string
                pageNumber: 0
                PageSize: 0
                hasMore: true
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDropdownList'
              example: <ProjectDropdownList> <companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <projects> <ProjectID>0</ProjectID> <ProjectCode>string</ProjectCode> <Title>string</Title> </projects> </companies> <pageNumber>0</pageNumber> <PageSize>0</PageSize> <hasMore>true</hasMore> </ProjectDropdownList>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectDropdownList'
              example: <ProjectDropdownList> <companies> <CompanyID>0</CompanyID> <CompanyName>string</CompanyName> <projects> <ProjectID>0</ProjectID> <ProjectCode>string</ProjectCode> <Title>string</Title> </projects> </companies> <pageNumber>0</pageNumber> <PageSize>0</PageSize> <hasMore>true</hasMore> </ProjectDropdownList>
  /api/TimesheetTimer:
    get:
      summary: Gets the  Running Timer if there is one for a user.
      description: Gets the  Running Timer if there is one for a user.
      operationId: 61af661858bfc965c199dc75
      parameters:
        - name: UserID
          in: query
          description: Format - int32. Optional - User ID number if impersonating a different user. Otherwise assumes the current user. Only users with certain security roles have permission to impersonate other users
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerGet200TextXmlResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerGet200TextXmlResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerGet200TextXmlResponse'
              example: <ApiTimesheetTimerGet200ApplicationXmlResponse />
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiTimesheetTimerGet200TextXmlResponse'
              example: <ApiTimesheetTimerGet200TextXmlResponse />
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  /api/CreditNote:
    get:
      summary: Gets list of CreditNotes
      description: Gets list of CreditNotes
      operationId: 61af6618f47779d655c37c27
      parameters:
        - name: UpdatedAfter
          in: query
          description: Format - date-time (as date-time in RFC3339).
          schema:
            type: string
        - name: pageSize
          in: query
          description: Format - int32. Number of items per page (max 1000)
          schema:
            type: integer
        - name: pageNumber
          in: query
          description: Format - int32. Page to display. Starts from 1.
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditNoteList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                CreditNotes:
                  - TransactionID: 0
                    TransactionPrefix: string
                    CreditNoteNumber: string
                    CustomerIDFK: 0
                    DateIssued: string
                    TransactionStatusCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    CreditNoteAllocations:
                      - TransactionAllocationID: 0
                        InvoiceTransactionIDFK: 0
                        CreditNoteTransactionIDFK: 0
                        AllocationDate: string
                        AllocationAmount: 0
                    CreditNoteLineItems:
                      - TransactionLineItemID: 0
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        Amount: 0
                        Discount: 0
            text/json:
              schema:
                $ref: '#/components/schemas/CreditNoteList'
              example:
                TotalCount: 0
                PageNumber: 0
                PageSize: 0
                CreditNotes:
                  - TransactionID: 0
                    TransactionPrefix: string
                    CreditNoteNumber: string
                    CustomerIDFK: 0
                    DateIssued: string
                    TransactionStatusCode: string
                    Balance: 0
                    CurrencyCode: string
                    TotalAmount: 0
                    Notes: string
                    DateCreated: string
                    DateUpdated: string
                    CreditNoteAllocations:
                      - TransactionAllocationID: 0
                        InvoiceTransactionIDFK: 0
                        CreditNoteTransactionIDFK: 0
                        AllocationDate: string
                        AllocationAmount: 0
                    CreditNoteLineItems:
                      - TransactionLineItemID: 0
                        Description: string
                        Quantity: 0
                        UnitPrice: 0
                        TaxAmount: 0
                        TaxIDFK: 0
                        Amount: 0
                        Discount: 0
            application/xml:
              schema:
                $ref: '#/components/schemas/CreditNoteList'
              example: <CreditNoteList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <CreditNotes> <TransactionID>0</TransactionID> <TransactionPrefix>string</TransactionPrefix> <CreditNoteNumber>string</CreditNoteNumber> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <CreditNoteAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <CreditNoteTransactionIDFK>0</CreditNoteTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </CreditNoteAllocations> <CreditNoteLineItems> <TransactionLineItemID>0</TransactionLineItemID> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <Amount>0</Amount> <Discount>0</Discount> </CreditNoteLineItems> </CreditNotes> </CreditNoteList>
            text/xml:
              schema:
                $ref: '#/components/schemas/CreditNoteList'
              example: <CreditNoteList> <TotalCount>0</TotalCount> <PageNumber>0</PageNumber> <PageSize>0</PageSize> <CreditNotes> <TransactionID>0</TransactionID> <TransactionPrefix>string</TransactionPrefix> <CreditNoteNumber>string</CreditNoteNumber> <CustomerIDFK>0</CustomerIDFK> <DateIssued>string</DateIssued> <TransactionStatusCode>string</TransactionStatusCode> <Balance>0</Balance> <CurrencyCode>string</CurrencyCode> <TotalAmount>0</TotalAmount> <Notes>string</Notes> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> <CreditNoteAllocations> <TransactionAllocationID>0</TransactionAllocationID> <InvoiceTransactionIDFK>0</InvoiceTransactionIDFK> <CreditNoteTransactionIDFK>0</CreditNoteTransactionIDFK> <AllocationDate>string</AllocationDate> <AllocationAmount>0</AllocationAmount> </CreditNoteAllocations> <CreditNoteLineItems> <TransactionLineItemID>0</TransactionLineItemID> <Description>string</Description> <Quantity>0</Quantity> <UnitPrice>0</UnitPrice> <TaxAmount>0</TaxAmount> <TaxIDFK>0</TaxIDFK> <Amount>0</Amount> <Discount>0</Discount> </CreditNoteLineItems> </CreditNotes> </CreditNoteList>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  '/api/Project/{id}':
    get:
      summary: Gets Project by Project ID
      description: Gets Project by Project ID
      operationId: 61af66157e4b360965e1689c
      parameters:
        - name: id
          in: path
          description: Format - int64. Project ID number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example:
                ProjectID: 0
                Title: string
                ProjectCode: string
                Notes: string
                CompanyName: string
                CompanyIDFK: 0
                ProjectOwnerUserIDFK: 0
                ProjectStatusCode: string
                isArchived: true
                ProjectBillableTypeCode: string
                ProjectBudgetTypeCode: string
                BudgetAmount: 0
                BudgetHours: 0
                ProjectHourlyRate: 0
                ProjectCategoryIDFK: 0
                ProjectCategoryName: string
                isTaskRequiredOnTimesheet: true
                DefaultAccountTaskTypeIDFK: 0
                DefaultAccountTaskTypeName: string
                ProjectCategoryColor: string
                StartDate: string
                EndDate: string
                Sections:
                  - SectionID: 0
                    Title: string
                    StartDate: string
                    EndDate: string
                    DisplayOrder: 0
                Members:
                  - UserIDFK: 0
                    Firstname: string
                    Lastname: string
                    Fullname: string
                    Email: string
                    CostAmount: 0
                    RateAmount: 0
                    BudgetAmount: 0
                    isMemberDisabled: true
                    isProjectManager: true
                    isTimesheetAllowed: true
                    isTimesheetApprover: true
                    isTimesheetApprovalRequired: true
                    canCreateTasks: true
                    canDeleteTasks: true
                    canCommentOnTasks: true
                    canUpdateTasks: true
                ProjectTags:
                  - ProjectTagID: 0
                    Name: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
            text/xml:
              schema:
                $ref: '#/components/schemas/ProjectDetails'
              example: <ProjectDetails> <ProjectID>0</ProjectID> <Title>string</Title> <ProjectCode>string</ProjectCode> <Notes>string</Notes> <CompanyName>string</CompanyName> <CompanyIDFK>0</CompanyIDFK> <ProjectOwnerUserIDFK>0</ProjectOwnerUserIDFK> <ProjectStatusCode>string</ProjectStatusCode> <isArchived>true</isArchived> <ProjectBillableTypeCode>string</ProjectBillableTypeCode> <ProjectBudgetTypeCode>string</ProjectBudgetTypeCode> <BudgetAmount>0</BudgetAmount> <BudgetHours>0</BudgetHours> <ProjectHourlyRate>0</ProjectHourlyRate> <ProjectCategoryIDFK>0</ProjectCategoryIDFK> <ProjectCategoryName>string</ProjectCategoryName> <isTaskRequiredOnTimesheet>true</isTaskRequiredOnTimesheet> <DefaultAccountTaskTypeIDFK>0</DefaultAccountTaskTypeIDFK> <DefaultAccountTaskTypeName>string</DefaultAccountTaskTypeName> <ProjectCategoryColor>string</ProjectCategoryColor> <StartDate>string</StartDate> <EndDate>string</EndDate> <Sections> <SectionID>0</SectionID> <Title>string</Title> <StartDate>string</StartDate> <EndDate>string</EndDate> <DisplayOrder>0</DisplayOrder> </Sections> <Members> <UserIDFK>0</UserIDFK> <Firstname>string</Firstname> <Lastname>string</Lastname> <Fullname>string</Fullname> <Email>string</Email> <CostAmount>0</CostAmount> <RateAmount>0</RateAmount> <BudgetAmount>0</BudgetAmount> <isMemberDisabled>true</isMemberDisabled> <isProjectManager>true</isProjectManager> <isTimesheetAllowed>true</isTimesheetAllowed> <isTimesheetApprover>true</isTimesheetApprover> <isTimesheetApprovalRequired>true</isTimesheetApprovalRequired> <canCreateTasks>true</canCreateTasks> <canDeleteTasks>true</canDeleteTasks> <canCommentOnTasks>true</canCommentOnTasks> <canUpdateTasks>true</canUpdateTasks> </Members> <ProjectTags> <ProjectTagID>0</ProjectTagID> <Name>string</Name> </ProjectTags> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </ProjectDetails>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
  '/api/Contact/{id}':
    get:
      summary: Gets Contact by Contact ID
      description: Gets Contact by Contact ID
      operationId: 61af6618e7910a03cdc2e6f3
      parameters:
        - name: id
          in: path
          description: Format - int64. Contact ID number
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example:
                ContactID: 0
                CompanyIDFK: 0
                CompanyName: string
                Firstname: string
                Lastname: string
                Email: string
                Phone: string
                Mobile: string
                PositionTitle: string
                TimeZone: string
                DateCreated: string
                DateUpdated: string
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example:
                ContactID: 0
                CompanyIDFK: 0
                CompanyName: string
                Firstname: string
                Lastname: string
                Email: string
                Phone: string
                Mobile: string
                PositionTitle: string
                TimeZone: string
                DateCreated: string
                DateUpdated: string
            application/xml:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example: <CompanyContact> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </CompanyContact>
            text/xml:
              schema:
                $ref: '#/components/schemas/CompanyContact'
              example: <CompanyContact> <ContactID>0</ContactID> <CompanyIDFK>0</CompanyIDFK> <CompanyName>string</CompanyName> <Firstname>string</Firstname> <Lastname>string</Lastname> <Email>string</Email> <Phone>string</Phone> <Mobile>string</Mobile> <PositionTitle>string</PositionTitle> <TimeZone>string</TimeZone> <DateCreated>string</DateCreated> <DateUpdated>string</DateUpdated> </CompanyContact>
        '401':
          description: Unauthorized
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
        '404':
          description: Not Found
          content:
            application/json: { }
            text/json: { }
            application/xml: { }
            text/xml: { }
components:
  schemas:
    AccountDetails:
      type: object
      properties:
        AccountID:
          type: integer
          format: int32
        CompanyName:
          type: string
        Subdomain:
          type: string
        AccountEmail:
          type: string
        hasStartEndTimesheets:
          type: boolean
        has24HourTimesheetFormat:
          type: boolean
        WeeklyTimesheetReminder:
          type: boolean
        LockApprovedTimesheets:
          type: boolean
        TimesheetDayOfWeek:
          type: integer
          format: int32
        TimesheetDisplayFormatCode:
          type: string
        AllowHidingCompletedTasksOnTimesheet:
          type: boolean
        CurrentServerTimeISO:
          type: string
          description: 'Format: ISO "YYYY-MM-DD HH:mm:ss.SSS"'
        SC:
          type: string
        DefaultCurrencyCode:
          type: string
          description: ISO 3 letter base Currency Code for the account
        ExpenseApprovalRequired:
          type: boolean
          description: Whether the account requires expenses be approved.
        LockApprovedExpenses:
          type: boolean
          description: Approved expenses get locked from subsequent editing by standard expense users.
        BrandPrimaryColor:
          type: string
          description: A custom branding color for the account. Available on paid accounts.
        BrandPrimaryColorLuminance:
          type: string
          description: 'A determination of the luminance of the Brand Primary Color (possible values: ''Dark'', ''Medium'', ''Light''). This can be used to determine appropriate font colors to sit on top of the brand color.'
    CompanyDropdownList:
      type: object
      properties:
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/CompanyMinimal'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    CompanyMinimal:
      type: object
      properties:
        CompanyID:
          type: integer
          format: int64
        CompanyName:
          type: string
    CompanyList:
      type: object
      properties:
        Companies:
          type: array
          items:
            $ref: '#/components/schemas/Company'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    Company:
      type: object
      properties:
        CompanyID:
          type: integer
          format: int32
        CompanyName:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressState:
          type: string
        BillingAddressPostCode:
          type: string
        BillingCountryCode:
          type: string
        BillingAddress:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        website:
          type: string
        TaxNumber:
          type: string
        Comments:
          type: string
        CurrencyCode:
          type: string
        DefaultTradingTermIDFK:
          type: integer
          format: int32
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        Contacts:
          type: array
          items:
            $ref: '#/components/schemas/CompanyContact'
    CompanyContact:
      type: object
      properties:
        ContactID:
          type: integer
          format: int32
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        Email:
          type: string
        Phone:
          type: string
        Mobile:
          type: string
        PositionTitle:
          type: string
        TimeZone:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    NewCompany:
      required:
        - CompanyName
      type: object
      properties:
        CompanyName:
          type: string
        CurrencyCode:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressState:
          type: string
        BillingAddressPostCode:
          type: string
        BillingCountryCode:
          type: string
        BillingAddress:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        website:
          type: string
        TaxNumber:
          type: string
        Comments:
          type: string
      example:
        CompanyName: string
        CurrencyCode: string
        BillingAddressLine: string
        BillingAddressCity: string
        BillingAddressState: string
        BillingAddressPostCode: string
        BillingCountryCode: string
        BillingAddress: string
        Phone: string
        Fax: string
        website: string
        TaxNumber: string
        Comments: string
    UpdateCompany:
      type: object
      properties:
        CompanyID:
          type: integer
          format: int32
        FieldsToUpdate:
          type: array
          items:
            type: string
        CompanyName:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressState:
          type: string
        BillingAddressPostCode:
          type: string
        BillingCountryCode:
          type: string
        BillingAddress:
          type: string
        Phone:
          type: string
        Fax:
          type: string
        website:
          type: string
        TaxNumber:
          type: string
        Comments:
          type: string
      example:
        CompanyID: 0
        FieldsToUpdate:
          - string
        CompanyName: string
        BillingAddressLine: string
        BillingAddressCity: string
        BillingAddressState: string
        BillingAddressPostCode: string
        BillingCountryCode: string
        BillingAddress: string
        Phone: string
        Fax: string
        website: string
        TaxNumber: string
        Comments: string
    ContactList:
      type: object
      properties:
        Contacts:
          type: array
          items:
            $ref: '#/components/schemas/CompanyContact'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    NewCompanyContact:
      required:
        - ContactEmail
        - Firstname
        - Lastname
      type: object
      properties:
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        CurrencyCode:
          type: string
        CompanyBillingAddress:
          type: string
        CompanyBillingAddressLine:
          type: string
        CompanyBillingAddressCity:
          type: string
        CompanyBillingAddressState:
          type: string
        CompanyBillingAddressPostCode:
          type: string
        CompanyBillingAddressCountryCode:
          type: string
        ContactEmail:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        PositionTitle:
          type: string
        Mobile:
          type: string
        Phone:
          type: string
        UpdateExisting:
          type: boolean
      example:
        CompanyIDFK: 0
        CompanyName: string
        CurrencyCode: string
        CompanyBillingAddress: string
        CompanyBillingAddressLine: string
        CompanyBillingAddressCity: string
        CompanyBillingAddressState: string
        CompanyBillingAddressPostCode: string
        CompanyBillingAddressCountryCode: string
        ContactEmail: string
        Firstname: string
        Lastname: string
        PositionTitle: string
        Mobile: string
        Phone: string
        UpdateExisting: true
    CreditNoteList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        CreditNotes:
          type: array
          items:
            $ref: '#/components/schemas/CreditNote'
    CreditNote:
      type: object
      properties:
        TransactionID:
          type: integer
          format: int64
        TransactionPrefix:
          type: string
        CreditNoteNumber:
          type: string
        CustomerIDFK:
          type: integer
          format: int32
        DateIssued:
          type: string
          format: date-time
        TransactionStatusCode:
          type: string
        Balance:
          type: number
          format: double
        CurrencyCode:
          type: string
        TotalAmount:
          type: number
          format: double
        Notes:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        CreditNoteAllocations:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteAllocation'
        CreditNoteLineItems:
          type: array
          items:
            $ref: '#/components/schemas/CreditNoteLineItem'
    CreditNoteAllocation:
      type: object
      properties:
        TransactionAllocationID:
          type: integer
          format: int64
        InvoiceTransactionIDFK:
          type: integer
          format: int64
        CreditNoteTransactionIDFK:
          type: integer
          format: int64
        AllocationDate:
          type: string
          format: date-time
        AllocationAmount:
          type: number
          format: double
    CreditNoteLineItem:
      type: object
      properties:
        TransactionLineItemID:
          type: integer
          format: int64
        Description:
          type: string
        Quantity:
          type: number
          format: double
        UnitPrice:
          type: number
          format: double
        TaxAmount:
          type: number
          format: double
        TaxIDFK:
          type: integer
          format: int32
        Amount:
          type: number
          format: double
        Discount:
          type: number
          format: double
    CurrencyList:
      type: object
      properties:
        Currencies:
          type: array
          items:
            $ref: '#/components/schemas/Currency'
    Currency:
      type: object
      properties:
        CurrencyCode:
          type: string
        Name:
          type: string
        Symbol:
          type: string
        Symbol2:
          type: string
        DecimalPlaces:
          type: integer
          format: int32
    EstimateList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        Estimates:
          type: array
          items:
            $ref: '#/components/schemas/EstimateDetails'
    EstimateDetails:
      type: object
      properties:
        EstimateID:
          type: integer
          format: int64
        AccountIDFK:
          type: integer
          format: int32
        EstimatePrefix:
          type: string
        EstimateItemNumber:
          type: string
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        Subject:
          type: string
        DateIssued:
          type: string
          format: date-time
        DateSent:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
        EstimateStatusCode:
          type: string
        TaxAmount:
          type: number
          format: double
        EstimateTaxConfigCode:
          type: string
        Balance:
          type: number
          format: double
        CurrencyCode:
          type: string
        TotalAmount:
          type: number
          format: double
        ExchangeRate:
          type: number
          format: double
        Notes:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/EstimateLineItemDetails'
        Links:
          $ref: '#/components/schemas/EstimateLinks'
        Issuer:
          $ref: '#/components/schemas/IssuerDetails'
        Recipient:
          $ref: '#/components/schemas/RecipientDetails'
    EstimateLineItemDetails:
      type: object
      properties:
        EstimateLineItemID:
          type: integer
          format: int64
        InventoryItemIDFK:
          type: integer
          format: int64
        InventoryItemName:
          type: string
        InventoryItemSKU:
          type: string
        Description:
          type: string
        Quantity:
          type: number
          format: double
        UnitPrice:
          type: number
          format: double
        TaxAmount:
          type: number
          format: double
        TaxIDFK:
          type: integer
          format: int32
        TaxCode:
          type: string
        TaxName:
          type: string
        Amount:
          type: number
          format: double
        Discount:
          type: number
          format: double
    EstimateLinks:
      type: object
      properties:
        ClientView:
          type: string
        View:
          type: string
        Edit:
          type: string
    IssuerDetails:
      type: object
      properties:
        BillingAddress:
          type: string
        BillingAddressLine:
          type: string
        BillingAddressCity:
          type: string
        BillingAddressState:
          type: string
        BillingAddressPostCode:
          type: string
        BillingCountryCode:
          type: string
        TaxNumber:
          type: string
    RecipientDetails:
      type: object
      properties:
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        RecipientFormattedBillingAddress:
          type: string
        RecipientBillingAddressLine:
          type: string
        RecipientBillingAddressCity:
          type: string
        RecipientBillingAddressState:
          type: string
        RecipientBillingAddressPostCode:
          type: string
        RecipientBillingAddressCountryCode:
          type: string
    NewEstimate:
      type: object
      properties:
        EstimatePrefix:
          type: string
          description: A prefix for the Estimate number. e.g. 'INV'. If left blank it will be set to the account default. Max length 20 characters.
        EstimateNumber:
          type: string
          description: Pass any string. If left blank it will use the next number in the auto incrementing sequence. If an integer is passed then the largest integer will be use as the seed to auto generate the next Estimate number in the sequence.
        CompanyIDFK:
          type: integer
          description: If left blank then you must specify Company Name.
          format: int32
        CompanyName:
          type: string
          description: 'If left blank then you must specify Company ID. Specified Name will be used to match existing customer record. If not matched then it will be used to create a new customer. First Name, Last Name and Email will only be used if it is a new company. If the Company name appears multiple times we will check the email address to find a matching company. If email address doesn''t identify a matching company then the Estimate creation will be rejected.'
        Firstname:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        Lastname:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        Email:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        CurrencyCode:
          type: string
          description: Expects ISO Standard 3 character currency code. If left blank the currency will default to account's currency in general setting. For existing companies this field will be ignored and the Estimate will use the currency of the customer. For new customers if the currency is not specified then account currency will be used otherwise the specified currency will be used.
        ExchangeRate:
          type: number
          description: Exchange rate is only valid for Estimates in currency other than default account currency. If not specified it will get the market rate based on the Date Issued.
          format: double
        InvoiceTemplateIDFK:
          type: integer
          description: If left blank the account default Estimate template will be used.
          format: int32
        Subject:
          type: string
          description: Plain UTF8 text. (no HTML). 255 characters max
        CustomerPONumber:
          type: string
          description: Plain UTF8 text. 100 characters max
        DateIssued:
          type: string
          description: If not specified it will use today's date. The date should be specified as local date.
          format: date-time
        DueDate:
          type: string
          description: It will be auto calculated based on the payment term and issue date. Due Date must be greater than or equal to Issue Date. If the Due Date is specified then Payment Terms will be set to -1 (Custom)
          format: date-time
        EstimateTaxConfigCode:
          type: string
          description: 'Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive). If left empty it will use the account default.'
        Notes:
          type: string
          description: Plain UTF8 text. (no HTML). Max 2000 characters
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/NewEstimateLineItem'
      description: New Estimate to be created
      example:
        EstimatePrefix: string
        EstimateNumber: string
        CompanyIDFK: 0
        CompanyName: string
        Firstname: string
        Lastname: string
        Email: string
        CurrencyCode: string
        ExchangeRate: 0
        InvoiceTemplateIDFK: 0
        Subject: string
        CustomerPONumber: string
        DateIssued: string
        DueDate: string
        EstimateTaxConfigCode: string
        Notes: string
        LineItems:
          - InventoryItemIDFK: 0
            InventoryItemName: string
            Description: string
            Quantity: 0
            UnitPrice: 0
            TaxIDFK: 0
            TaxName: string
            TaxPercent: 0
            Discount: 0
    NewEstimateLineItem:
      required:
        - Quantity
        - UnitPrice
      type: object
      properties:
        InventoryItemIDFK:
          type: integer
          description: If not specified then Inventory Item Name must be specified.
          format: int32
        InventoryItemName:
          type: string
          description: If not specified then Inventory item ID must be specified. If specified and not matched to any existing inventory items then a new inventory item will be created. Max 200 characters.
        Description:
          type: string
          description: Plain UTF8 text. (no HTML)
        Quantity:
          type: number
          description: The quantity for the line item
          format: double
        UnitPrice:
          type: number
          description: The unit price for the lineitem.
          format: double
        TaxIDFK:
          type: integer
          description: If specified then it must match an existing Tax ID. If not specified then Tax Name and Tax Percent must be specified.
          format: int32
        TaxName:
          type: string
          description: Must be specified if the Tax ID is blank. If the Tax Name is specified it will be matched to an existing Tax Name or else a new Tax will be created.
        TaxPercent:
          type: number
          description: The Tax Percent will only be used if a new tax is being created.
          format: double
        Discount:
          type: number
          description: Enter 10.5 to give a 10.5% discount
          format: double
      description: Line item to be added to new Estimate
    ExpenseAttachmentUploadResult:
      type: object
      properties:
        FileAttachments:
          type: array
          items:
            $ref: '#/components/schemas/FileAttachmentDetails'
    FileAttachmentDetails:
      type: object
      properties:
        FileAttachmentID:
          type: integer
          format: int64
        SizeBytes:
          type: integer
          format: int64
        OriginalFilename:
          type: string
        PublicFileURL:
          type: string
        PreviewBaseURL:
          type: string
    ExpenseList:
      type: object
      properties:
        Expenses:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    ExpenseDetails:
      type: object
      properties:
        ExpenseID:
          type: integer
          format: int64
        UserIDFK:
          type: integer
          format: int32
        Firstname:
          type: string
        Lastname:
          type: string
        Email:
          type: string
        CustomerIDFK:
          type: integer
          format: int32
        CustomerName:
          type: string
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        ProjectCode:
          type: string
        TaskIDFK:
          type: integer
          format: int32
        TaskTitle:
          type: string
        ExpenseCategoryIDFK:
          type: integer
          format: int32
        ExpenseCategoryName:
          type: string
        ExpenseCategoryHasUnitPrice:
          type: boolean
        ExpenseCategoryUnitPrice:
          type: number
          format: double
        ExpenseCategoryUnitName:
          type: string
        CurrencyCode:
          type: string
        ExchangeRate:
          type: number
          format: double
        Quantity:
          type: number
          format: double
        Amount:
          type: number
          format: double
        TaxAmount:
          type: number
          format: double
        TaxIDFK:
          type: integer
          format: int32
        TaxName:
          type: string
        TransactionTaxConfigCode:
          type: string
        TransactionTaxConfigName:
          type: string
        isOfficialExchangeRate:
          type: boolean
        ExpenseApprovalStatusCode:
          type: string
        ExpensePaymentMethodIDFK:
          type: integer
          format: int32
        ExpensePaymentMethodName:
          type: string
        isChargeable:
          type: boolean
        ChargeableStatusCode:
          type: string
        isReimbursable:
          type: boolean
        ExpenseReimbursementStatusCode:
          type: string
        ExpenseReimbursementIDFK:
          type: integer
          format: int64
        ExpenseDate:
          type: string
          format: date-time
        FileAttachmentIDFK:
          type: integer
          format: int64
        AttachmentURL:
          type: string
        AttachmentPreviewURL:
          type: string
        Merchant:
          type: string
        MerchantTaxNumber:
          type: string
        Notes:
          type: string
        ExpenseReportIDFK:
          type: integer
          format: int64
        ExpenseReportName:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    NewExpense:
      type: object
      properties:
        ExpenseDate:
          type: string
          description: The date of the expense entry (Required)
          format: date-time
        UserIDFK:
          type: integer
          description: 'UserID for a Timesheet/Expense user in Avaza. If not provided, UserEmail field must be provided'
          format: int32
        UserEmail:
          type: string
          description: 'The email address of a Timesheet/Expense user in Avaza. If not provided, UserIDFK field must be provided.'
        ExpenseCategoryIDFK:
          type: integer
          description: 'The expense category to link the Expense to. If not provided, ExpenseCategoryName must be provided'
          format: int32
        ExpenseCategoryName:
          type: string
          description: Must match an existing expense category name otherwise a new category will be created. If left blank Expense Category ID must be provided.
        isChargeable:
          type: boolean
          description: 'aka Billable. Defaults to false if not provided. If set to true, a CustomerIDFK or CustomerName must be provided.'
        isReimbursable:
          type: boolean
          description: Defaults to false if not provided.
        Quantity:
          type: number
          description: Conditional - available for expenses that are assigned a unit priced based expense category. e.g Mileage
          format: double
        CustomerIDFK:
          type: integer
          description: The Avaza Customer ID to associate the Expense with. Either this field or CustomerName can be provided.
          format: int32
        CustomerName:
          type: string
          description: The name of an existing customer in Avaza. Must be an exact (case insensitive) match.
        ProjectIDFK:
          type: integer
          description: The Avaza project ID to associate the Expense with.
          format: int32
        ProjectName:
          type: string
          description: 'Can work for matching an expense to a project, but only if it''s an exact match for a single project under the customer.'
        TaskIDFK:
          type: integer
          description: (optional) TaskID of a Task to link the new Expense to. A Customer and Project must be provided also.
          format: int32
        CurrencyCode:
          type: string
          description: 'A 3-letter ISO CurrencyCode for the expense currency. (e.g. USD). If not provided, defaults to the Account base currency.'
        ExchangeRate:
          type: number
          description: 'Optional (Only relevant if the expense currency is different to your account currency. If not provided we will look up the market exchange rate for you based on the expense date.) Exchange Rate = Expense Currency Amount / Base Currency Amount (e.g. if Expense currency is in AUD, and Base Currency is in USD, Exchange Rate = AUD $140 / USD $100 = 1.4)'
          format: double
        Amount:
          type: number
          description: Expense Amount (Required). Must be &gt;= 0
          format: double
        TaxIDFK:
          type: integer
          description: Avaza Tax ID the expense belongs to. If left blank then Tax Name must be provided.
          format: int32
        TaxName:
          type: string
          description: Must exactly match an existing Tax Name that you have configured in Avaza Tax settings. If left blank then Tax ID must be provided.
        TransactionTaxConfigCode:
          type: string
          description: Optional - Enter "INC" if the tax amount is included in the expense amount otherwise enter "EX" when the amount exlcudes the tax. Defaults to "Ex". The tax amount on the expense will be autocalculated.
        GroupTripName:
          type: string
          description: 'Links the expense to a Grouping/Trip report. If no matching name found, creates a new Group/Trip Report name.'
        ExpensePaymentMethodIDFK:
          type: integer
          description: (Optional) ID of Expense Payment Method.
          format: int32
        Merchant:
          type: string
          description: The name of the merchant.
        MerchantTaxNumber:
          type: string
          description: A Tax number identifier for the merchant.
        Notes:
          type: string
          description: Expense Notes
        VerifyAndSave:
          type: boolean
          description: Pass false if creating a draft expense. True otherwise.
        FileAttachmentIDs:
          type: array
          items:
            type: integer
            format: int64
          description: Array of File Attachment IDs to associate with this expense. The files need to have already been uploaded. Currently only accepts a single file.
      example:
        ExpenseDate: string
        UserIDFK: 0
        UserEmail: string
        ExpenseCategoryIDFK: 0
        ExpenseCategoryName: string
        isChargeable: true
        isReimbursable: true
        Quantity: 0
        CustomerIDFK: 0
        CustomerName: string
        ProjectIDFK: 0
        ProjectName: string
        TaskIDFK: 0
        CurrencyCode: string
        ExchangeRate: 0
        Amount: 0
        TaxIDFK: 0
        TaxName: string
        TransactionTaxConfigCode: string
        GroupTripName: string
        ExpensePaymentMethodIDFK: 0
        Merchant: string
        MerchantTaxNumber: string
        Notes: string
        VerifyAndSave: true
        FileAttachmentIDs:
          - '0.0'
    ExpenseDeleteResultSet:
      type: object
      properties:
        Results:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseDeleteResult'
    ExpenseDeleteResult:
      type: object
      properties:
        ExpenseID:
          type: integer
          format: int64
        Success:
          type: boolean
        ErrorMessage:
          type: string
    UpdateExpense:
      required:
        - ExpenseID
        - FieldsToUpdate
      type: object
      properties:
        ExpenseID:
          type: integer
          format: int64
        FieldsToUpdate:
          type: array
          items:
            type: string
        ExpenseDate:
          type: string
          description: The date of the expense entry
          format: date-time
        ExpenseCategoryIDFK:
          type: integer
          description: The expense category to link the Expense to.
          format: int32
        isChargeable:
          type: boolean
          description: 'aka Billable. Defaults to false if not provided. If set to true, a CustomerIDFK or CustomerName must be provided.'
        isReimbursable:
          type: boolean
          description: Defaults to false if not provided.
        Quantity:
          type: number
          description: Conditional - available for expenses that are assigned a unit priced based expense category. e.g Mileage
          format: double
        CustomerIDFK:
          type: integer
          description: The Avaza Customer ID to associate the Expense with.
          format: int32
        ProjectIDFK:
          type: integer
          description: The Avaza project ID to associate the Expense with.
          format: int32
        TaskIDFK:
          type: integer
          description: (optional) TaskID of a Task to link the new Expense to. A Customer and Project must be provided also.
          format: int32
        CurrencyCode:
          type: string
          description: 'A 3-letter ISO CurrencyCode for the expense currency. (e.g. USD). If not provided, defaults to the Account base currency.'
        ExchangeRate:
          type: number
          description: 'Optional (Only relevant if the expense currency is different to your account currency. If not provided we will look up the market exchange rate for you based on the expense date.) Exchange Rate = Expense Currency Amount / Base Currency Amount (e.g. if Expense currency is in AUD, and Base Currency is in USD, Exchange Rate = AUD $140 / USD $100 = 1.4)'
          format: double
        Amount:
          type: number
          description: Expense Amount (Required). Must be &gt;= 0
          format: double
        TaxIDFK:
          type: integer
          description: Avaza Tax ID the expense belongs to.
          format: int32
        TransactionTaxConfigCode:
          type: string
          description: Optional - Enter "INC" if the tax amount is included in the expense amount otherwise enter "EX" when the amount exlcudes the tax. Defaults to "Ex". The tax amount on the expense will be autocalculated.
        GroupTripName:
          type: string
          description: 'Links the expense to a Grouping/Trip report. If no matching name found, creates a new Group/Trip Report name.'
        ExpensePaymentMethodIDFK:
          type: integer
          description: (Optional) ID of Expense Payment Method.
          format: int32
        Merchant:
          type: string
          description: The name of the merchant.
        MerchantTaxNumber:
          type: string
          description: A Tax number identifier for the merchant.
        Notes:
          type: string
          description: Expense Notes
        VerifyAndSave:
          type: boolean
          description: Pass false if creating a draft expense. True otherwise.
        FileAttachmentIDs:
          type: array
          items:
            type: integer
            format: int64
          description: Array of File Attachment IDs to associate with this expense. The files need to have already been uploaded. Currently only accepts a single file.
      example:
        ExpenseID: '0.0'
        FieldsToUpdate:
          - string
        ExpenseDate: string
        ExpenseCategoryIDFK: 0
        isChargeable: true
        isReimbursable: true
        Quantity: 0
        CustomerIDFK: 0
        ProjectIDFK: 0
        TaskIDFK: 0
        CurrencyCode: string
        ExchangeRate: 0
        Amount: 0
        TaxIDFK: 0
        TransactionTaxConfigCode: string
        GroupTripName: string
        ExpensePaymentMethodIDFK: 0
        Merchant: string
        MerchantTaxNumber: string
        Notes: string
        VerifyAndSave: true
        FileAttachmentIDs:
          - '0.0'
    ExpenseCategoryList:
      type: object
      properties:
        Categories:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseCategoryDetails'
    ExpenseCategoryDetails:
      type: object
      properties:
        ExpenseCategoryID:
          type: integer
          format: int32
        Name:
          type: string
        Enabled:
          type: boolean
        hasUnitPrice:
          type: boolean
        UnitPrice:
          type: number
          format: double
        UnitName:
          type: string
    ExpenseGroupDropdownList:
      type: object
      properties:
        ExpenseGroups:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseGroupMinimal'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    ExpenseGroupMinimal:
      type: object
      properties:
        ExpenseGroupID:
          type: integer
          format: int64
        Name:
          type: string
    ExpenseMerchantDropdownList:
      type: object
      properties:
        ExpenseMerchants:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseMerchantMinimal'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    ExpenseMerchantMinimal:
      type: object
      properties:
        MerchantName:
          type: string
    ExpensePaymentMethodDropdownList:
      type: object
      properties:
        ExpensePaymentMethods:
          type: array
          items:
            $ref: '#/components/schemas/ExpensePaymentMethodMinimal'
    ExpensePaymentMethodMinimal:
      type: object
      properties:
        ExpensePaymentMethodID:
          type: integer
          format: int64
        Name:
          type: string
    ExpenseSummaryRequest:
      type: object
      properties:
        GroupBy:
          type: array
          items:
            type: string
          description: '(Optional) Combine one, two or three levels of Grouping. Combine these possible grouping values: "Category", "ChargeableStatus", "Merchant", "ApprovalStatus", "ReimbursementStatus", "Customer", "Project", "User", "Task", "Year", "Month", "Day", "Week".'
        ExpenseDateFrom:
          type: string
          description: (Required) Filter for expenses with expense dates greater or equal to the specified date. e.g. 2019-01-25.
          format: date-time
        ExpenseDateTo:
          type: string
          description: (Required) Filter for expenses with an expense date smaller or equal to the specified  date. e.g. 2019-01-25.
          format: date-time
        UserID:
          type: array
          items:
            type: integer
            format: int32
          description: '(Optional) Defaults to the current user. Provide one or more UserIDs of Users whose expenses should be retrieved. If the current user doesn''t have impersonation rights, then they will only see their own data.'
        ProjectID:
          type: integer
          description: (Optional) Filter by Project
          format: int32
    ExpenseSummaryResult:
      type: object
      properties:
        ExpenseDateFrom:
          type: string
          format: date-time
        ExpenseDateTo:
          type: string
          format: date-time
        TotalAmount:
          type: number
          format: double
        UserID:
          type: array
          items:
            type: integer
            format: int32
        GroupingLevels:
          type: array
          items:
            type: string
        GroupData:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseSummaryGroup'
    ExpenseSummaryGroup:
      type: object
      properties:
        GroupID:
          type: string
        GroupName:
          type: string
        TotalAmount:
          type: number
          format: double
        GroupData:
          type: array
          items:
            $ref: '#/components/schemas/ExpenseSummaryGroup'
    FixedAmountList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        FixedAmounts:
          type: array
          items:
            $ref: '#/components/schemas/FixedAmountDetails'
    FixedAmountDetails:
      type: object
      properties:
        FixedAmountID:
          type: integer
          format: int32
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        ProjectCode:
          type: string
        TaskIDFK:
          type: integer
          format: int32
        TaskTitle:
          type: string
        InventoryItemIDFK:
          type: integer
          format: int64
        InventoryItemName:
          type: string
        Amount:
          type: number
          format: double
        Notes:
          type: string
        isInvoiced:
          type: boolean
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        UpdatedByUserIDFK:
          type: integer
          format: int32
    InventoryList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        Inventory:
          type: array
          items:
            $ref: '#/components/schemas/InventoryItem'
    InventoryItem:
      type: object
      properties:
        InventoryItemID:
          type: integer
          format: int64
        Name:
          type: string
        Description:
          type: string
        SKU:
          type: string
        CostPrice:
          type: number
          format: double
        SalePrice:
          type: number
          format: double
        SaleTaxIDFK:
          type: integer
          format: int32
        isHidden:
          type: boolean
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    InvoiceList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        Invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
    Invoice:
      type: object
      properties:
        TransactionID:
          type: integer
          format: int64
        AccountIDFK:
          type: integer
          format: int32
        TransactionPrefix:
          type: string
        InvoiceNumber:
          type: string
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        Subject:
          type: string
        DateIssued:
          type: string
          format: date-time
        DateSent:
          type: string
          format: date-time
        DueDate:
          type: string
          format: date-time
        TransactionStatusCode:
          type: string
        TaxAmount:
          type: number
          format: double
        TransactionTaxConfigCode:
          type: string
        Balance:
          type: number
          format: double
        CurrencyCode:
          type: string
        TotalAmount:
          type: number
          format: double
        ExchangeRate:
          type: number
          format: double
        Notes:
          type: string
        CustomerPONumber:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
        Links:
          $ref: '#/components/schemas/InvoiceLinks'
        Issuer:
          $ref: '#/components/schemas/IssuerDetails'
        Recipient:
          $ref: '#/components/schemas/RecipientDetails'
    InvoiceLineItem:
      type: object
      properties:
        TransactionLineItemID:
          type: integer
          format: int64
        InventoryItemIDFK:
          type: integer
          format: int64
        InventoryItemName:
          type: string
        InventoryItemSKU:
          type: string
        Description:
          type: string
        Quantity:
          type: number
          format: double
        UnitPrice:
          type: number
          format: double
        TaxAmount:
          type: number
          format: double
        TaxIDFK:
          type: integer
          format: int32
        TaxCode:
          type: string
        TaxName:
          type: string
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        Amount:
          type: number
          format: double
        Discount:
          type: number
          format: double
    InvoiceLinks:
      type: object
      properties:
        ClientView:
          type: string
        View:
          type: string
        Edit:
          type: string
    NewInvoice:
      type: object
      properties:
        TransactionPrefix:
          type: string
          description: A prefix for the Invoice number. e.g. 'INV'. If left blank it will be set to the account default. Max length 20 characters.
        InvoiceNumber:
          type: string
          description: Pass any string. If left blank it will use the next number in the auto incrementing sequence. If an integer is passed then the largest integer will be use as the seed to auto generate the next invoice number in the sequence.
        CompanyIDFK:
          type: integer
          description: If left blank then you must specify Company Name.
          format: int32
        CompanyName:
          type: string
          description: 'If left blank then you must specify Company ID. Specified Name will be used to match existing customer record. If not matched then it will be used to create a new customer. First Name, Last Name and Email will only be used if it is a new company. If the Company name appears multiple times we will check the email address to find a matching company. If email address doesn''t identify a matching company then the invoice creation will be rejected.'
        Firstname:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        Lastname:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        Email:
          type: string
          description: Specified value will be used to create a new customer contact only if a new customer is being created.
        CurrencyCode:
          type: string
          description: Expects ISO Standard 3 character currency code. If left blank the currency will default to account's currency in general setting. For existing companies this field will be ignored and the invoice will use the currency of the customer. For new customers if the currency is not specified then account currency will be used otherwise the specified currency will be used.
        ExchangeRate:
          type: number
          description: Exchange rate is only valid for invoices in currency other than default account currency. If not specified it will get the market rate based on the Date Issued.
          format: double
        InvoiceTemplateIDFK:
          type: integer
          description: If left blank the account default invoice template will be used.
          format: int32
        Subject:
          type: string
          description: Plain UTF8 text. (no HTML). 255 characters max
        CustomerPONumber:
          type: string
          description: Plain UTF8 text. 100 characters max
        DateIssued:
          type: string
          description: If not specified it will use today's date. The date should be specified as local date.
          format: date-time
        PaymentTerms:
          type: integer
          description: " \"If left blank we will set it to customer default. If specified then it must match one of your existing pre configured payment term periods. Your account starts with:\r\n(-1 --- Custom, 0 --- Upon Receipt, 7 --- 7 Days, 15 --- 15 Days, 30 --- 30 Days, 45 --- 45 Days, 60 --- 60 Days)"
          format: int32
        DueDate:
          type: string
          description: It will be auto calculated based on the payment term and issue date. Due Date must be greater than or equal to Issue Date. If the Due Date is specified then Payment Terms will be set to -1 (Custom)
          format: date-time
        TransactionTaxConfigCode:
          type: string
          description: 'Possible values are (EX --- Tax Exclusive, INC --- Tax Inclusive). If left empty it will use the account default.'
        Notes:
          type: string
          description: Plain UTF8 text. (no HTML). Max 2000 characters
        LineItems:
          type: array
          items:
            $ref: '#/components/schemas/NewInvoiceLineItem'
      description: New invoice to be created
      example:
        TransactionPrefix: string
        InvoiceNumber: string
        CompanyIDFK: 0
        CompanyName: string
        Firstname: string
        Lastname: string
        Email: string
        CurrencyCode: string
        ExchangeRate: 0
        InvoiceTemplateIDFK: 0
        Subject: string
        CustomerPONumber: string
        DateIssued: string
        PaymentTerms: 0
        DueDate: string
        TransactionTaxConfigCode: string
        Notes: string
        LineItems:
          - InventoryItemIDFK: 0
            InventoryItemName: string
            Description: string
            Quantity: 0
            UnitPrice: 0
            TaxIDFK: 0
            TaxName: string
            TaxPercent: 0
            Discount: 0
            ProjectIDFK: 0
    NewInvoiceLineItem:
      required:
        - Quantity
        - UnitPrice
      type: object
      properties:
        InventoryItemIDFK:
          type: integer
          description: If not specified then Inventory Item Name must be specified.
          format: int32
        InventoryItemName:
          type: string
          description: If not specified then Inventory item ID must be specified. If specified and not matched to any existing inventory items then a new inventory item will be created. Max 200 characters.
        Description:
          type: string
          description: Plain UTF8 text. (no HTML)
        Quantity:
          type: number
          description: The quantity for the line item
          format: double
        UnitPrice:
          type: number
          description: The unit price for the lineitem.
          format: double
        TaxIDFK:
          type: integer
          description: If specified then it must match an existing Tax ID. If not specified then Tax Name and Tax Percent must be specified.
          format: int32
        TaxName:
          type: string
          description: Must be specified if the Tax ID is blank. If the Tax Name is specified it will be matched to an existing Tax Name or else a new Tax will be created.
        TaxPercent:
          type: number
          description: The Tax Percent will only be used if a new tax is being created.
          format: double
        Discount:
          type: number
          description: Enter 10.5 to give a 10.5% discount
          format: double
        ProjectIDFK:
          type: integer
          description: 'Optional. Project ID of an Avaza Project that belongs to this customer, so line item is attributed to that Project for reporting.'
          format: int32
      description: Line item to be added to new invoice
    PaymentList:
      type: object
      properties:
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
        Payments:
          type: array
          items:
            $ref: '#/components/schemas/Payment'
    Payment:
      type: object
      properties:
        TransactionID:
          type: integer
          format: int64
        AccountIDFK:
          type: integer
          format: int32
        TransactionPrefix:
          type: string
        PaymentNumber:
          type: string
        TransactionReference:
          type: string
        CustomerIDFK:
          type: integer
          format: int32
        DateIssued:
          type: string
          format: date-time
        TransactionStatusCode:
          type: string
        PaymentProviderCode:
          type: string
        ExchangeRate:
          type: number
          format: double
        Balance:
          type: number
          format: double
        CurrencyCode:
          type: string
        TotalAmount:
          type: number
          format: double
        Notes:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        PaymentAllocations:
          type: array
          items:
            $ref: '#/components/schemas/PaymentAllocation'
    PaymentAllocation:
      type: object
      properties:
        TransactionAllocationID:
          type: integer
          format: int64
        InvoiceTransactionIDFK:
          type: integer
          format: int64
        PaymentTransactionIDFK:
          type: integer
          format: int64
        AllocationDate:
          type: string
          format: date-time
        AllocationAmount:
          type: number
          format: double
    NewPayment:
      type: object
      properties:
        Amount:
          type: number
          format: double
        PaymentNumber:
          type: string
          description: Optional. If not specified will be automatically generated
        DateIssued:
          type: string
          description: 'Date of Payment. If not specified, assumes today.'
          format: date-time
        TransactionPrefix:
          type: string
          description: Optional to override the default prefix added to Payment Numbers
        CustomerIDFK:
          type: integer
          description: Only required if no invoice allocations specified.
          format: int32
        ExchangeRate:
          type: number
          description: Optional. Only used when the Customer's currecy is different from the Avaza account's base currency. Specifies the exchange rate that should apply between the customer currency and base currency. If not provided we will obtain an up to date exchange rate for the Payment Issue Date.
          format: double
        TransactionReference:
          type: string
          description: 'Optional for storing the reference # of the payment method.'
        Notes:
          type: string
        PaymentProviderCode:
          type: string
          description: Optional for storing the payment provider who was the source of funds.
        PaymentAllocations:
          type: array
          items:
            $ref: '#/components/schemas/NewPaymentAllocation'
          description: List of amounts within this payment that are allocated to invoices. The sum of these be less than or equal to the payment amount.
      example:
        Amount: 0
        PaymentNumber: string
        DateIssued: string
        TransactionPrefix: string
        CustomerIDFK: 0
        ExchangeRate: 0
        TransactionReference: string
        Notes: string
        PaymentProviderCode: string
        PaymentAllocations:
          - InvoiceTransactionIDFK: 0
            AllocationAmount: 0
            AllocationDate: string
    NewPaymentAllocation:
      type: object
      properties:
        InvoiceTransactionIDFK:
          type: integer
          description: The Avaza Invoice TransactionID that is having a payment amount allocated to it.
          format: int64
        AllocationAmount:
          type: number
          description: The Amount being allocated to the invoice. Expects same currency as invoice currency
          format: double
        AllocationDate:
          type: string
          description: Optional. Defaults to the current time in the Avaza account's timezone. The date the allocation is applied to the invoice. Can be difference from the Payment Date when doing prepayments etc.
          format: date-time
    ProjectDropdownList:
      type: object
      properties:
        companies:
          type: array
          items:
            $ref: '#/components/schemas/ProjectCompanyGroup'
          description: List of Projects grouped by Customer Name
        pageNumber:
          type: integer
          description: Current page number (1 based)
          format: int32
        PageSize:
          type: integer
          description: Current page size
          format: int32
        hasMore:
          type: boolean
          description: More records probably exist
    ProjectCompanyGroup:
      type: object
      properties:
        CompanyID:
          type: integer
          format: int64
        CompanyName:
          type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectDropdownSelection'
    ProjectDropdownSelection:
      type: object
      properties:
        ProjectID:
          type: integer
          format: int64
        ProjectCode:
          type: string
        Title:
          type: string
    ProjectList:
      type: object
      properties:
        Projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectListDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    ProjectListDetails:
      type: object
      properties:
        ProjectID:
          type: integer
          format: int32
        ProjectCode:
          type: string
        Title:
          type: string
        isArchived:
          type: boolean
        Notes:
          type: string
        CompanyName:
          type: string
        CompanyIDFK:
          type: integer
          format: int32
        ProjectCategoryIDFK:
          type: integer
          format: int64
        ProjectCategoryName:
          type: string
        isTaskRequiredOnTimesheet:
          type: boolean
        DefaultAccountTaskTypeIDFK:
          type: integer
          format: int32
        DefaultAccountTaskTypeName:
          type: string
        ProjectOwnerUserIDFK:
          type: integer
          format: int64
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    NewProjectModel:
      required:
        - ProjectTitle
      type: object
      properties:
        CompanyIDFK:
          type: integer
          description: 'An ID of a company in Avaza to create the Project under. You must provide either a CompanyID, or a CompanyName'
          format: int32
        CompanyName:
          type: string
          description: The name for a Company to create the project under. Will create company unless it matches an existing company name
        CurrencyCode:
          type: string
          description: 'The ISO 3 letter currency code to use when creating a new Company. If not provided, the account''s default currency will be used.'
        ProjectTitle:
          type: string
          description: The title of the new project. (255 characters max)
        ProjectCode:
          type: string
          description: Used when Manual Project Codes are enabled
        ProjectNotes:
          type: string
          description: Any descriptive notes about the project. (2000 characters max)
        TimesheetApprovalRequiredbyDefault:
          type: boolean
        PopulateDefaultProjectMembers:
          type: boolean
          description: Defaults to true.
        isTaskRequiredOnTimesheet:
          type: boolean
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        BudgetAmount:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        ProjectStatusCode:
          type: string
        ProjectCategoryIDFK:
          type: integer
          format: int32
      example:
        CompanyIDFK: 0
        CompanyName: string
        CurrencyCode: string
        ProjectTitle: string
        ProjectCode: string
        ProjectNotes: string
        TimesheetApprovalRequiredbyDefault: true
        PopulateDefaultProjectMembers: true
        isTaskRequiredOnTimesheet: true
        StartDate: string
        EndDate: string
        BudgetAmount: 0
        BudgetHours: 0
        ProjectStatusCode: string
        ProjectCategoryIDFK: 0
    ProjectDetails:
      type: object
      properties:
        ProjectID:
          type: integer
          format: int32
        Title:
          type: string
        ProjectCode:
          type: string
        Notes:
          type: string
        CompanyName:
          type: string
        CompanyIDFK:
          type: integer
          format: int32
        ProjectOwnerUserIDFK:
          type: integer
          format: int32
        ProjectStatusCode:
          type: string
          description: 'Possible values: NotStarted, InProgress, Complete'
        isArchived:
          type: boolean
        ProjectBillableTypeCode:
          type: string
          description: 'Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly, ProjectHourly'
        ProjectBudgetTypeCode:
          type: string
          description: 'Possible Values: CategoryHours, NoBudget, PersonHours, ProjectFees, ProjectHours'
        BudgetAmount:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        ProjectHourlyRate:
          type: number
          format: double
        ProjectCategoryIDFK:
          type: integer
          format: int32
        ProjectCategoryName:
          type: string
        isTaskRequiredOnTimesheet:
          type: boolean
        DefaultAccountTaskTypeIDFK:
          type: integer
          format: int32
        DefaultAccountTaskTypeName:
          type: string
        ProjectCategoryColor:
          type: string
          description: 'Html Hex Color Code starting with #'
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        Sections:
          type: array
          items:
            $ref: '#/components/schemas/ProjectSectionDetails'
        Members:
          type: array
          items:
            $ref: '#/components/schemas/ProjectMemberDetails'
        ProjectTags:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTagItem'
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    ProjectSectionDetails:
      type: object
      properties:
        SectionID:
          type: integer
          format: int32
        Title:
          type: string
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        DisplayOrder:
          type: integer
          format: int32
    ProjectMemberDetails:
      type: object
      properties:
        UserIDFK:
          type: integer
          format: int32
        Firstname:
          type: string
        Lastname:
          type: string
        Fullname:
          type: string
        Email:
          type: string
        CostAmount:
          type: number
          format: double
        RateAmount:
          type: number
          format: double
        BudgetAmount:
          type: number
          format: double
        isMemberDisabled:
          type: boolean
        isProjectManager:
          type: boolean
        isTimesheetAllowed:
          type: boolean
        isTimesheetApprover:
          type: boolean
        isTimesheetApprovalRequired:
          type: boolean
        canCreateTasks:
          type: boolean
        canDeleteTasks:
          type: boolean
        canCommentOnTasks:
          type: boolean
        canUpdateTasks:
          type: boolean
    ProjectTagItem:
      type: object
      properties:
        ProjectTagID:
          type: integer
          format: int32
        Name:
          type: string
    UpdateProjectModel:
      type: object
      properties:
        ProjectID:
          type: integer
          description: The ID of the Project to update
          format: int32
        FieldsToUpdate:
          type: array
          items:
            type: string
          description: ''
        ProjectTitle:
          type: string
          description: (optional) An updated project title. (255 characters max)
        ProjectNotes:
          type: string
          description: (optional) Any descriptive notes about the project. (2000 characters max)
        TimesheetApprovalRequiredbyDefault:
          type: boolean
          description: Whether timesheet approval should be required by default for newly added project members.
        isTaskRequiredOnTimesheet:
          type: boolean
          description: Whether timesheets entered against this project require a task to be selected.
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        BudgetAmount:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        ProjectStatusCode:
          type: string
          description: 'Update the project status (string, optional): (Possible values: NotStarted, InProgress, Complete, OnHold)'
        ProjectCategoryIDFK:
          type: integer
          format: int32
        ProjectBillableTypeCode:
          type: string
          description: 'The billing method of the project. (string, optional) Possible values: CategoryHourly, NoRate, NotBillable, PersonHourly, ProjectHourly'
        ProjectBudgetTypeCode:
          type: string
          description: 'The project budgeting type. (string, optional) Possible values: NoBudget, PersonHours, ProjectFees, ProjectHours, CategoryHours'
      example:
        ProjectID: 0
        FieldsToUpdate:
          - string
        ProjectTitle: string
        ProjectNotes: string
        TimesheetApprovalRequiredbyDefault: true
        isTaskRequiredOnTimesheet: true
        StartDate: string
        EndDate: string
        BudgetAmount: 0
        BudgetHours: 0
        ProjectStatusCode: string
        ProjectCategoryIDFK: 0
        ProjectBillableTypeCode: string
        ProjectBudgetTypeCode: string
    NewProjectMember:
      type: object
      properties:
        isProjectManager:
          type: boolean
        isTimesheetAllowed:
          type: boolean
        isTimesheetApprover:
          type: boolean
        isTimesheetApprovalRequired:
          type: boolean
        canCreateTasks:
          type: boolean
        canDeleteTasks:
          type: boolean
        canCommentOnTasks:
          type: boolean
        canUpdateTasks:
          type: boolean
        ProjectIDFK:
          type: integer
          description: Required. The ProjectID
          format: int32
        UserIDFK:
          type: integer
          description: Required. The UserID to assign
          format: int32
        CostAmount:
          type: number
          description: 'Optional. If not provided, defaults to the User''s default Cost Amount.'
          format: double
        RateAmount:
          type: number
          description: 'Optional. If not provided, defaults to the User''s default Rate Amount.'
          format: double
        BudgetAmount:
          type: number
          description: Optional
          format: double
      example:
        isProjectManager: true
        isTimesheetAllowed: true
        isTimesheetApprover: true
        isTimesheetApprovalRequired: true
        canCreateTasks: true
        canDeleteTasks: true
        canCommentOnTasks: true
        canUpdateTasks: true
        ProjectIDFK: 0
        UserIDFK: 0
        CostAmount: 0
        RateAmount: 0
        BudgetAmount: 0
    ProjectTimesheetCategoryList:
      type: object
      properties:
        Categories:
          type: array
          items:
            $ref: '#/components/schemas/ProjectTimesheetCategoryDetails'
    ProjectTimesheetCategoryDetails:
      type: object
      properties:
        TimeSheetCategoryIDFK:
          type: integer
          format: int32
        AccountIDFK:
          type: integer
          format: int32
        ProjectIDFK:
          type: integer
          format: int32
        Name:
          type: string
        isBillable:
          type: boolean
        RateAmount:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        CostAmount:
          type: number
          format: double
    AssignProjectTimesheetCategory:
      type: object
      properties:
        ProjectIDFK:
          type: integer
          format: int32
        TimesheetCategoryIDFK:
          type: integer
          format: int32
        isBillable:
          type: boolean
        RateAmount:
          type: number
          format: double
        BudgetHours:
          type: number
          format: double
        CostAmount:
          type: number
          format: double
      example:
        ProjectIDFK: 0
        TimesheetCategoryIDFK: 0
        isBillable: true
        RateAmount: 0
        BudgetHours: 0
        CostAmount: 0
    ScheduleAssignmentList:
      type: object
      properties:
        ScheduleAssignments:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleAssignmentDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    ScheduleAssignmentDetails:
      type: object
      properties:
        ScheduleAssignmentID:
          type: integer
          format: int64
        AccountIDFK:
          type: integer
          format: int32
        UserIDFK:
          type: integer
          format: int32
        ScheduleSeriesIDFK:
          type: integer
          format: int64
        ScheduleDate:
          type: string
          format: date-time
        Duration:
          type: number
          format: double
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    CreateBooking:
      type: object
      properties:
        UserIDFK:
          type: integer
          format: int32
        HoursPerDay:
          type: number
          format: double
        TotalDuration:
          type: number
          format: double
        DurationType:
          type: string
        ScheduleOnDaysOff:
          type: boolean
        ProjectIDFK:
          type: integer
          format: int32
        CategoryIDFK:
          type: integer
          format: int32
        TaskIDFK:
          type: integer
          format: int32
        Notes:
          type: string
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
      example:
        UserIDFK: 0
        HoursPerDay: 0
        TotalDuration: 0
        DurationType: string
        ScheduleOnDaysOff: true
        ProjectIDFK: 0
        CategoryIDFK: 0
        TaskIDFK: 0
        Notes: string
        StartDate: string
        EndDate: string
    ScheduleSeriesDetails:
      type: object
      properties:
        ScheduleSeriesID:
          type: integer
          format: int64
        AccountIDFK:
          type: integer
          format: int32
        UserIDFK:
          type: integer
          format: int32
        Firstname:
          type: string
        Lastname:
          type: string
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        TimeSheetCategoryIDFK:
          type: integer
          format: int32
        TimeSheetCategoryName:
          type: string
        LeaveTypeIDFK:
          type: integer
          format: int32
        LeaveTypeName:
          type: string
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
        HoursPerDay:
          type: number
          format: double
        TotalDuration:
          type: number
          format: double
        ScheduleOnDaysOff:
          type: boolean
        Notes:
          type: string
        TaskIDFK:
          type: integer
          format: int32
        TaskTitle:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        UpdatedByUserIDFK:
          type: integer
          format: int32
    CreateLeave:
      type: object
      properties:
        LeaveUserIDFK:
          type: integer
          format: int32
        LeaveNotify:
          type: boolean
        LeaveHoursPerDay:
          type: number
          format: double
        LeaveTypeIDFK:
          type: integer
          format: int32
        LeaveNotes:
          type: string
        LeaveStartDate:
          type: string
          format: date-time
        LeaveEndDate:
          type: string
          format: date-time
      example:
        LeaveUserIDFK: 0
        LeaveNotify: true
        LeaveHoursPerDay: 0
        LeaveTypeIDFK: 0
        LeaveNotes: string
        LeaveStartDate: string
        LeaveEndDate: string
    EditLeave:
      type: object
      properties:
        ScheduleSeriesID:
          type: integer
          format: int64
        UserIDFK:
          type: integer
          format: int32
        HoursPerDay:
          type: number
          format: double
        LeaveTypeIDFK:
          type: integer
          format: int32
        Notes:
          type: string
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
      example:
        ScheduleSeriesID: '0.0'
        UserIDFK: 0
        HoursPerDay: 0
        LeaveTypeIDFK: 0
        Notes: string
        StartDate: string
        EndDate: string
    EditBooking:
      type: object
      properties:
        ScheduleSeriesID:
          type: integer
          format: int64
        UserIDFK:
          type: integer
          format: int32
        HoursPerDay:
          type: number
          format: double
        TotalDuration:
          type: number
          format: double
        DurationType:
          type: string
        ScheduleOnDaysOff:
          type: boolean
        ProjectIDFK:
          type: integer
          format: int32
        CategoryIDFK:
          type: integer
          format: int32
        TaskIDFK:
          type: integer
          format: int32
        Notes:
          type: string
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
      example:
        ScheduleSeriesID: '0.0'
        UserIDFK: 0
        HoursPerDay: 0
        TotalDuration: 0
        DurationType: string
        ScheduleOnDaysOff: true
        ProjectIDFK: 0
        CategoryIDFK: 0
        TaskIDFK: 0
        Notes: string
        StartDate: string
        EndDate: string
    ScheduleSeriesList:
      type: object
      properties:
        ScheduleSeries:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleSeriesDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    SectionList:
      type: object
      properties:
        Sections:
          type: array
          items:
            $ref: '#/components/schemas/SectionDetails'
        TotalCount:
          type: integer
          format: int32
    SectionDetails:
      type: object
      properties:
        SectionID:
          type: integer
          format: int32
        ProjectIDFK:
          type: integer
          format: int32
        Title:
          type: string
        DisplayOrder:
          type: integer
          format: int32
        StartDateUTC:
          type: string
          format: date-time
        StartDate:
          type: string
          format: date-time
        EndDateUTC:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
    NewSection:
      type: object
      properties:
        ProjectIDFK:
          type: integer
          format: int32
        Title:
          type: string
        StartDateUTC:
          type: string
          format: date-time
        EndDateUTC:
          type: string
          format: date-time
      example:
        ProjectIDFK: 0
        Title: string
        StartDateUTC: string
        EndDateUTC: string
    TaskDropdownList:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/TaskSectionGroup'
          description: List of Task grouped by Section
        pageNumber:
          type: integer
          description: Current page number (1 based)
          format: int32
        PageSize:
          type: integer
          description: Current page size
          format: int32
        hasMore:
          type: boolean
          description: More records probably exist
    TaskSectionGroup:
      type: object
      properties:
        SectionTitle:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDropdownSelection'
    TaskDropdownSelection:
      type: object
      properties:
        TaskID:
          type: string
        Title:
          type: string
    TaskList:
      type: object
      properties:
        Tasks:
          type: array
          items:
            $ref: '#/components/schemas/TaskDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    TaskDetails:
      type: object
      properties:
        TaskID:
          type: integer
          format: int32
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        ProjectCode:
          type: string
        SectionTitle:
          type: string
        SectionIDFK:
          type: integer
          format: int32
        Title:
          type: string
        Description:
          type: string
        DescriptionNoHTML:
          type: string
        AssignedToFirstname:
          type: string
        AssignedToLastname:
          type: string
        AssignedToEmail:
          type: string
        AssignedToUserIDFK:
          type: string
        DateStart:
          type: string
          format: date-time
        DateDue:
          type: string
          format: date-time
        DateCompleted:
          type: string
          format: date-time
        EstimatedEffort:
          type: number
          format: double
        ActualTime:
          type: number
          format: double
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/TagItem'
        AccountTaskTypeIDFK:
          type: integer
          format: int32
        TaskStatusCode:
          type: string
        TaskStatusName:
          type: string
        isCompleteStatus:
          type: boolean
        PercentComplete:
          type: number
          format: double
        TaskPriorityCode:
          type: string
        TaskPriorityName:
          type: string
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
    TagItem:
      type: object
      properties:
        TagID:
          type: integer
          format: int64
        Name:
          type: string
        Color:
          type: string
    UpdateTask:
      required:
        - TaskID
        - FieldsToUpdate
      type: object
      properties:
        TaskID:
          type: integer
          format: int32
        FieldsToUpdate:
          type: array
          items:
            type: string
        SectionIDFK:
          type: integer
          format: int32
        Title:
          type: string
        Description:
          type: string
        AssignedToUserIDFK:
          type: integer
          format: int32
        DateStart:
          type: string
          format: date-time
        DateDue:
          type: string
          format: date-time
        TaskPriorityCode:
          type: string
        EstimatedEffort:
          type: number
          description: Decimal hours
          format: double
        TaskStatusCode:
          type: string
        PercentComplete:
          type: integer
          format: int32
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/NewTag'
      example:
        TaskID: 0
        FieldsToUpdate:
          - string
        SectionIDFK: 0
        Title: string
        Description: string
        AssignedToUserIDFK: 0
        DateStart: string
        DateDue: string
        TaskPriorityCode: string
        EstimatedEffort: 0
        TaskStatusCode: string
        PercentComplete: 0
        Tags:
          - Name: string
            Color: string
    NewTag:
      type: object
      properties:
        Name:
          type: string
        Color:
          type: string
          description: 'Hex color code in format #000000'
    NewTask:
      required:
        - ProjectIDFK
        - SectionIDFK
        - Title
      type: object
      properties:
        ProjectIDFK:
          type: integer
          format: int32
        SectionIDFK:
          type: integer
          format: int32
        AccountTaskTypeIDFK:
          type: integer
          format: int32
        Title:
          type: string
        Description:
          type: string
        AssignedToUserIDFK:
          type: integer
          format: int32
        TaskPriorityCode:
          type: string
        DateStart:
          type: string
          format: date-time
        DateDue:
          type: string
          format: date-time
        EstimatedEffort:
          type: number
          description: Decimal hours
          format: double
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/NewTag'
          description: Collection of tags specifying Name and Color (Hex)
      example:
        ProjectIDFK: 0
        SectionIDFK: 0
        AccountTaskTypeIDFK: 0
        Title: string
        Description: string
        AssignedToUserIDFK: 0
        TaskPriorityCode: string
        DateStart: string
        DateDue: string
        EstimatedEffort: 0
        Tags:
          - Name: string
            Color: string
    TaskStatusList:
      type: object
      properties:
        statuses:
          type: array
          items:
            $ref: '#/components/schemas/TaskStatusDetails'
    TaskStatusDetails:
      type: object
      properties:
        TaskStatusCode:
          type: string
        Name:
          type: string
        Color:
          type: string
        DisplayOrder:
          type: integer
          format: int32
        isComplete:
          type: boolean
        AccountTaskTypeIDFK:
          type: integer
          format: int32
        TaskTypeName:
          type: string
    TaskTypeList:
      type: object
      properties:
        tasktypes:
          type: array
          items:
            $ref: '#/components/schemas/AccountTaskTypeDetails'
    AccountTaskTypeDetails:
      type: object
      properties:
        AccountTaskTypeID:
          type: integer
          format: int32
        Name:
          type: string
        Icon:
          type: string
        IconType:
          type: string
        isDefault:
          type: boolean
    TaxList:
      type: object
      properties:
        Taxes:
          type: array
          items:
            $ref: '#/components/schemas/TaxItem'
    TaxItem:
      type: object
      properties:
        TaxID:
          type: integer
          format: int32
        TaxCode:
          type: string
        Name:
          type: string
        CalculatedPercent:
          type: number
          format: double
        TaxComponents:
          type: array
          items:
            $ref: '#/components/schemas/TaxComponent'
    TaxComponent:
      type: object
      properties:
        TaxComponentID:
          type: integer
          format: int32
        TaxIDFK:
          type: integer
          format: int32
        ComponentTaxCode:
          type: string
        Name:
          type: string
        Percentage:
          type: number
          format: double
        isCompound:
          type: boolean
    TimesheetList:
      type: object
      properties:
        Timesheets:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetListDetails'
        TotalCount:
          type: integer
          format: int32
        PageNumber:
          type: integer
          format: int32
        PageSize:
          type: integer
          format: int32
    TimesheetListDetails:
      type: object
      properties:
        TimesheetEntryID:
          type: integer
          format: int64
        UserIDFK:
          type: integer
          format: int32
        Firstname:
          type: string
        Lastname:
          type: string
        Email:
          type: string
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        ProjectCode:
          type: string
        CustomerIDFK:
          type: integer
          format: int32
        CustomerName:
          type: string
        TimesheetCategoryIDFK:
          type: integer
          format: int32
        CategoryName:
          type: string
        Duration:
          type: number
          format: double
        TimesheetEntryApprovalStatusCode:
          type: string
        HasTimer:
          type: boolean
        TimerStartedAtUTC:
          type: string
          format: date-time
        isBillable:
          type: boolean
        isInvoiced:
          type: boolean
        EntryDate:
          type: string
          format: date-time
        StartTimeLocal:
          type: string
          format: date-time
        StartTimeUTC:
          type: string
          format: date-time
        EndTimeLocal:
          type: string
          format: date-time
        EndTimeUTC:
          type: string
          format: date-time
        TimesheetUserTimeZone:
          type: string
        Notes:
          type: string
        TaskIDFK:
          type: integer
          format: int32
        TaskTitle:
          type: string
        InvoiceIDFK:
          type: integer
          description: This InvoiceIDFK is only included when the api get parameter includeInvoiceDetails==true
          format: int64
        InvoiceLineItemIDFK:
          type: integer
          format: int64
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        DateApproved:
          type: string
          format: date-time
        ApprovedBy:
          type: string
        CustomMetadata:
          type: string
    NewTimesheet:
      type: object
      properties:
        UserIDFK:
          type: integer
          description: UserID for a Timesheet user in Avaza
          format: int32
        ProjectIDFK:
          type: integer
          description: The project to associate the timesheet with.
          format: int32
        TimesheetCategoryIDFK:
          type: integer
          description: The Project timesheet category to link the timesheet to
          format: int32
        Duration:
          type: number
          description: 'The duration of the timesheet, in decimal hours. If null or 0, a timer will be started.'
          format: double
        isInvoiced:
          type: boolean
          description: Optional. False by default. Allows you to mark the timesheet as invoiced in an external system.
        EntryDate:
          type: string
          description: 'The date of the timesheet entry, with an optional start time component.'
          format: date-time
        hasStartEndTime:
          type: boolean
          description: 'If true, the start time will be take from the time component of the Entry Date field, and the end time will be calculated by adding the Duration to the StartDate'
        Notes:
          type: string
          description: Timesheet Notes
        TaskIDFK:
          type: integer
          description: Optional. Link the timesheet to a specific task
          format: int32
        CustomMetadata:
          type: string
          description: Optional. free nvarchar field available via Api to store any additional metadata against a timesheet. We suggest you use Json or your preferred serialisation format. 1000 characters max.
      example:
        UserIDFK: 0
        ProjectIDFK: 0
        TimesheetCategoryIDFK: 0
        Duration: 0
        isInvoiced: true
        EntryDate: string
        hasStartEndTime: true
        Notes: string
        TaskIDFK: 0
        CustomMetadata: string
    TimesheetDetails:
      type: object
      properties:
        TimesheetEntryID:
          type: integer
          format: int64
        UserIDFK:
          type: integer
          format: int32
        Firstname:
          type: string
        Lastname:
          type: string
        Email:
          type: string
        ProjectIDFK:
          type: integer
          format: int32
        ProjectTitle:
          type: string
        ProjectCode:
          type: string
        CustomerIDFK:
          type: integer
          format: int32
        CustomerName:
          type: string
        TimesheetCategoryIDFK:
          type: integer
          format: int32
        CategoryName:
          type: string
        Duration:
          type: number
          format: double
        TimesheetEntryApprovalStatusCode:
          type: string
        HasTimer:
          type: boolean
        TimerStartedAtUTC:
          type: string
          format: date-time
        isBillable:
          type: boolean
        isInvoiced:
          type: boolean
        EntryDate:
          type: string
          format: date-time
        StartTimeLocal:
          type: string
          format: date-time
        StartTimeUTC:
          type: string
          format: date-time
        EndTimeLocal:
          type: string
          format: date-time
        EndTimeUTC:
          type: string
          format: date-time
        TimesheetUserTimeZone:
          type: string
        Notes:
          type: string
        TaskIDFK:
          type: integer
          format: int32
        TaskTitle:
          type: string
        InvoiceIDFK:
          type: integer
          format: int64
        InvoiceLineItemIDFK:
          type: integer
          format: int64
        DateCreated:
          type: string
          format: date-time
        DateUpdated:
          type: string
          format: date-time
        DateApproved:
          type: string
          format: date-time
        ApprovedBy:
          type: string
        CustomMetadata:
          type: string
    UpdateTimesheetModel:
      required:
        - TimeSheetEntryID
        - FieldsToUpdate
        - ProjectIDFK
      type: object
      properties:
        TimeSheetEntryID:
          type: integer
          format: int64
        FieldsToUpdate:
          type: array
          items:
            type: string
        ProjectIDFK:
          type: integer
          format: int32
        TimesheetCategoryIDFK:
          type: integer
          format: int32
        TaskIDFK:
          type: integer
          format: int32
        Duration:
          type: number
          format: double
        EntryDate:
          type: string
          format: date-time
        hasStartEndTime:
          type: boolean
        Notes:
          type: string
        CustomMetadata:
          type: string
          description: Optional. free nvarchar field available via Api to store any additional metadata against a timesheet. We suggest you use Json or your preferred serialisation format. 1000 characters max.
      example:
        TimeSheetEntryID: '0.0'
        FieldsToUpdate:
          - string
        ProjectIDFK: 0
        TimesheetCategoryIDFK: 0
        TaskIDFK: 0
        Duration: 0
        EntryDate: string
        hasStartEndTime: true
        Notes: string
        CustomMetadata: string
    TimesheetSummaryRequest:
      type: object
      properties:
        GroupBy:
          type: array
          items:
            type: string
          description: '(Optional) Combine one, two or three levels of Grouping. Combine these possible grouping values: "Customer", "Project", "Category", "User", "Task", "Year", "Month", "Day", "Week".'
        EntryDateFrom:
          type: string
          description: '(Required) Filter for timesheets greater or equal to the specified date. e.g. 2019-01-25. You can optionally include a time component, otherwise it assumes 00:00'
          format: date-time
        EntryDateTo:
          type: string
          description: '(Required) Filter for timesheets with an entry date smaller or equal to the specified  date. e.g. 2019-01-25. You can optionally include a time component, otherwise it assumes 00:00'
          format: date-time
        UserID:
          type: array
          items:
            type: integer
            format: int32
          description: '(Optional) Defaults to the current user. Provide one or more UserIDs of Users whose timesheets should be retrieved. If the current user doesn''t have impersonation rights, then they will only see their own data.'
        ProjectID:
          type: integer
          description: (Optional) Filter by Project
          format: int32
        isBillable:
          type: boolean
          description: (Optional) Filter by the billable status of Timesheets.
        isInvoiced:
          type: boolean
          description: (Optional) Filter for timesheets by whether they have been Invoiced or not.
    TimesheetSummaryResult:
      type: object
      properties:
        EntryDateFrom:
          type: string
          format: date-time
        EntryDateTo:
          type: string
          format: date-time
        TotalHours:
          type: number
          format: double
        BillableHours:
          type: number
          format: double
        UserID:
          type: array
          items:
            type: integer
            format: int32
        GroupingLevels:
          type: array
          items:
            type: string
        GroupData:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetSummaryGroup'
    TimesheetSummaryGroup:
      type: object
      properties:
        GroupID:
          type: string
        GroupName:
          type: string
        TotalHours:
          type: number
          format: double
        BillableHours:
          type: number
          format: double
        GroupData:
          type: array
          items:
            $ref: '#/components/schemas/TimesheetSummaryGroup'
    UserList:
      type: object
      properties:
        Users:
          type: array
          items:
            $ref: '#/components/schemas/UserDetails'
    UserDetails:
      type: object
      properties:
        UserID:
          type: integer
          format: int32
        AccountIDFK:
          type: integer
          format: int32
        Email:
          type: string
        Firstname:
          type: string
        Lastname:
          type: string
        PositionTitle:
          type: string
        Phone:
          type: string
        Mobile:
          type: string
        TimeZone:
          type: string
          description: Windows Timezone ID
        IANATimezone:
          type: string
          description: IANA tz database timezone name
        isTeamMember:
          type: boolean
        CompanyIDFK:
          type: integer
          format: int32
        CompanyName:
          type: string
        DefaultBillableRate:
          type: number
          format: double
        DefaultCostRate:
          type: number
          format: double
        MondayAvailableHours:
          type: number
          format: double
        TuesdayAvailableHours:
          type: number
          format: double
        WednesdayAvailableHours:
          type: number
          format: double
        ThursdayAvailableHours:
          type: number
          format: double
        FridayAvailableHours:
          type: number
          format: double
        SaturdayAvailableHours:
          type: number
          format: double
        SundayAvailableHours:
          type: number
          format: double
        Roles:
          type: array
          items:
            $ref: '#/components/schemas/RoleDetails'
        Tags:
          type: array
          items:
            $ref: '#/components/schemas/UserTagDetails'
    RoleDetails:
      type: object
      properties:
        RoleCode:
          type: string
        RoleName:
          type: string
    UserTagDetails:
      type: object
      properties:
        UserTagID:
          type: integer
          format: int32
        UserTagName:
          type: string
    CreateSubscription:
      required:
        - target_url
        - event
      type: object
      properties:
        target_url:
          type: string
          description: The URL that should be notified of the event.
        event:
          type: string
          description: 'The event code to be notified about. Possible values: company_created, contact_created, invoice_created, invoice_sent, project_created, task_created'
        secret:
          type: string
          description: 'Optional Secret string (255 char max). If provided, the secret will be BASE 64 encoded and used as a basic authentication http header with webhook notifications. i.e. Authorization Basic [BASE64 of Secret]"'
      description: New Subscription to be Created
      example:
        target_url: string
        event: string
        secret: string
    SubscribeResult:
      type: object
      properties:
        ID:
          type: integer
          format: int32
    WebhookList:
      type: object
      properties:
        Webhooks:
          type: array
          items:
            $ref: '#/components/schemas/WebhookDetails'
    WebhookDetails:
      type: object
      properties:
        SubscriptionID:
          type: integer
          format: int32
        EventCode:
          type: string
        NotificationURL:
          type: string
        UserIDFK:
          type: integer
          format: int32
    ExpenseIDs:
      type: array
      items:
        type: integer
        format: int64
      example:
        - '0.0'
    ApiExpenseApprovalSubmitPost200ApplicationJsonResponse:
      type: object
    ApiExpenseApprovalSubmitPost200TextJsonResponse:
      type: object
    ApiExpenseApprovalSubmitPost200ApplicationXmlResponse:
      type: object
    ApiExpenseApprovalSubmitPost200TextXmlResponse:
      type: object
    ApiSectionDelete200ApplicationJsonResponse:
      type: object
    ApiSectionDelete200TextJsonResponse:
      type: object
    ApiSectionDelete200ApplicationXmlResponse:
      type: object
    ApiSectionDelete200TextXmlResponse:
      type: object
    ApiTaskDelete200ApplicationJsonResponse:
      type: object
    ApiTaskDelete200TextJsonResponse:
      type: object
    ApiTaskDelete200ApplicationXmlResponse:
      type: object
    ApiTaskDelete200TextXmlResponse:
      type: object
    ApiTimesheetIdDelete200ApplicationJsonResponse:
      type: object
    ApiTimesheetIdDelete200TextJsonResponse:
      type: object
    ApiTimesheetIdDelete200ApplicationXmlResponse:
      type: object
    ApiTimesheetIdDelete200TextXmlResponse:
      type: object
    ApiTimesheetSubmissionPost200ApplicationJsonResponse:
      type: object
    ApiTimesheetSubmissionPost200TextJsonResponse:
      type: object
    ApiTimesheetSubmissionPost200ApplicationXmlResponse:
      type: object
    ApiTimesheetSubmissionPost200TextXmlResponse:
      type: object
    ApiTimesheetTimerGet200ApplicationJsonResponse:
      type: object
    ApiTimesheetTimerGet200TextJsonResponse:
      type: object
    ApiTimesheetTimerGet200ApplicationXmlResponse:
      type: object
    ApiTimesheetTimerGet200TextXmlResponse:
      type: object
    ApiTimesheetTimerIdPost200ApplicationJsonResponse:
      type: object
    ApiTimesheetTimerIdPost200TextJsonResponse:
      type: object
    ApiTimesheetTimerIdPost200ApplicationXmlResponse:
      type: object
    ApiTimesheetTimerIdPost200TextXmlResponse:
      type: object
    ApiTimesheetTimerIdDelete200ApplicationJsonResponse:
      type: object
    ApiTimesheetTimerIdDelete200TextJsonResponse:
      type: object
    ApiTimesheetTimerIdDelete200ApplicationXmlResponse:
      type: object
    ApiTimesheetTimerIdDelete200TextXmlResponse:
      type: object
    ApiWebhookDelete200ApplicationJsonResponse:
      type: object
    ApiWebhookDelete200TextJsonResponse:
      type: object
    ApiWebhookDelete200ApplicationXmlResponse:
      type: object
    ApiWebhookDelete200TextXmlResponse:
      type: object
    ApiWebhookIdDelete200ApplicationJsonResponse:
      type: object
    ApiWebhookIdDelete200TextJsonResponse:
      type: object
    ApiWebhookIdDelete200ApplicationXmlResponse:
      type: object
    ApiWebhookIdDelete200TextXmlResponse:
      type: object
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: [ ]
  - apiKeyQuery: [ ]